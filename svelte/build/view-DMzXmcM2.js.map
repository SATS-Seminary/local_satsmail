{"version":3,"file":"view-DMzXmcM2.js","sources":["../node_modules/svelte/src/runtime/internal/globals.js","../node_modules/svelte/src/runtime/internal/animations.js","../src/lib/state.ts","../src/components/CourseLink.svelte","../node_modules/svelte/src/runtime/easing/index.js","../node_modules/svelte/src/runtime/transition/index.js","../src/components/ModalDialog.svelte","../src/components/ErrorModal.svelte","../src/components/DeleteButton.svelte","../src/components/DeleteForeverButton.svelte","../src/components/LabelModal.svelte","../src/components/LabelsButton.svelte","../src/components/MoreActionsButton.svelte","../src/components/PagingButtons.svelte","../src/components/RestoreButton.svelte","../src/components/BottomToolBar.svelte","../node_modules/svelte/src/runtime/animate/index.js","../src/components/ListMessageCheckbox.svelte","../src/components/ListMessageStar.svelte","../src/components/ListMessageUsers.svelte","../src/components/ListMessageSubject.svelte","../src/components/CourseBadge.svelte","../src/components/LabelBadge.svelte","../src/components/ListMessageLabels.svelte","../src/components/ListMessageAttachments.svelte","../src/components/ListMessageTime.svelte","../src/components/ListAlert.svelte","../src/components/List.svelte","../src/components/HtmlHead.svelte","../src/components/MessageActions.svelte","../src/components/MessageAttachments.svelte","../src/components/MessageButtons.svelte","../src/components/MessageContent.svelte","../src/components/MessageLabels.svelte","../src/components/UserFullName.svelte","../src/components/UserPicture.svelte","../src/components/MessageReference.svelte","../src/components/MessageUsers.svelte","../src/components/Message.svelte","../src/components/DraftFormRecipients.svelte","../src/components/DraftFormTimeAndLabels.svelte","../src/lib/services.ts","../src/components/DraftFormUserSearch.svelte","../src/components/SendButton.svelte","../src/components/DraftForm.svelte","../src/components/PerPageSelect.svelte","../src/components/PreferencesDialog.svelte","../src/components/HelpPopover.svelte","../src/components/SearchOptions.svelte","../src/components/IncrementalSearch.svelte","../src/components/SearchBox.svelte","../src/components/Toasts.svelte","../src/components/BackButton.svelte","../src/components/SelectAllButton.svelte","../src/components/TopToolBar.svelte","../src/components/View.svelte","../node_modules/svelte/src/runtime/store/index.js","../src/lib/store.ts","../src/view.ts"],"sourcesContent":["/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { identity as linear, noop } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {import('./private.js').PositionRect} from\n * @param {import('./private.js').AnimationFn} fn\n */\nexport function create_animation(node, from, fn, params) {\n\tif (!from) return noop;\n\tconst to = node.getBoundingClientRect();\n\tif (\n\t\tfrom.left === to.left &&\n\t\tfrom.right === to.right &&\n\t\tfrom.top === to.top &&\n\t\tfrom.bottom === to.bottom\n\t)\n\t\treturn noop;\n\tconst {\n\t\tdelay = 0,\n\t\tduration = 300,\n\t\teasing = linear,\n\t\t// @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n\t\tstart: start_time = now() + delay,\n\t\t// @ts-ignore todo:\n\t\tend = start_time + duration,\n\t\ttick = noop,\n\t\tcss\n\t} = fn(node, { from, to }, params);\n\tlet running = true;\n\tlet started = false;\n\tlet name;\n\t/** @returns {void} */\n\tfunction start() {\n\t\tif (css) {\n\t\t\tname = create_rule(node, 0, 1, duration, delay, easing, css);\n\t\t}\n\t\tif (!delay) {\n\t\t\tstarted = true;\n\t\t}\n\t}\n\t/** @returns {void} */\n\tfunction stop() {\n\t\tif (css) delete_rule(node, name);\n\t\trunning = false;\n\t}\n\tloop((now) => {\n\t\tif (!started && now >= start_time) {\n\t\t\tstarted = true;\n\t\t}\n\t\tif (started && now >= end) {\n\t\t\ttick(1, 0);\n\t\t\tstop();\n\t\t}\n\t\tif (!running) {\n\t\t\treturn false;\n\t\t}\n\t\tif (started) {\n\t\t\tconst p = now - start_time;\n\t\t\tconst t = 0 + 1 * easing(p / duration);\n\t\t\ttick(t, 1 - t);\n\t\t}\n\t\treturn true;\n\t});\n\tstart();\n\ttick(0, 1);\n\treturn stop;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {void}\n */\nexport function fix_position(node) {\n\tconst style = getComputedStyle(node);\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tadd_transform(node, a);\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {import('./private.js').PositionRect} a\n * @returns {void}\n */\nexport function add_transform(node, a) {\n\tconst b = node.getBoundingClientRect();\n\tif (a.left !== b.left || a.top !== b.top) {\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t}\n}\n","/*\n * SPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n * SPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n *\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\nexport interface Attachment {\n    readonly filepath: string;\n    readonly filename: string;\n    readonly mimetype: string;\n    readonly filesize: number;\n    readonly fileurl: string;\n    readonly iconurl: string;\n}\n\nexport interface Course {\n    readonly id: number;\n    readonly shortname: string;\n    readonly fullname: string;\n    readonly visible: boolean;\n    readonly groupmode: GroupMode;\n    readonly unread: number;\n    readonly drafts: number;\n}\n\nexport enum DeletedStatus {\n    NotDeleted = 0,\n    Deleted = 1,\n    DeletedForever = 2,\n}\n\nexport type Dialog =\n    | 'preferences'\n    | 'createlabel'\n    | 'editlabel'\n    | 'deletelabel'\n    | 'restore'\n    | 'deleteforever'\n    | 'emptytrash';\n\nexport interface Group {\n    readonly id: number;\n    readonly name: string;\n}\n\nexport enum GroupMode {\n    No = 0,\n    Separate = 1,\n    Visible = 2,\n}\n\nexport interface InitialData {\n    readonly userid: number;\n    readonly settings: Settings;\n    readonly preferences: Preferences;\n    readonly strings: Strings;\n    readonly mobile: boolean;\n}\n\nexport interface Label {\n    readonly id: number;\n    readonly name: string;\n    readonly color: string;\n    readonly unread: number;\n    readonly courses: ReadonlyArray<LabelCourse>;\n}\n\nexport interface LabelCourse {\n    readonly id: number;\n    readonly unread: number;\n}\n\nexport interface Message extends MessageSummary {\n    readonly content: string;\n    readonly format: number;\n    readonly attachments: ReadonlyArray<Attachment>;\n    readonly references: ReadonlyArray<Reference>;\n    readonly javascript: string;\n}\n\nexport interface MessageData {\n    readonly courseid: number;\n    readonly to: number[];\n    readonly cc: number[];\n    readonly bcc: number[];\n    readonly subject: string;\n    readonly content: string;\n    readonly format: number;\n    readonly draftitemid: number;\n}\n\nexport interface MessageForm {\n    readonly editorhtml: string;\n    readonly filemanagerhtml: string;\n    readonly javascript: string;\n}\n\nexport interface MessageProcessor {\n    name: string;\n    displayname: string;\n    enabled: boolean;\n    locked: boolean;\n}\n\nexport interface MessageProcessorPreference {\n    name: string;\n    enabled: boolean;\n}\n\nexport interface MessageSummary {\n    readonly id: number;\n    readonly subject: string;\n    readonly numattachments: number;\n    readonly draft: boolean;\n    readonly time: number;\n    readonly shorttime: string;\n    readonly fulltime: string;\n    readonly unread: boolean;\n    readonly starred: boolean;\n    readonly deleted: boolean;\n    readonly course: Course;\n    readonly sender: User;\n    readonly recipients: ReadonlyArray<Recipient>;\n    readonly labels: ReadonlyArray<Label>;\n}\n\nexport interface Preferences {\n    readonly perpage: number;\n    readonly markasread: boolean;\n    readonly notifications: ReadonlyArray<string>;\n}\n\nexport interface Recipient extends User {\n    readonly type: RecipientType;\n    readonly isvalid?: boolean;\n}\n\nexport enum RecipientType {\n    TO = 'to',\n    CC = 'cc',\n    BCC = 'bcc',\n}\n\nexport interface Reference {\n    readonly id: number;\n    readonly subject: string;\n    readonly content: string;\n    readonly format: number;\n    readonly time: number;\n    readonly shorttime: string;\n    readonly fulltime: string;\n    readonly sender: User;\n    readonly attachments: ReadonlyArray<Attachment>;\n}\n\nexport interface Role {\n    readonly id: number;\n    readonly name: string;\n}\n\nexport interface SearchParams {\n    readonly content?: string;\n    readonly sendername?: string;\n    readonly recipientname?: string;\n    readonly unread?: boolean;\n    readonly withfilesonly?: boolean;\n    readonly maxtime?: number;\n    readonly startid?: number;\n    readonly reverse?: boolean;\n}\n\nexport type SelectAllType = 'all' | 'none' | 'read' | 'unread' | 'starred' | 'unstarred';\n\nexport interface ServiceError {\n    readonly message: string;\n    readonly debuginfo?: string;\n    readonly backtrace?: string;\n    readonly stacktrace?: string;\n}\n\nexport interface Settings {\n    readonly maxrecipients: number;\n    readonly autosaveinterval: number;\n    readonly usersearchlimit: number;\n    readonly globaltrays: ReadonlyArray<string>;\n    readonly coursetrays: 'none' | 'unread' | 'all';\n    readonly coursetraysname: 'shortname' | 'fullname';\n    readonly coursebadges: 'hidden' | 'shortname' | 'fullname';\n    readonly coursebadgeslength: number;\n    readonly filterbycourse: 'hidden' | 'shortname' | 'fullname';\n    readonly incrementalsearch: boolean;\n    readonly incrementalsearchlimit: number;\n    readonly courselink: 'hidden' | 'shortname' | 'fullname';\n    readonly messageprocessors: ReadonlyArray<MessageProcessor>;\n}\n\nexport interface State {\n    /* General information fetched only once. */\n    readonly userid: number;\n    readonly settings: Settings;\n    readonly preferences: Preferences;\n    readonly strings: Strings;\n    readonly incrementalSearchStopId?: number;\n    readonly mobile: boolean;\n\n    /* URL parameters of the current and previous view. */\n    readonly params: ViewParams;\n    readonly prevParams?: ViewParams;\n\n    /* Data fetched using web services for the current view.  */\n    readonly unread: number;\n    readonly drafts: number;\n    readonly courses: ReadonlyArray<Course>;\n    readonly labels: ReadonlyArray<Label>;\n    readonly totalCount: number;\n    readonly listMessages: ReadonlyArray<MessageSummary>;\n    readonly message?: Message;\n    readonly messageOffset?: number;\n    readonly nextMessageId?: number;\n    readonly prevMessageId?: number;\n\n    /* Data used for editing drafts. */\n    readonly draftForm?: MessageForm;\n    readonly draftRoles?: ReadonlyArray<Role>;\n    readonly draftGroups?: ReadonlyArray<Group>;\n    readonly draftData?: MessageData;\n    readonly draftSaved?: boolean;\n\n    /* Transient interface state. */\n    readonly loading: boolean;\n    readonly error?: ServiceError;\n    readonly selectedMessages: ReadonlyMap<number, MessageSummary>;\n    readonly toasts: ReadonlyArray<Toast>;\n    readonly viewportSize: number;\n    readonly navigationId: number;\n}\n\nexport type Strings = Record<string, string>;\n\nexport interface Toast {\n    readonly text: string;\n    readonly undo?: () => void;\n}\n\nexport type Tray = 'inbox' | 'sent' | 'drafts' | 'starred' | 'course' | 'label' | 'trash';\n\nexport interface User {\n    readonly id: number;\n    readonly firstname: string;\n    readonly lastname: string;\n    readonly fullname: string;\n    readonly pictureurl: string;\n    readonly profileurl: string;\n    readonly sortorder: string;\n}\n\nexport interface ViewParams {\n    readonly tray?: Tray;\n    readonly courseid?: number;\n    readonly labelid?: number;\n    readonly messageid?: number;\n    readonly offset?: number;\n    readonly search?: SearchParams;\n    readonly dialog?: Dialog;\n}\n\nexport enum ViewportSize {\n    SM = 576,\n    MD = 768,\n    LG = 992,\n    XL = 1200,\n}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n    import { formatCourseName, replaceStringParams } from '../lib/utils';\n\n    export let store: Store;\n\n    $: course = $store.courses.find((c) => c.id == $store.params.courseid);\n</script>\n\n{#if ['shortname', 'fullname'].includes($store.settings.courselink)}\n    <div class=\"local-mail-course-link mb-3 mb-lg-4\">\n        {#if course}\n            <nav class=\"d-flex align-items-center\">\n                <a\n                    class=\"text-truncate\"\n                    href={window.M.cfg.wwwroot + '/course/view.php?id=' + $store.params.courseid}\n                    title={replaceStringParams(\n                        $store.strings.gotocourse,\n                        formatCourseName(course, 'fullname'),\n                    )}\n                >\n                    {formatCourseName(course, $store.settings.courselink)}\n                </a>\n            </nav>\n        {:else}\n            &nbsp;\n        {/if}\n    </div>\n{/if}\n\n<style>\n    .local-mail-course-link {\n        margin-top: -0.5rem;\n    }\n</style>\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { onDestroy, onMount } from 'svelte';\n    import { fade, fly } from 'svelte/transition';\n    import { blur } from '../actions/blur';\n\n    export let title: string;\n    export let cancelText = '';\n    export let confirmText = '';\n    export let onCancel: () => void;\n    export let onConfirm: (() => void) | undefined = undefined;\n    export let confirmClass = 'btn-primary';\n    export let confirmDisabled = false;\n\n    let node: HTMLElement;\n\n    onMount(() => {\n        document.body.classList.add('modal-open');\n        node.focus();\n    });\n\n    onDestroy(() => {\n        document.body.classList.remove('modal-open');\n    });\n\n    const handleKey = (event: KeyboardEvent) => {\n        if (event.key == 'Escape') {\n            onCancel();\n        }\n    };\n</script>\n\n<svelte:body on:keyup={handleKey} />\n\n<div\n    class=\"modal show\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-label={title}\n    aria-modal=\"true\"\n    bind:this={node}\n    transition:fly|global={{ y: -100 }}\n    use:blur={onCancel}\n>\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header align-items-center\">\n                <h5 class=\"modal-title\">\n                    {title}\n                </h5>\n                <button\n                    type=\"button\"\n                    class=\"close d-flex align-items-center justify-content ml-auto\"\n                    aria-label={cancelText}\n                    on:click={onCancel}\n                >\n                    <span aria-hidden=\"true\" class=\"fa fa-times\" />\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <slot />\n            </div>\n            {#if cancelText || (confirmText && onConfirm)}\n                <div class=\"modal-footer\">\n                    {#if cancelText}\n                        <button type=\"button\" class=\"btn btn-secondary\" on:click={onCancel}>\n                            {cancelText}\n                        </button>\n                    {/if}\n                    {#if confirmText && onConfirm}\n                        <button\n                            type=\"button\"\n                            class=\"btn {confirmClass}\"\n                            disabled={confirmDisabled}\n                            on:click={onConfirm}\n                        >\n                            {confirmText}\n                        </button>\n                    {/if}\n                </div>\n            {/if}\n        </div>\n    </div>\n</div>\n\n<div class=\"modal-backdrop show\" transition:fade|global />\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n    import ModalDialog from './ModalDialog.svelte';\n\n    export let store: Store;\n</script>\n\n{#if $store.error}\n    <ModalDialog title={$store.strings.error} onCancel={() => store.setError()}>\n        <p>{$store.error?.message}</p>\n        {#if $store.error?.debuginfo}\n            <p>{$store.error?.debuginfo}</p>\n        {/if}\n        {#if $store.error?.backtrace || $store.error?.stacktrace}\n            <pre>{$store.error?.backtrace || $store.error?.stacktrace}</pre>\n        {/if}\n    </ModalDialog>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { DeletedStatus } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let bottom = false;\n</script>\n\n<button\n    type=\"button\"\n    class=\"local-mail-delete-button btn\"\n    class:btn-secondary={!bottom}\n    class:btn-light={bottom}\n    class:disabled={!$store.selectedMessages.size}\n    disabled={!$store.selectedMessages.size}\n    title={$store.strings.movetotrash}\n    on:click={() =>\n        store.setDeleted(Array.from($store.selectedMessages.keys()), DeletedStatus.Deleted, true)}\n>\n    <i class=\"fa fa-fw fa-trash\" />\n</button>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { DeletedStatus } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import ModalDialog from './ModalDialog.svelte';\n\n    export let store: Store;\n    export let bottom = false;\n\n    const confirm = () => {\n        store.hideDialog();\n        store.setDeleted(\n            Array.from($store.selectedMessages.keys()),\n            DeletedStatus.DeletedForever,\n            true,\n        );\n    };\n</script>\n\n<button\n    type=\"button\"\n    class=\"local-mail-delete-forever-button btn\"\n    class:btn-secondary={!bottom}\n    class:btn-light={bottom}\n    disabled={!$store.selectedMessages.size}\n    title={$store.strings.deleteforever}\n    on:click={() => store.showDialog('deleteforever')}\n>\n    <i class=\"fa fa-fw fa-trash\" />\n</button>\n\n{#if $store.params.dialog == 'deleteforever'}\n    <ModalDialog\n        title={$store.strings.deleteforever}\n        cancelText={$store.strings.cancel}\n        confirmText={$store.strings.deleteforever}\n        confirmClass=\"btn-danger\"\n        onCancel={() => store.hideDialog()}\n        onConfirm={confirm}\n    >\n        {$store.strings[\n            $store.selectedMessages.size == 1\n                ? 'deleteforevermessageconfirm'\n                : 'deleteforeverselectedconfirm'\n        ]}\n    </ModalDialog>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import type { Label } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import { colors, normalizeLabelName } from '../lib/utils';\n    import ModalDialog from './ModalDialog.svelte';\n\n    export let store: Store;\n    export let label: Label | undefined = undefined;\n    export let onCancel: () => void;\n    export let onSubmit: (name: string, color: string) => void;\n\n    let nameEl: HTMLElement;\n\n    $: id = `local-mail-label-modal-${label?.id || 'new'}`;\n    $: name = label?.name || '';\n    $: selectedColor = label?.color || colors[0];\n    $: emptyName = normalizeLabelName(name) == '';\n    $: repeatedName = $store.labels.some(\n        (l) => l.id != label?.id && l.name == normalizeLabelName(name),\n    );\n    $: validName = !emptyName && !repeatedName;\n\n    const submit = async () => {\n        onSubmit(name, selectedColor);\n    };\n\n    onMount(() => nameEl.focus());\n</script>\n\n<ModalDialog\n    title={$store.strings[label ? 'editlabel' : 'newlabel']}\n    cancelText={$store.strings.cancel}\n    {onCancel}\n    confirmText={$store.strings[label ? 'save' : 'create']}\n    confirmDisabled={!validName}\n    onConfirm={submit}\n>\n    <form on:submit|preventDefault={submit}>\n        <div class=\"form-group mb-0\">\n            <label for=\"local-mail-label-modal-name\">{$store.strings.name}</label>\n            <input\n                type=\"text\"\n                required\n                class=\"form-control is-invalid\"\n                class:is-valid={validName}\n                class:is-invalid={!validName}\n                id=\"{id}-name\"\n                bind:this={nameEl}\n                bind:value={name}\n            />\n            <div class=\"invalid-feedback\">\n                {#if repeatedName}\n                    {$store.strings.errorrepeatedlabelname}\n                {:else}\n                    &nbsp;\n                {/if}\n            </div>\n            <div class=\"valid-feedback\">&nbsp;</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"{id}-color\">\n                {$store.strings.color}\n            </label>\n            <div role=\"radiogroup\" class=\"local-mail-label-modal-color\" id=\"{id}-color\">\n                {#each colors as color (color)}\n                    <button\n                        role=\"radio\"\n                        aria-checked={color == selectedColor}\n                        tabindex=\"0\"\n                        title={$store.strings[`color${color}`]}\n                        class=\"local-mail-label-modal-color-option btn\"\n                        style={`color: var(--local-mail-color-${color}-fg, var(--local-mail-color-gray-fg));` +\n                            `background-color: var(--local-mail-color-${color}-bg, var(--local-mail-color-gray-bg))`}\n                        on:click|preventDefault={() => {\n                            selectedColor = color;\n                        }}\n                    >\n                        {#if color == selectedColor}\n                            <i class=\"fa fa-check local-mail-label-modal-color-option-check\" />\n                        {:else}\n                            <span aria-hidden=\"true\">a</span>\n                        {/if}\n                    </button>\n                {/each}\n            </div>\n        </div>\n    </form>\n</ModalDialog>\n\n<style>\n    .local-mail-label-modal-color {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    .local-mail-label-modal-color-option {\n        width: 2rem;\n        height: 2rem;\n        margin-right: 0.5rem;\n        margin-bottom: 0.5rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: var(--local-mail-color-gray-fg);\n        background-color: var(--local-mail-color-gray-bg);\n    }\n\n    .local-mail-label-modal-color-option:last-child {\n        margin-right: 0;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { blur } from '../actions/blur';\n    import type { Store } from '../lib/store';\n    import LabelModal from './LabelModal.svelte';\n\n    export let store: Store;\n    export let bottom = false;\n\n    let expanded = false;\n\n    let selectedLabels: ReadonlyMap<number, 'false' | 'mixed' | 'true'> = new Map();\n\n    $: selectedLabels = new Map(\n        $store.labels.map((label) => {\n            const messages = Array.from($store.selectedMessages.values()).filter((message) =>\n                message.labels.some((messageLabel) => messageLabel.id == label.id),\n            );\n            return [\n                label.id,\n                messages.length == 0\n                    ? 'false'\n                    : messages.length < $store.selectedMessages.size\n                      ? 'mixed'\n                      : 'true',\n            ];\n        }),\n    );\n\n    $: applyEnabled = Array.from(selectedLabels.entries()).some(([labelid, selected]) =>\n        Array.from($store.selectedMessages.values()).some(\n            (message) =>\n                (selected == 'true' && message.labels.every((label) => label.id != labelid)) ||\n                (selected == 'false' && message.labels.some((label) => label.id == labelid)),\n        ),\n    );\n\n    $: labelIconClass = (labelid: number) => {\n        if (selectedLabels.get(labelid) == 'false') {\n            return 'fa-square-o';\n        } else if (selectedLabels.get(labelid) == 'mixed') {\n            return 'fa-minus-square-o';\n        } else {\n            return 'fa-check-square-o';\n        }\n    };\n\n    const closeMenu = () => {\n        expanded = false;\n    };\n\n    const toggleMenu = () => {\n        expanded = !expanded;\n    };\n\n    const toggleLabel = (labelid: number) => {\n        selectedLabels = new Map(\n            Array.from(selectedLabels.entries()).map(([id, selected]) => [\n                id,\n                id == labelid ? (selected == 'true' ? 'false' : 'true') : selected,\n            ]),\n        );\n    };\n\n    const applyLabels = () => {\n        expanded = false;\n        store.setLabels(\n            Array.from(selectedLabels.keys()).filter((id) => selectedLabels.get(id) == 'true'),\n            Array.from(selectedLabels.keys()).filter((id) => selectedLabels.get(id) == 'false'),\n        );\n    };\n\n    const newLabel = () => {\n        closeMenu();\n        store.showDialog('createlabel');\n    };\n\n    const createLabel = async (name: string, color: string) => {\n        store.hideDialog();\n        store.createLabel(name, color);\n    };\n</script>\n\n<div class=\"btn-group\" class:dropup={bottom} role=\"group\" use:blur={closeMenu}>\n    <button\n        type=\"button\"\n        class=\"local-mail-action-label-button btn dropdown-toggle\"\n        class:btn-secondary={!bottom}\n        class:btn-light={bottom}\n        class:disabled={!$store.selectedMessages.size}\n        disabled={!$store.selectedMessages.size}\n        aria-expanded={expanded}\n        title={$store.strings.labels}\n        on:click={toggleMenu}\n    >\n        <i class=\"fa fa-fw fa-tag\" />\n    </button>\n    {#if expanded}\n        <div class=\"dropdown-menu show\">\n            {#each $store.labels as label (label.id)}\n                <button\n                    type=\"button\"\n                    class=\"dropdown-item local-mail-action-label-button-item\"\n                    on:click={() => toggleLabel(label.id)}\n                >\n                    <i class=\"fa fa-fw {labelIconClass(label.id)}\" />\n                    {label.name}\n                </button>\n            {/each}\n            {#if $store.labels.length > 0}\n                <div class=\"dropdown-divider\" />\n            {/if}\n            {#if applyEnabled}\n                <button\n                    type=\"button\"\n                    class=\"dropdown-item local-mail-action-label-button-item\"\n                    on:click={applyLabels}\n                >\n                    {$store.strings.apply}\n                </button>\n            {:else}\n                <button\n                    type=\"button\"\n                    class=\"dropdown-item local-mail-action-label-button-item\"\n                    on:click={newLabel}\n                >\n                    {$store.strings.newlabel}\n                </button>\n            {/if}\n        </div>\n    {/if}\n    {#if $store.params.dialog == 'createlabel'}\n        <LabelModal {store} onCancel={() => store.hideDialog()} onSubmit={createLabel} />\n    {/if}\n</div>\n\n<style>\n    .local-mail-action-label-button::after {\n        display: none !important;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { blur } from '../actions/blur';\n    import type { Store } from '../lib/store';\n    import { replaceStringParams } from '../lib/utils';\n    import ModalDialog from './ModalDialog.svelte';\n    import LabelModal from './LabelModal.svelte';\n\n    export let store: Store;\n    export let bottom = false;\n\n    let expanded = false;\n\n    $: label =\n        $store.params.tray == 'label' && $store.message == null\n            ? $store.labels.find((label) => label.id == $store.params.labelid)\n            : null;\n\n    $: messages = Array.from($store.selectedMessages.values());\n    $: someRead = messages.some((message) => !message.draft && !message.unread);\n    $: someUnread = messages.some((message) => !message.draft && message.unread);\n    $: someStarred = messages.some((message) => message.starred);\n    $: someUnstarred = messages.some((message) => !message.starred);\n    $: disabled =\n        $store.params.tray == 'trash'\n            ? !$store.totalCount\n            : !label && !someRead && !someUnread && !someStarred && !someUnstarred;\n\n    const closeMenu = () => {\n        expanded = false;\n    };\n\n    const toggleMenu = () => {\n        expanded = !expanded;\n    };\n\n    const setUnread = (unread: boolean) => {\n        closeMenu();\n        store.setUnread(\n            messages.filter((message) => !message.draft).map((message) => message.id),\n            unread,\n        );\n    };\n\n    const setStarred = (starred: boolean) => {\n        closeMenu();\n        store.setStarred(\n            messages.map((message) => message.id),\n            starred,\n        );\n    };\n\n    const openEditLabelModal = () => {\n        closeMenu();\n        store.showDialog('editlabel');\n    };\n\n    const confirmEditLabel = (name: string, color: string) => {\n        store.hideDialog();\n        if (label) {\n            store.updateLabel(label.id, name, color);\n        }\n    };\n\n    const openDeleteLabelModal = () => {\n        closeMenu();\n        store.showDialog('deletelabel');\n    };\n\n    const deletelabelconfirm = () => {\n        store.hideDialog();\n        store.deleteLabel($store.params.labelid || 0);\n    };\n\n    const openEmptyTrashModal = () => {\n        closeMenu();\n        store.showDialog('emptytrash');\n    };\n\n    const confirmEmptyTrash = () => {\n        store.hideDialog();\n        store.emptyTrash($store.params.courseid);\n    };\n</script>\n\n<div class=\"btn-group\" class:dropup={bottom} use:blur={closeMenu}>\n    <button\n        type=\"button\"\n        class=\"local-mail-action-more-button btn dropdown-toggle\"\n        class:btn-secondary={!bottom}\n        class:btn-light={bottom}\n        class:disabled\n        {disabled}\n        aria-expanded={expanded}\n        title={$store.strings.more}\n        on:click={toggleMenu}\n    >\n        <i class=\"fa fa-fw fa-ellipsis-v\" />\n    </button>\n    {#if expanded}\n        <div class=\"dropdown-menu show\">\n            {#if $store.params.tray == 'trash'}\n                <button type=\"button\" class=\"dropdown-item\" on:click={openEmptyTrashModal}>\n                    {$store.strings.emptytrash}\n                </button>\n            {:else}\n                {#if someUnread}\n                    <button type=\"button\" class=\"dropdown-item\" on:click={() => setUnread(false)}>\n                        {$store.strings.markasread}\n                    </button>\n                {/if}\n                {#if someRead}\n                    <button type=\"button\" class=\"dropdown-item\" on:click={() => setUnread(true)}>\n                        {$store.strings.markasunread}\n                    </button>\n                {/if}\n                {#if someUnstarred}\n                    <button type=\"button\" class=\"dropdown-item\" on:click={() => setStarred(true)}>\n                        {$store.strings.markasstarred}\n                    </button>\n                {/if}\n                {#if someStarred}\n                    <button type=\"button\" class=\"dropdown-item\" on:click={() => setStarred(false)}>\n                        {$store.strings.markasunstarred}\n                    </button>\n                {/if}\n                {#if label}\n                    {#if someUnread || someRead || someUnstarred || someStarred}\n                        <div class=\"dropdown-divider\" />\n                    {/if}\n                    <button type=\"button\" class=\"dropdown-item\" on:click={openEditLabelModal}>\n                        {$store.strings.editlabel}\n                    </button>\n                    <button type=\"button\" class=\"dropdown-item\" on:click={openDeleteLabelModal}>\n                        {$store.strings.deletelabel}\n                    </button>\n                {/if}\n            {/if}\n        </div>\n    {/if}\n</div>\n\n{#if $store.params.tray == 'trash'}\n    {#if $store.params.dialog == 'emptytrash'}\n        <ModalDialog\n            title={$store.strings.emptytrash}\n            cancelText={$store.strings.cancel}\n            confirmText={$store.strings.emptytrash}\n            confirmClass=\"btn-danger\"\n            onCancel={() => store.hideDialog()}\n            onConfirm={confirmEmptyTrash}\n        >\n            {$store.strings.emptytrashconfirm}\n        </ModalDialog>\n    {/if}\n{:else if label}\n    {#if $store.params.dialog == 'editlabel'}\n        <LabelModal\n            {store}\n            {label}\n            onCancel={() => store.hideDialog()}\n            onSubmit={confirmEditLabel}\n        />\n    {:else if $store.params.dialog == 'deletelabel'}\n        <ModalDialog\n            title={$store.strings.deletelabel}\n            cancelText={$store.strings.cancel}\n            confirmText={$store.strings.deletelabel}\n            confirmClass=\"btn-danger\"\n            onCancel={() => store.hideDialog()}\n            onConfirm={deletelabelconfirm}\n        >\n            {replaceStringParams($store.strings.deletelabelconfirm, label.name)}\n        </ModalDialog>\n    {/if}\n{/if}\n\n<style>\n    .local-mail-action-more-button::after {\n        display: none !important;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { ViewportSize } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import { formatNumber, replaceStringParams } from '../lib/utils';\n\n    export let store: Store;\n    export let bottom = false;\n\n    $: hasNext =\n        $store.nextMessageId ||\n        (!$store.params.search &&\n            ($store.params.offset || 0) + $store.preferences.perpage < $store.totalCount);\n\n    $: hasPrev = $store.prevMessageId || (!$store.params.search && ($store.params.offset || 0));\n\n    $: nextParams = hasNext\n        ? $store.message\n            ? {\n                  ...$store.params,\n                  messageid: $store.nextMessageId,\n                  offset: ($store.params.offset || 0) + 1,\n              }\n            : {\n                  ...$store.params,\n                  messageid: undefined,\n                  offset: ($store.params.offset || 0) + $store.preferences.perpage,\n                  search: $store.params.search\n                      ? {\n                            ...$store.params.search,\n                            startid: $store.listMessages[$store.listMessages.length - 1]?.id,\n                            reverse: false,\n                        }\n                      : undefined,\n              }\n        : undefined;\n\n    $: prevParams = hasPrev\n        ? $store.message\n            ? {\n                  ...$store.params,\n                  messageid: $store.prevMessageId,\n                  offset: Math.max(0, ($store.params.offset || 0) - 1),\n              }\n            : {\n                  ...$store.params,\n                  messageid: undefined,\n                  offset: Math.max(0, ($store.params.offset || 0) - $store.preferences.perpage),\n                  search: $store.params.search\n                      ? {\n                            ...$store.params.search,\n                            startid: $store.listMessages[0].id,\n                            reverse: true,\n                        }\n                      : undefined,\n              }\n        : undefined;\n\n    $: pagingText = $store.message\n        ? $store.params.search || $store.viewportSize < ViewportSize.SM\n            ? formatNumber(($store.params.offset || 0) + 1)\n            : replaceStringParams($store.strings.pagingsingle, {\n                  index: formatNumber(($store.messageOffset || 0) + 1),\n                  total: formatNumber($store.totalCount),\n              })\n        : $store.listMessages.length == 0\n          ? ''\n          : $store.params.search || $store.viewportSize < ViewportSize.SM\n            ? replaceStringParams($store.strings.pagingrange, {\n                  first: formatNumber(($store.params.offset || 0) + 1),\n                  last: formatNumber(($store.params.offset || 0) + $store.listMessages.length),\n              })\n            : replaceStringParams($store.strings.pagingrangetotal, {\n                  first: formatNumber(($store.params.offset || 0) + 1),\n                  last: formatNumber(($store.params.offset || 0) + $store.listMessages.length),\n                  total: formatNumber($store.totalCount),\n              });\n</script>\n\n<div class=\"local-mail-paging-buttons d-flex\" class:ml-auto={!bottom}>\n    {#if !bottom}\n        <div class=\"align-self-center text-nowrap\">\n            {pagingText}\n        </div>\n    {/if}\n\n    <div class=\"btn-group d-flex\" class:btn-group={!bottom} role=\"group\" style=\"min-width: 0\">\n        <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            class:btn-secondary={!bottom}\n            class:btn-light={bottom}\n            disabled={!prevParams}\n            title={$store.strings[$store.message ? 'previousmessage' : 'previouspage']}\n            on:click|preventDefault={() => store.navigate(prevParams)}\n        >\n            <i class=\"fa fa-fw fa-chevron-left\" aria-label={$store.strings.previouspage} />\n        </button>\n        {#if bottom}\n            <div class=\"text-truncate align-self-center flex-shrink-1 mx-2\" style=\"min-width: 0\">\n                {pagingText}\n            </div>\n        {/if}\n        <button\n            type=\"button\"\n            class=\"btn\"\n            class:btn-secondary={!bottom}\n            class:btn-light={bottom}\n            disabled={!nextParams}\n            title={$store.strings[$store.message ? 'nextmessage' : 'nextpage']}\n            on:click|preventDefault={() => store.navigate(nextParams)}\n        >\n            <i class=\"fa fa-fw fa-chevron-right\" aria-label={$store.strings.nextpage} />\n        </button>\n    </div>\n</div>\n\n<style>\n    .local-mail-paging-buttons {\n        min-width: 0;\n        column-gap: 1rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { DeletedStatus } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import ModalDialog from './ModalDialog.svelte';\n\n    export let store: Store;\n    export let bottom = false;\n\n    const confirm = () => {\n        store.hideDialog();\n        store.setDeleted(\n            Array.from($store.selectedMessages.keys()),\n            DeletedStatus.NotDeleted,\n            true,\n        );\n    };\n</script>\n\n<button\n    type=\"button\"\n    class=\"local-mail-action-delete btn\"\n    class:btn-secondary={!bottom}\n    class:btn-light={bottom}\n    disabled={!$store.selectedMessages.size}\n    title={$store.strings.restore}\n    on:click={() => store.showDialog('restore')}\n>\n    <i class=\"fa fa-fw fa-undo\" /></button\n>\n\n{#if $store.params.dialog == 'restore'}\n    <ModalDialog\n        title={$store.strings.restore}\n        cancelText={$store.strings.cancel}\n        confirmText={$store.strings.restore}\n        onCancel={() => store.hideDialog()}\n        onConfirm={confirm}\n    >\n        {$store.strings.restoremessageconfirm}\n    </ModalDialog>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n    import DeleteButton from './DeleteButton.svelte';\n    import DeleteForeverButton from './DeleteForeverButton.svelte';\n    import LabelsButton from './LabelsButton.svelte';\n    import MoreActionsButton from './MoreActionsButton.svelte';\n    import PagingButtons from './PagingButtons.svelte';\n    import RestoreButton from './RestoreButton.svelte';\n\n    export let store: Store;\n</script>\n\n<div role=\"toolbar\" class=\"local-mail-toolbar px-2 py-3 bg-light border-top border-bottom\">\n    <div class=\"d-flex justify-content-around\" role=\"group\">\n        {#if $store.params.tray == 'trash'}\n            <RestoreButton {store} bottom={true} />\n            <DeleteForeverButton {store} bottom={true} />\n        {:else}\n            <LabelsButton {store} bottom={true} />\n            <DeleteButton {store} bottom={true} />\n        {/if}\n        <MoreActionsButton {store} bottom={true} />\n        <PagingButtons {store} bottom={true} />\n    </div>\n</div>\n\n<style>\n    .local-mail-toolbar {\n        z-index: 1020;\n        position: sticky;\n        bottom: 0;\n    }\n</style>\n","import { cubicOut } from '../easing/index.js';\nimport { is_function } from '../internal/index.js';\n\n/**\n * The flip function calculates the start and end position of an element and animates between them, translating the x and y values.\n * `flip` stands for [First, Last, Invert, Play](https://aerotwist.com/blog/flip-your-animations/).\n *\n * https://svelte.dev/docs/svelte-animate#flip\n * @param {Element} node\n * @param {{ from: DOMRect; to: DOMRect }} fromTo\n * @param {import('./public.js').FlipParams} params\n * @returns {import('./public.js').AnimationConfig}\n */\nexport function flip(node, { from, to }, params = {}) {\n\tconst style = getComputedStyle(node);\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n\tconst dx = from.left + (from.width * ox) / to.width - (to.left + ox);\n\tconst dy = from.top + (from.height * oy) / to.height - (to.top + oy);\n\tconst { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n\treturn {\n\t\tdelay,\n\t\tduration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n\t\teasing,\n\t\tcss: (t, u) => {\n\t\t\tconst x = u * dx;\n\t\t\tconst y = u * dy;\n\t\t\tconst sx = t + (u * from.width) / to.width;\n\t\t\tconst sy = t + (u * from.height) / to.height;\n\t\t\treturn `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n\t\t}\n\t};\n}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: MessageSummary;\n\n    $: checkClass = $store.selectedMessages.has(message.id) ? 'fa-check-square-o' : 'fa-square-o';\n</script>\n\n<button\n    type=\"button\"\n    class=\"btn px-2 d-flex align-items-center border-0\"\n    role=\"checkbox\"\n    aria-checked={Boolean($store.selectedMessages.has(message.id))}\n    title={$store.strings.select}\n    on:click|preventDefault|stopPropagation={() => store.toggleSelected(message.id)}\n>\n    <i class=\"fa {checkClass}\" />\n</button>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: MessageSummary;\n\n    $: starClass = message.starred ? 'fa-star text-warning' : 'fa-star-o';\n</script>\n\n<button\n    type=\"button\"\n    class=\"btn px-2 border-0\"\n    role=\"checkbox\"\n    aria-checked={message.starred}\n    disabled={message.deleted}\n    title={message.deleted\n        ? $store.strings[message.starred ? 'starred' : 'unstarred']\n        : $store.strings[message.starred ? 'markasunstarred' : 'markasstarred']}\n    on:click|preventDefault|stopPropagation={() => store.setStarred([message.id], !message.starred)}\n>\n    <i class=\"fa {starClass}\" />\n</button>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { truncate } from '../actions/truncate';\n    import type { MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: MessageSummary;\n\n    $: users =\n        $store.params.tray == 'sent' || $store.params.tray == 'drafts'\n            ? message.recipients.length > 0\n                ? message.recipients.map((user) => user.fullname)\n                : [$store.strings.norecipient]\n            : [message.sender.fullname];\n</script>\n\n<div use:truncate={users.join('\\n')}>\n    {users.join(', ')}\n</div>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { truncate } from '../actions/truncate';\n    import type { MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: MessageSummary;\n</script>\n\n<div use:truncate={message.subject || $store.strings.nosubject}>\n    {#if message.draft}\n        <span class=\"mr-2 text-danger\">\n            {$store.strings.draft}\n        </span>\n    {/if}\n    {message.subject || $store.strings.nosubject}\n</div>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { truncate } from '../actions/truncate';\n    import type { Course, Settings } from '../lib/state';\n    import { formatCourseName } from '../lib/utils';\n\n    export let course: Course;\n    export let settings: Settings;\n\n    $: text = formatCourseName(course, settings.coursebadges);\n    $: length = settings.coursebadgeslength || 20;\n</script>\n\n{#if ['shortname', 'fullname'].includes(settings.coursebadges)}\n    <span\n        class=\"local-mail-course-badge badge px-2 mr-2 mb-2\"\n        use:truncate={text}\n        style=\"min-width: 3rem; max-width: calc({length}ch + 1.5rem)\"\n    >\n        {text}\n    </span>\n{/if}\n\n<style>\n    .local-mail-course-badge {\n        font-size: inherit;\n        font-weight: inherit;\n        color: var(--local-mail-color-gray-fg);\n        background-color: var(--local-mail-color-gray-bg);\n        padding-top: 0;\n        padding-bottom: 0;\n        line-height: inherit;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Label } from '../lib/state';\n    import { colors } from '../lib/utils';\n\n    export let label: Label;\n\n    $: color = colors.includes(label.color) ? label.color : 'gray';\n</script>\n\n<span\n    class=\"local-mail-label-badge badge flex-shrink-0 px-2 mr-2 mb-2\"\n    style={`color: var(--local-mail-color-${color}-fg, var(--local-mail-color-gray-fg));` +\n        `background-color: var(--local-mail-color-${color}-bg, var(--local-mail-color-gray-bg))`}\n>\n    {label.name}\n</span>\n\n<style>\n    .local-mail-label-badge {\n        font-size: inherit;\n        font-weight: inherit;\n        color: var(--local-mail-color-gray-fg);\n        background-color: var(--local-mail-color-gray-bg);\n        padding-top: 0;\n        padding-bottom: 0;\n        line-height: inherit;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import CourseBadge from './CourseBadge.svelte';\n    import LabelBadge from './LabelBadge.svelte';\n    import { ViewportSize, type MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: MessageSummary;\n</script>\n\n{#if $store.viewportSize < ViewportSize.MD}\n    {#if $store.params.courseid != message.course.id}\n        <CourseBadge course={message.course} settings={$store.settings} />\n    {/if}\n{/if}\n{#each message.labels as label (label.id)}\n    {#if $store.params.tray != 'label' || $store.params.labelid != label.id}\n        <LabelBadge {label} />\n    {/if}\n{/each}\n{#if $store.viewportSize >= ViewportSize.MD}\n    {#if $store.params.courseid != message.course.id}\n        <CourseBadge course={message.course} settings={$store.settings} />\n    {/if}\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { ViewportSize, type MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: MessageSummary;\n</script>\n\n{#if message.numattachments > 0 || $store.viewportSize >= ViewportSize.MD}\n    <span\n        class=\"-shrink-0 mr-2\"\n        aria-hidden={message.numattachments == 0}\n        title={message.numattachments > 0 ? $store.strings.hasattachments : undefined}\n    >\n        <i class=\"fa fa-fw {message.numattachments > 0 ? 'fa-paperclip' : ''}\" aria-hidden={true} />\n    </span>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { ViewportSize, type MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let message: MessageSummary;\n    export let store: Store;\n</script>\n\n<span\n    class=\"local-mail-list-message-time d-shrink-0 text-nowrap text-right\"\n    class:local-mail-list-message-time-md={$store.viewportSize >= ViewportSize.MD}\n    title={message.fulltime}\n>\n    {message.shorttime}\n</span>\n\n<style>\n    .local-mail-list-message-time-md {\n        min-width: 5rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { fade } from 'svelte/transition';\n    import type { Store } from '../lib/store';\n    import { viewUrl } from '../lib/url';\n\n    export let store: Store;\n\n    $: recentParams = {\n        tray: $store.params.tray,\n        courseid: $store.params.courseid,\n        labelid: $store.params.labelid,\n    };\n</script>\n\n{#if !$store.listMessages.length}\n    <div in:fade={{ delay: 400 }} class=\"alert alert-info\">\n        <div>\n            {$store.strings.nomessagesfound}\n        </div>\n        {#if $store.totalCount > 0}\n            <a\n                class=\"btn btn-info text-white mt-3\"\n                href={viewUrl(recentParams)}\n                on:click|preventDefault={() => store.navigate(recentParams)}\n            >\n                {$store.strings.showrecentmessages}\n            </a>\n        {/if}\n    </div>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { flip } from 'svelte/animate';\n    import { fade } from 'svelte/transition';\n    import { ViewportSize, type MessageSummary } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import { viewUrl } from '../lib/url';\n    import ListMessageCheckbox from './ListMessageCheckbox.svelte';\n    import ListMessageStar from './ListMessageStar.svelte';\n    import ListMessageUsers from './ListMessageUsers.svelte';\n    import ListMessageSubject from './ListMessageSubject.svelte';\n    import ListMessageLabels from './ListMessageLabels.svelte';\n    import ListMessageAttachments from './ListMessageAttachments.svelte';\n    import ListMessageTime from './ListMessageTime.svelte';\n    import ListEmptyAlert from './ListAlert.svelte';\n\n    export let store: Store;\n\n    const messageParams = (message: MessageSummary, i: number) => {\n        return {\n            ...$store.params,\n            messageid: message.id,\n            offset: ($store.params.offset || 0) + i,\n        };\n    };\n</script>\n\n{#key $store.navigationId}\n    <div class=\"list-group\">\n        {#each $store.listMessages as message, i (message.id)}\n            <a\n                animate:flip={{ delay: 400, duration: 400 }}\n                in:fade={{ delay: 400 }}\n                out:fade={{ duration: 400 }}\n                class=\"local-mail-list-message list-group-item list-group-item-action p-0\"\n                href={viewUrl(messageParams(message, i))}\n                class:list-group-item-primary={$store.selectedMessages.has(message.id)}\n                class:list-group-item-secondary={!message.unread &&\n                    !$store.selectedMessages.has(message.id)}\n                class:font-weight-bold={message.unread}\n                on:click|preventDefault={() => store.navigate(messageParams(message, i))}\n            >\n                {#if $store.viewportSize >= ViewportSize.MD}\n                    <div class=\"d-flex align-items-center pl-1 pr-3\">\n                        <ListMessageCheckbox {store} {message} />\n                        <ListMessageStar {store} {message} />\n                        <div\n                            class=\"d-flex w-100 flex-grow-1 align-items-center\"\n                            style=\"min-width: 0\"\n                        >\n                            <div class=\"flex-grow-1 mx-2\" style=\"width: 25%; min-width: 0\">\n                                <ListMessageUsers {store} {message} />\n                            </div>\n                            <div\n                                class=\"flex-grow-1 d-flex my-2 mx-2\"\n                                style=\"width: 75%; min-width: 0\"\n                            >\n                                <ListMessageSubject {store} {message} />\n                                <div\n                                    class=\"local-mail-list-message-labels-md d-flex text-truncate flex-shrink-0 justify-content-end\"\n                                    style=\"max-width: 80%\"\n                                >\n                                    <ListMessageLabels {store} {message} />\n                                </div>\n                            </div>\n                        </div>\n                        <ListMessageAttachments {store} {message} />\n                        <ListMessageTime {store} {message} />\n                    </div>\n                {:else}\n                    <div class=\"d-flex align-items-start pt-1 pb-2 pl-1 pr-2\">\n                        <ListMessageCheckbox {store} {message} />\n                        <div class=\"w-100 ml-1\" style=\"min-width: 0\">\n                            <div class=\"d-flex mt-2\">\n                                <ListMessageUsers {store} {message} />\n                                <ListMessageAttachments {store} {message} />\n                                <div class=\"ml-auto mr-2\">\n                                    <ListMessageTime {store} {message} />\n                                </div>\n                            </div>\n                            <div class=\"d-flex\">\n                                <div class=\"d-flex w-100 my-2 mr-2\" style=\"min-width: 0\">\n                                    <ListMessageSubject {store} {message} />\n                                </div>\n                                <ListMessageStar {store} {message} />\n                            </div>\n                            <div class=\"local-mail-list-message-labels d-flex flex-wrap mr-2\">\n                                <ListMessageLabels {store} {message} />\n                            </div>\n                        </div>\n                    </div>\n                {/if}\n            </a>\n        {/each}\n        <ListEmptyAlert {store} />\n    </div>\n{/key}\n\n<style>\n    .local-mail-list-message {\n        color: var(--dark) !important;\n    }\n\n    .local-mail-list-message:focus,\n    .local-mail-list-message :global(.btn:focus) {\n        z-index: 3;\n    }\n\n    .local-mail-list-message-labels {\n        margin-left: -0.5rem;\n    }\n\n    .local-mail-list-message-labels-md {\n        margin-left: auto;\n        margin-bottom: -0.5rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { onDestroy, tick } from 'svelte';\n    import { loadModule, type CoreFragment } from '../lib/amd';\n\n    /** Script tags to be added to the head. */\n    export let javascript: string | undefined;\n\n    let scriptElement: Element | undefined;\n\n    $: updateJavascript(javascript || '');\n\n    const updateJavascript = async (javascript: string) => {\n        const fragment = await loadModule<CoreFragment>('core/fragment');\n        scriptElement?.remove();\n        scriptElement = undefined;\n        await tick();\n        scriptElement = document.createElement('script');\n        scriptElement.setAttribute('type', 'text/javascript');\n        scriptElement.innerHTML = fragment.processCollectedJavascript(javascript);\n        document.head.append(scriptElement);\n    };\n\n    onDestroy(() => {\n        scriptElement?.remove();\n    });\n</script>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { blur } from '../actions/blur';\n    import { ViewportSize, type Message } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: Message;\n    export let canReplyAll: boolean;\n\n    let expanded = false;\n\n    $: starClass = message.starred ? 'fa-star text-warning' : 'fa-star-o';\n\n    const toggleMenu = () => {\n        expanded = !expanded;\n    };\n\n    const closeMenu = () => {\n        expanded = false;\n    };\n</script>\n\n<button\n    type=\"button\"\n    class=\"btn py-2 border-0\"\n    role=\"checkbox\"\n    aria-checked={message.starred}\n    disabled={message.deleted}\n    title={message.starred ? $store.strings.markasunstarred : $store.strings.markasstarred}\n    on:click={() => store.setStarred([message.id], !message.starred)}\n>\n    <i class=\"fa {starClass}\" />\n</button>\n\n{#if $store.viewportSize < ViewportSize.SM}\n    <div class=\"dropdown\" use:blur={closeMenu}>\n        <button\n            type=\"button\"\n            class=\"btn\"\n            aria-expanded={expanded}\n            title={$store.strings.more}\n            on:click={toggleMenu}\n        >\n            <i class=\"fa fa-fw fa-ellipsis-v align-middle\" />\n        </button>\n        {#if expanded}\n            <div class=\"dropdown-menu dropdown-menu-right show\">\n                <button\n                    type=\"button\"\n                    class=\"dropdown-item\"\n                    on:click={() => store.reply(message, false)}\n                >\n                    <i class=\"fa fa-fw fa-reply\" aria-hidden=\"true\" />\n                    {$store.strings.reply}\n                </button>\n                <button\n                    type=\"button\"\n                    disabled={!canReplyAll}\n                    class=\"dropdown-item\"\n                    class:disabled={!canReplyAll}\n                    on:click={() => store.reply(message, true)}\n                >\n                    <i class=\"fa fa-fw fa-reply-all\" aria-hidden=\"true\" />\n                    {$store.strings.replyall}\n                </button>\n                <button type=\"button\" class=\"dropdown-item\" on:click={() => store.forward(message)}>\n                    <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\" />\n                    {$store.strings.forward}\n                </button>\n            </div>\n        {/if}\n    </div>\n{/if}\n\n{#if $store.viewportSize >= ViewportSize.SM}\n    <button\n        type=\"button\"\n        title={$store.strings.reply}\n        class=\"btn py-2 border-0\"\n        on:click={() => store.reply(message, false)}\n    >\n        <i class=\"fa fa-fw fa-reply\" aria-hidden=\"true\" />\n    </button>\n    <button\n        type=\"button\"\n        disabled={!canReplyAll}\n        class:disabled={!canReplyAll}\n        title={$store.strings.replyall}\n        class=\"btn py-2 border-0\"\n        on:click={() => store.reply(message, true)}\n    >\n        <i class=\"fa fa-fw fa-reply-all\" aria-hidden=\"true\" />\n    </button>\n    <button\n        type=\"button\"\n        title={$store.strings.forward}\n        class=\"btn py-2 border-0\"\n        on:click={() => store.forward(message)}\n    >\n        <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\" />\n    </button>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { truncate } from '../actions/truncate';\n    import type { Attachment, Reference, Strings } from '../lib/state';\n    import { downloadAllUrl } from '../lib/url';\n    import { formatSize } from '../lib/utils';\n\n    export let strings: Strings;\n    export let message: Reference;\n\n    const fileName = (file: Attachment): string =>\n        (file.filepath + file.filename).replace(/^\\//, '');\n</script>\n\n<div class=\"local-mail-message-attachments d-sm-flex flex-wrap\">\n    {#each message.attachments as file}\n        <a\n            href={file.fileurl}\n            class=\"local-mail-message-attachments-file btn btn-light d-flex align-items-center px-2 py-1 mr-3 mb-3\"\n        >\n            <img\n                aria-hidden=\"true\"\n                alt={file.filename}\n                src={file.iconurl}\n                width=\"24\"\n                height=\"24\"\n                class=\"flex-shrink-0\"\n            />\n            <i\n                class=\"fa fa-download d-flex justify-content-center align-items-center flex-shrink-0\"\n                aria-hidden=\"true\"\n                style=\"width: 24px; height: 24px\"\n            />\n            <div class=\"ml-2 mr-1\" style=\"min-width: 0\">\n                <div use:truncate={fileName(file)}>{fileName(file)}</div>\n                <div class=\"text-left text-muted\">{formatSize(file.filesize)}</div>\n            </div>\n        </a>\n    {/each}\n    {#if message.attachments.length > 1}\n        <a\n            href={downloadAllUrl(message.id)}\n            class=\"btn btn-light d-flex align-items-center p-2 mr-3 mb-3\"\n        >\n            <i\n                class=\"fa fa-download d-flex justify-content-center align-items-center flex-shrink-0\"\n                aria-hidden=\"true\"\n                style=\"width: 24px; height: 24px\"\n            />\n            <div class=\"text-truncate ml-2\">{strings.downloadall}</div>\n        </a>\n    {/if}\n</div>\n\n<style>\n    .local-mail-message-attachments {\n        margin-top: 1rem;\n        margin-right: -1rem;\n    }\n\n    .local-mail-message-attachments a {\n        min-width: 0;\n        min-height: 3rem;\n        line-height: 1.25;\n    }\n\n    .local-mail-message-attachments-file:not(:hover) .fa-download {\n        display: none !important;\n    }\n    .local-mail-message-attachments-file:hover img {\n        display: none !important;\n    }\n\n    @media (min-width: 576px) {\n        .local-mail-message-attachments {\n            margin-bottom: -1rem;\n        }\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Message } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: Message;\n    export let canReplyAll: boolean;\n</script>\n\n<button\n    type=\"button\"\n    class=\"btn btn-primary mr-3 mb-3\"\n    on:click={() => store.reply(message, false)}\n>\n    <i class=\"fa fa-fw fa-reply mr-2\" />\n    {$store.strings.reply}\n</button>\n<button\n    type=\"button\"\n    disabled={!canReplyAll}\n    class:disabled={!canReplyAll}\n    class=\"btn mr-3 mb-3\"\n    class:btn-primary={canReplyAll}\n    class:btn-secondary={!canReplyAll}\n    on:click={() => store.reply(message, true)}\n>\n    <i class=\"fa fa-fw fa-reply-all mr-2\" />\n    {$store.strings.replyall}\n</button>\n<button type=\"button\" class=\"btn btn-primary mr-3 mb-3\" on:click={() => store.forward(message)}>\n    <i class=\"fa fa-fw fa-share mr-2\" />\n    {$store.strings.forward}\n</button>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { afterUpdate } from 'svelte';\n    import { loadModule, type CoreFiltersEvents } from '../lib/amd';\n\n    export let content: string;\n\n    let node: Element;\n\n    afterUpdate(async () => {\n        const events = await loadModule<CoreFiltersEvents>('core_filters/events');\n        events.notifyFilterContentUpdated([node]);\n    });\n</script>\n\n<div class=\"local-mail-message-content\" bind:this={node}>\n    <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n    {@html content}\n</div>\n\n<style>\n    .local-mail-message-content {\n        max-width: 60rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Message } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import CourseBadge from './CourseBadge.svelte';\n    import LabelBadge from './LabelBadge.svelte';\n\n    export let store: Store;\n    export let message: Message;\n</script>\n\n{#if message.course.id != $store.params.courseid}\n    <CourseBadge course={message.course} settings={$store.settings} />\n{/if}\n{#each message.labels as label (label.id)}\n    <LabelBadge {label} />\n{/each}\n","<!--\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { User } from '../lib/state';\n\n    export let user: User;\n</script>\n\n{#if user.profileurl}\n    <a href={user.profileurl}>\n        {user.fullname}\n    </a>\n{:else}\n    <span>\n        {user.fullname}\n    </span>\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { User } from '../lib/state';\n\n    export let user: User | undefined = undefined;\n    export let icon = 'fa-user';\n</script>\n\n{#if user?.pictureurl}\n    <img\n        src={user.pictureurl}\n        width=\"35\"\n        height=\"35\"\n        alt=\"\"\n        aria-hidden=\"true\"\n        class=\"rounded-circle\"\n    />\n{:else}\n    <span class=\"local-mail-user-picture-fallback m-0\">\n        {#if user?.firstname || user?.lastname}\n            {user.firstname.slice(0, 1)}{user.lastname.slice(0, 1)}\n        {:else}\n            <i class=\"fa {icon}\" />\n        {/if}\n    </span>\n{/if}\n\n<style>\n    .local-mail-user-picture-fallback {\n        width: 35px;\n        height: 35px;\n        background-color: rgba(0, 0, 0, 0.1);\n        vertical-align: middle;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 50%;\n        color: var(--dark);\n        font-weight: 400;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Reference, Strings } from '../lib/state';\n    import MessageAttachments from './MessageAttachments.svelte';\n    import MessageContent from './MessageContent.svelte';\n    import UserFullName from './UserFullName.svelte';\n    import UserPicture from './UserPicture.svelte';\n\n    export let strings: Strings;\n    export let reference: Reference;\n</script>\n\n<div class=\"card mb-4\">\n    <div class=\"card-body p-3 px-xl-4\">\n        <h5 class=\"h5 card-title mb-3\">\n            {reference.subject}\n        </h5>\n        <div class=\"local-mail-message-reference-user-and-date d-sm-flex\">\n            <div class=\"d-flex mb-3 mb-sm-0\">\n                <div class=\"mr-3\">\n                    <UserPicture user={reference.sender} />\n                </div>\n                <div class=\"mt-1\">\n                    <UserFullName user={reference.sender} />\n                </div>\n            </div>\n            <div class=\"mt-1 ml-auto\">\n                {reference.fulltime}\n            </div>\n        </div>\n        <hr />\n        <MessageContent content={reference.content} />\n        {#if reference.attachments.length > 0}\n            <hr />\n            <MessageAttachments {strings} message={reference} />\n        {/if}\n    </div>\n</div>\n\n<style>\n    .local-mail-message-reference-user-and-date {\n        margin-bottom: -0.25rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { RecipientType, type Message } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import UserFullName from './UserFullName.svelte';\n    import UserPicture from './UserPicture.svelte';\n\n    export let store: Store;\n    export let message: Message;\n\n    $: recipients = (type: string) => {\n        return message.recipients.filter((user) => user.type == type);\n    };\n</script>\n\n<div class=\"local-mail-message-users d-flex\">\n    <div class=\"mr-3\">\n        <UserPicture user={message.sender} />\n    </div>\n    <div class=\"d-flex flex-column\">\n        <div class=\"mt-1 mb-2\">\n            <UserFullName user={message.sender} />\n        </div>\n        {#each Object.values(RecipientType) as type}\n            {#if recipients(type).length > 0}\n                <div class=\"mb-2\">\n                    <span> {$store.strings[type]}: </span>\n                    {#each recipients(type) as user, i (user.id)}\n                        {#if i > 0},\n                        {/if}\n                        <UserFullName {user} />\n                    {/each}\n                </div>\n            {/if}\n        {/each}\n    </div>\n</div>\n\n<style>\n    .local-mail-message-users {\n        margin-bottom: -0.5rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Message } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import HtmlHead from './HtmlHead.svelte';\n    import NessageActions from './MessageActions.svelte';\n    import MessageAttachments from './MessageAttachments.svelte';\n    import MessageButtons from './MessageButtons.svelte';\n    import MessageContent from './MessageContent.svelte';\n    import MessageLabels from './MessageLabels.svelte';\n    import MessageReference from './MessageReference.svelte';\n    import MessageUsers from './MessageUsers.svelte';\n\n    export let store: Store;\n    export let message: Message;\n\n    $: canReplyAll =\n        message.sender.id == $store.userid\n            ? message.recipients.filter((u) => u.type == 'cc').length > 0\n            : message.recipients.filter(\n                  (u) => ['to', 'cc'].includes(u.type) && u.id != $store.userid,\n              ).length > 0;\n</script>\n\n<HtmlHead javascript={message.javascript} />\n\n<div class=\"card\">\n    <div class=\"card-body p-3 px-xl-4\">\n        <h3 class=\"h4 card-title mb-3 mb-md-2\">\n            {message.subject}\n        </h3>\n        <div class=\"d-md-flex align-items-start mb-2\">\n            <div class=\"local-mail-message-labels d-flex flex-wrap\" style=\"min-width: 0\">\n                <MessageLabels {store} {message} />\n            </div>\n            <div class=\"d-flex justify-content-between flex-shrink-0 ml-auto\">\n                <div class=\"my-2 text-truncate\">\n                    {message.fulltime}\n                </div>\n                <div class=\"local-mail-message-actions d-flex flex-shrink-0\">\n                    <NessageActions {store} {message} {canReplyAll} />\n                </div>\n            </div>\n        </div>\n        <MessageUsers {store} {message} />\n        <hr />\n        <MessageContent content={message.content} />\n        {#if message.attachments.length > 0}\n            <hr />\n            <MessageAttachments strings={$store.strings} {message} />\n        {/if}\n        <hr />\n        <div class=\"local-mail-message-buttons d-flex flex-column flex-sm-row justify-content-end\">\n            <MessageButtons {store} {message} {canReplyAll} />\n        </div>\n    </div>\n</div>\n\n{#if message.references.length > 0}\n    <div class=\"alert alert-secondary mt-4 mb-4 text-center\">\n        {$store.strings.references}\n    </div>\n    {#each message.references as reference (reference.id)}\n        <MessageReference strings={$store.strings} {reference} />\n    {/each}\n{/if}\n\n<style>\n    .local-mail-message-actions {\n        margin-left: 1rem;\n        margin-right: -0.5rem;\n    }\n\n    .local-mail-message-buttons {\n        margin-top: 1rem;\n        margin-right: -1rem;\n        margin-bottom: -1rem;\n    }\n\n    .local-mail-message-labels {\n        margin-top: 0.5rem;\n        margin-left: -0.5rem;\n        margin-right: -0.5rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { fade } from 'svelte/transition';\n\n    import { truncate } from '../actions/truncate';\n    import { RecipientType, type Recipient, type User } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import UserPicture from './UserPicture.svelte';\n\n    export let store: Store;\n    export let recipients: ReadonlyMap<number, Recipient>;\n    export let onDelete: (user: User) => unknown;\n</script>\n\n{#each Object.values(RecipientType) as type}\n    {@const users = Array.from(recipients.values()).filter((user) => user.type == type)}\n    {#if users.length}\n        <div transition:fade class=\" d-flex mb-2\">\n            <div class=\"local-mail-draft-form-recipients-type flex-shrink-0 py-2 mr-2\">\n                {$store.strings[type]}:\n            </div>\n            <div class=\"d-flex flex-wrap\" style=\"min-width: 0\">\n                {#each users as user (user.id)}\n                    <div\n                        transition:fade\n                        use:truncate={user.fullname}\n                        class=\"local-mail-draft-form-recipients-user alert d-flex flex-shrink align-items-center border-0 p-0 mr-2 mb-2\"\n                        class:alert-danger={!user.isvalid}\n                    >\n                        <div class=\"d-flex m-1 mr-2\">\n                            {#if user.isvalid}\n                                <UserPicture {user} />\n                            {:else}\n                                <div\n                                    class=\"m-0 d-flex justify-content-center align-items-center\"\n                                    style=\"width: 35px; height: 35px\"\n                                    title={$store.strings.cannotsendmailtouser}\n                                >\n                                    <i class=\"fa fa-exclamation-circle\" />\n                                </div>\n                            {/if}\n                        </div>\n                        <div class=\"py-2\" use:truncate={user.fullname}>\n                            {user.fullname}\n                        </div>\n                        <button\n                            type=\"button\"\n                            class=\"btn align-self-middle p-2 align-bottom\"\n                            title={$store.strings.delete}\n                            on:click={() => onDelete(user)}\n                        >\n                            <i class=\"fa fa-fw fa-times\" />\n                        </button>\n                    </div>\n                {/each}\n            </div>\n        </div>\n    {/if}\n{/each}\n\n<style>\n    .local-mail-draft-form-recipients-type {\n        width: 3rem;\n    }\n    .local-mail-draft-form-recipients-user {\n        border-radius: 0.5rem;\n        max-width: 20rem;\n    }\n    .local-mail-draft-form-recipients-user:not(.alert-danger) {\n        background-color: #eee;\n    }\n    .local-mail-draft-form-recipients-user .btn {\n        position: relative;\n        z-index: 100;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Message } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import LabelBadge from './LabelBadge.svelte';\n\n    export let store: Store;\n    export let message: Message;\n</script>\n\n<div class=\"local-mail-draft-form-time-and-labels d-sm-flex justify-content-between mb-2\">\n    <div class=\"d-flex flex-grow-1\">\n        <div\n            class=\"align-self-center alert alert-info m-0 px-2 py-0 text-truncate\"\n            title={message.fulltime}\n        >\n            {#if $store.draftSaved}\n                <i class=\"fa fa-check mr-1\" aria-hidden=\"true\" /> {$store.strings.draftsaved}\n            {:else}\n                <i class=\"fa fa-clock-o mr-1\" aria-hidden=\"true\" /> {message.shorttime}\n            {/if}\n        </div>\n        <button\n            type=\"button\"\n            class=\"btn border-0 py-2 ml-auto mr-2 mr-sm-0\"\n            role=\"checkbox\"\n            aria-checked={message.starred}\n            disabled={message.deleted}\n            title={message.starred ? $store.strings.markasunstarred : $store.strings.markasstarred}\n            on:click={() => store.setStarred([message.id], !message.starred)}\n        >\n            <i class=\"fa {message.starred ? 'fa-star text-warning' : 'fa-star-o'}\" />\n        </button>\n    </div>\n\n    {#if message.labels}\n        <div class=\"d-flex flex-wrap mt-2 mr-2\" style=\"min-width: 0\">\n            {#each message.labels as label (label.id)}\n                <LabelBadge {label} />\n            {/each}\n        </div>\n    {/if}\n</div>\n\n<style>\n    .local-mail-draft-form-time-and-labels {\n        margin-right: -15px;\n    }\n</style>\n","/*\n * SPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n * SPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n *\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\nimport { loadModule, type CoreAjax } from './amd';\nimport {\n    DeletedStatus,\n    type Course,\n    type Group,\n    type Label,\n    type Message,\n    type MessageData,\n    type MessageForm,\n    type MessageSummary,\n    type Preferences,\n    type Role,\n    type User,\n} from './state';\n\nexport type ServiceRequest =\n    | SetPreferencesRequest\n    | GetCoursesRequest\n    | GetLabelsRequest\n    | CountMessagesRequest\n    | SearchMessagesRequest\n    | GetMessageRequest\n    | ViewMessageRequest\n    | SetUnreadRequest\n    | SetStarredRequest\n    | SetDeletedRequest\n    | EmptyTrashRequest\n    | CreateLabelRequest\n    | UpdateLabelRequest\n    | DeleteLabelRequest\n    | SetLabelsRequest\n    | GetRolesRequest\n    | GetGroupsRequest\n    | SearchUsersRequest\n    | GetMessageFormRequest\n    | CreateMessageRequest\n    | ReplyMessageRequest\n    | ForwardMessageRequest\n    | UpdateMessageRequest\n    | SendMessageRequest;\n\nexport interface SetPreferencesRequest {\n    readonly methodname: 'set_preferences';\n    readonly preferences: Partial<Preferences>;\n}\n\nexport type SetPreferencesResponse = void;\n\nexport interface GetCoursesRequest {\n    readonly methodname: 'get_courses';\n}\n\nexport type GetCoursesResponse = ReadonlyArray<Course>;\n\nexport interface GetLabelsRequest {\n    readonly methodname: 'get_labels';\n}\n\nexport type GetLabelsResponse = ReadonlyArray<Label>;\n\nexport interface MessageQuery {\n    readonly courseid?: number;\n    readonly labelid?: number;\n    readonly draft?: boolean;\n    readonly roles?: ReadonlyArray<string>;\n    readonly unread?: boolean;\n    readonly starred?: boolean;\n    readonly deleted?: boolean;\n    readonly content?: string;\n    readonly sendername?: string;\n    readonly recipientname?: string;\n    readonly withfilesonly?: boolean;\n    readonly maxtime?: number;\n    readonly startid?: number;\n    readonly stopid?: number;\n    readonly reverse?: boolean;\n}\n\nexport interface CountMessagesRequest {\n    readonly methodname: 'count_messages';\n    readonly query: MessageQuery;\n}\n\nexport type CountMessagesResponse = number;\n\nexport interface SearchMessagesRequest {\n    readonly methodname: 'search_messages';\n    readonly query: MessageQuery;\n    readonly offset?: number;\n    readonly limit?: number;\n}\n\nexport type SearchMessagesResponse = ReadonlyArray<MessageSummary>;\n\nexport interface GetMessageRequest {\n    readonly methodname: 'get_message';\n    readonly messageid: number;\n}\n\nexport type GetMessageResponse = Message;\n\nexport interface ViewMessageRequest {\n    readonly methodname: 'view_message';\n    readonly messageid: number;\n}\n\nexport type ViewMessageResponse = null;\n\nexport interface SetUnreadRequest {\n    readonly methodname: 'set_unread';\n    readonly messageid: number;\n    readonly unread: boolean;\n}\n\nexport type SetUnreadResponse = void;\n\nexport interface SetStarredRequest {\n    readonly methodname: 'set_starred';\n    readonly messageid: number;\n    readonly starred: boolean;\n}\n\nexport type SetStarredResponse = void;\n\nexport interface SetDeletedRequest {\n    readonly methodname: 'set_deleted';\n    readonly messageid: number;\n    readonly deleted: DeletedStatus;\n}\n\nexport type SetDeletedResponse = void;\n\nexport interface EmptyTrashRequest {\n    readonly methodname: 'empty_trash';\n    readonly courseid?: number;\n}\n\nexport type EmptyTrashResponse = void;\n\nexport interface CreateLabelRequest {\n    readonly methodname: 'create_label';\n    readonly name: string;\n    readonly color: string;\n    readonly messageids: ReadonlyArray<number>;\n}\n\nexport type CreateLabelResponse = void;\n\nexport interface UpdateLabelRequest {\n    readonly methodname: 'update_label';\n    readonly labelid: number;\n    readonly name: string;\n    readonly color: string;\n}\n\nexport type UpdateLabelResponse = void;\n\nexport interface DeleteLabelRequest {\n    readonly methodname: 'delete_label';\n    readonly labelid: number;\n}\n\nexport type DeleteLabelResponse = void;\n\nexport interface SetLabelsRequest {\n    readonly methodname: 'set_labels';\n    readonly messageid: number;\n    readonly labelids: ReadonlyArray<number>;\n}\n\nexport type SetLabelsResponse = void;\n\nexport interface GetRolesRequest {\n    readonly methodname: 'get_roles';\n    readonly courseid: number;\n}\n\nexport type GetRolesResponse = ReadonlyArray<Role>;\n\nexport interface GetGroupsRequest {\n    readonly methodname: 'get_groups';\n    readonly courseid: number;\n}\n\nexport type GetGroupsResponse = ReadonlyArray<Group>;\n\nexport interface UserQuery {\n    readonly courseid: number;\n    readonly roleid?: number;\n    readonly groupid?: number;\n    readonly fullname?: string;\n    readonly include?: number[];\n}\n\nexport interface SearchUsersRequest {\n    readonly methodname: 'search_users';\n    readonly query: UserQuery;\n    readonly offset?: number;\n    readonly limit?: number;\n}\n\nexport type SearchUsersResponse = ReadonlyArray<User>;\n\nexport interface GetMessageFormRequest {\n    readonly methodname: 'get_message_form';\n    readonly messageid: number;\n}\n\nexport type GetMessageFormeResponse = MessageForm;\n\nexport interface CreateMessageRequest {\n    readonly methodname: 'create_message';\n    readonly courseid: number;\n}\n\nexport type CreateMessageResponse = number;\n\nexport interface ReplyMessageRequest {\n    readonly methodname: 'reply_message';\n    readonly messageid: number;\n    readonly all: boolean;\n}\n\nexport type ReplyMessageResponse = number;\n\nexport interface ForwardMessageRequest {\n    readonly methodname: 'forward_message';\n    readonly messageid: number;\n}\n\nexport type ForwardMessageResponse = number;\n\nexport interface UpdateMessageRequest {\n    readonly methodname: 'update_message';\n    readonly messageid: number;\n    readonly data: MessageData;\n}\n\nexport type UpdateMessageResponse = void;\n\nexport interface SendMessageRequest {\n    readonly methodname: 'send_message';\n    readonly messageid: number;\n}\n\nexport type SendMessageResponse = void;\n\ninterface ServiceCall {\n    promise: Promise<unknown[] | null>;\n    cancel: () => void;\n}\n\nlet currentCall: ServiceCall | undefined;\n\nconst cancellableMethods = new Set([\n    'get_courses',\n    'get_labels',\n    'count_messages',\n    'search_messages',\n    'get_message',\n    'view_message',\n    'get_roles',\n    'get_groups',\n    'search_users',\n    'get_message_form',\n]);\n\n/**\n * Calls one or more web service methods in a single HTTP request.\n *\n * @param requests List of request with method name and arguments.\n * @returns A promise to the array of responses or null if cancelled.\n */\nexport function callServices(requests: ServiceRequest[]): Promise<unknown[] | null> {\n    let cancelled = false;\n\n    const start = async () => {\n        const ajax = await loadModule<CoreAjax>('core/ajax');\n        const ajaxRequests = requests\n            .filter((request) => !cancelled || !cancellableMethods.has(request.methodname))\n            .map(({ methodname, ...args }) => ({\n                methodname: `local_satsmail_${methodname}`,\n                args,\n            }));\n\n        let responses: unknown[] = [];\n\n        if (ajaxRequests.length > 0) {\n            try {\n                responses = await Promise.all(ajax.call(ajaxRequests));\n            } catch (error) {\n                throw typeof error == 'string' ? { message: error } : error;\n            }\n        }\n\n        return cancelled ? null : responses;\n    };\n\n    currentCall?.cancel();\n\n    currentCall = {\n        // Chain promise to avoid concurrent web service calls.\n        promise: currentCall ? currentCall.promise.then(start, start) : start(),\n        cancel: () => {\n            cancelled = true;\n        },\n    };\n\n    return currentCall.promise;\n}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { truncate } from '../actions/truncate';\n    import { callServices, type ServiceRequest } from '../lib/services';\n    import {\n        RecipientType,\n        type Recipient,\n        type ServiceError,\n        type User,\n        GroupMode,\n    } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import ComboBox from './ComboBox.svelte';\n    import UserPicture from './UserPicture.svelte';\n\n    export let store: Store;\n    export let recipients: ReadonlyMap<number, Recipient>;\n    export let onChange: (users: ReadonlyArray<User>, type: RecipientType | null) => unknown;\n\n    const DELAY = 500;\n\n    let expanded = false;\n    let text = '';\n    let comboBox: ComboBox;\n    let loading = false;\n    let timeoutId: number | undefined;\n    let users: ReadonlyArray<User> = [];\n    let error = '';\n    let roleid = 0;\n    let groupid = 0;\n\n    $: course = $store.message?.course;\n    $: roleid = $store.draftRoles?.find((role) => role.id == roleid) ? roleid : 0;\n    $: groupid = $store.draftGroups?.find((group) => group.id == groupid)\n        ? groupid\n        : $store.draftGroups?.[0]?.id || 0;\n\n    const handleToggleClick = async () => {\n        if (expanded) {\n            text = '';\n            expanded = false;\n            window.clearTimeout(timeoutId);\n        } else {\n            search(false);\n            comboBox.focus();\n        }\n    };\n\n    const search = async (throttle: boolean) => {\n        const limit = $store.settings.usersearchlimit;\n\n        loading = true;\n        window.clearTimeout(timeoutId);\n\n        if (course?.groupmode != GroupMode.No && !$store.draftGroups?.length) {\n            loading = false;\n            expanded = true;\n            error = $store.strings.errornogroups;\n            return;\n        }\n\n        timeoutId = window.setTimeout(\n            async () => {\n                const request: ServiceRequest = {\n                    methodname: 'search_users',\n                    query: {\n                        courseid: course?.id || 0,\n                        fullname: text,\n                        roleid,\n                        groupid,\n                    },\n                    limit: limit + 1,\n                };\n                let responses: unknown[] | null;\n                try {\n                    responses = await callServices([request]);\n                } catch (error) {\n                    store.setError(error as ServiceError);\n                    return;\n                }\n                if (responses == null) {\n                    return;\n                }\n                users = responses.pop() as ReadonlyArray<User>;\n                if (!users.length) {\n                    error = $store.strings.nousersfound;\n                } else if (users.length > limit) {\n                    error = $store.strings.toomanyusersfound;\n                } else {\n                    error = '';\n                }\n                users = users.slice(0, limit);\n                loading = false;\n                expanded = true;\n            },\n            throttle ? DELAY : 0,\n        );\n    };\n\n    const handleBlur = () => {\n        text = '';\n        expanded = false;\n    };\n\n    const handleFocus = () => {\n        if (!expanded) {\n            search(false);\n        }\n    };\n</script>\n\n<div class=\"local-mail-draft-form-user-search form-group\">\n    <ComboBox\n        bind:this={comboBox}\n        mode=\"input\"\n        bind:inputText={text}\n        inputPlaceholder={$store.strings.addrecipients}\n        leftIconClass={loading ? 'fa-spinner fa-pulse' : 'fa-user'}\n        rightIconClass={text ? 'fa-times' : expanded ? 'fa-caret-up' : 'fa-caret-down'}\n        rightIconLabel={$store.strings.addrecipients}\n        onRightIconClick={handleToggleClick}\n        invalid={!recipients.size}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onInput={() => search(true)}\n    >\n        <div\n            class=\"local-mail-draft-form-user-search-dropdown dropdown-menu p-0 w-100\"\n            class:show={expanded}\n            style=\"min-width: 18rem\"\n        >\n            <div class=\"list-group-item d-sm-flex px-2 py-2\">\n                <div class=\"flex-grow-1 mx-2\">\n                    <select\n                        class=\"form-control custom-select w-100 text-truncate bg-transparent\"\n                        bind:value={roleid}\n                        on:change={() => search(false)}\n                    >\n                        <option value={0}>{$store.strings.allroles}</option>\n                        {#each $store.draftRoles ?? [] as role (role.id)}\n                            <option value={role.id}>\n                                {role.name}\n                            </option>\n                        {/each}\n                    </select>\n                </div>\n                {#if ($store.draftGroups ?? []).length > 0}\n                    <div class=\"flex-grow-1 mx-2 mt-2 mt-sm-0\">\n                        <select\n                            class=\"form-control text-truncate\"\n                            style=\"min-width: 0\"\n                            disabled={($store.draftGroups ?? []).length == 1}\n                            bind:value={groupid}\n                            on:change={() => search(false)}\n                        >\n                            {#each $store.draftGroups ?? [] as group (group.id)}\n                                <option value={group.id} class=\"text-truncate\">\n                                    {group.name}\n                                </option>\n                            {/each}\n                        </select>\n                    </div>\n                {/if}\n            </div>\n            {#if error}\n                <div class=\"list-group-item text-danger\">\n                    {error}\n                </div>\n            {:else}\n                <div class=\"list-group-item d-flex align-items-sm-center p-0\">\n                    <div class=\"mx-3 my-2\">\n                        <UserPicture icon=\"fa-users\" />\n                    </div>\n                    <div class=\"d-sm-flex align-items-center flex-grow-1\">\n                        <div class=\"py-2 mr-3\" use:truncate={$store.strings.allusers}>\n                            {$store.strings.allusers}\n                        </div>\n                        <div class=\"d-flex ml-auto mr-2\">\n                            {#each Object.values(RecipientType) as type}\n                                {@const all = users.every(\n                                    (user) => recipients.get(user.id)?.type == type,\n                                )}\n                                <button\n                                    type=\"button\"\n                                    class=\"btn text-nowrap mr-2 mb-2 mt-sm-2\"\n                                    class:btn-primary={all}\n                                    class:btn-secondary={!all}\n                                    aria-pressed={all}\n                                    on:click={() => onChange(users, all ? null : type)}\n                                >\n                                    {$store.strings[type]}\n                                </button>\n                            {/each}\n                        </div>\n                    </div>\n                </div>\n                {#each users as user (user.id)}\n                    {@const recipientType = recipients.get(user.id)?.type}\n                    <div class=\"list-group-item d-flex p-0\">\n                        <div class=\"mx-3 my-2\">\n                            <UserPicture {user} />\n                        </div>\n                        <div class=\"d-sm-flex flex-grow-1\">\n                            <div class=\"py-2 mr-3 align-self-center\">\n                                {user.fullname}\n                            </div>\n                            <div class=\"d-flex ml-auto mr-2 align-self-start\">\n                                {#each Object.values(RecipientType) as type}\n                                    <button\n                                        type=\"button\"\n                                        class=\"btn text-nowrap mr-2 mb-2 mt-sm-2\"\n                                        class:btn-primary={recipientType == type}\n                                        class:btn-secondary={recipientType != type}\n                                        aria-pressed={recipientType == type}\n                                        on:click={() =>\n                                            onChange([user], recipientType == type ? null : type)}\n                                    >\n                                        {$store.strings[type]}\n                                    </button>\n                                {/each}\n                            </div>\n                        </div>\n                    </div>\n                {/each}\n            {/if}\n        </div>\n    </ComboBox>\n</div>\n\n<style>\n    .local-mail-draft-form-user-search :global(.list-group-item) {\n        background: none;\n    }\n\n    .local-mail-draft-form-user-search-dropdown {\n        max-height: 50vh;\n        max-width: 50rem;\n        overflow-y: scroll;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n</script>\n\n<button\n    type=\"button\"\n    class=\"local-mail-action-send btn btn-primary flex-shrink-0 text-nowrap px-3 text-truncate ml-auto\"\n    title={$store.strings.send}\n    on:click={() => store.sendMessage()}\n>\n    <i class=\"fa fa-send mr-2\" />\n    {$store.strings.send}\n</button>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { loadModule, type EditorTinyLoader, type TinyMCE } from '../lib/amd';\n    import {\n        ViewportSize,\n        type Message,\n        type MessageData,\n        type MessageForm,\n        type RecipientType,\n        type User,\n    } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import { replaceStringParams } from '../lib/utils';\n    import CourseSelect from './CourseSelect.svelte';\n    import DraftFormRecipients from './DraftFormRecipients.svelte';\n    import DraftFormTimeAndLabels from './DraftFormTimeAndLabels.svelte';\n    import DraftFormUserSearch from './DraftFormUserSearch.svelte';\n    import HtmlHead from './HtmlHead.svelte';\n    import MessageReference from './MessageReference.svelte';\n    import SendButton from './SendButton.svelte';\n\n    export let store: Store;\n    export let message: Message;\n    export let form: MessageForm;\n\n    let formNode: HTMLFormElement | undefined;\n\n    $: courseid = message.course.id;\n    $: subject = message.subject;\n    $: recipients = new Map(message.recipients.map((user) => [user.id, user]));\n\n    onMount(() => {\n        formNode?.addEventListener('core_form/uploadChanged', () => save());\n        const disableTinyEventHandlers = enableTinyEventHandlers();\n\n        return () => {\n            disableTinyEventHandlers();\n        };\n    });\n\n    const enableTinyEventHandlers = () => {\n        let tiny: TinyMCE.TinyMCE | undefined;\n        let tinyEditor: TinyMCE.Editor | undefined;\n\n        const handleChange = () => {\n            tinyEditor?.options.set('tiny_autosave/plugin:autosaveHasReset', true);\n            tinyEditor?.save();\n            save();\n        };\n\n        const handleExecCommand = (event: TinyMCE.EditorEvent<{ command: string }>) => {\n            if (event.command != 'mceFocus') {\n                handleChange();\n            }\n        };\n\n        const handleEditor = (event: { editor: TinyMCE.Editor }) => {\n            if (event.editor.id == `local-mail-compose-editor-${message.id}`) {\n                tinyEditor?.off('input', handleChange);\n                tinyEditor?.off('ExecCommand', handleExecCommand);\n                tinyEditor = event.editor;\n                event.editor.on('input', handleChange);\n                event.editor.on('ExecCommand', handleExecCommand);\n            }\n        };\n\n        loadModule<EditorTinyLoader>('editor_tiny/loader').then(async (loader) => {\n            tiny = await loader.getTinyMCE();\n            tiny.EditorManager.get().forEach((editor) => handleEditor({ editor }));\n            tiny.EditorManager.on('SetupEditor', handleEditor);\n        });\n\n        return () => {\n            tiny?.EditorManager.off('SetupEditor', handleEditor);\n            tinyEditor?.off('input', handleChange);\n            tinyEditor?.off('ExecCommand', handleExecCommand);\n        };\n    };\n\n    const handleCourseChange = (id?: number) => {\n        courseid = id || $store.courses[0].id;\n        save();\n        store.navigate(\n            {\n                ...$store.params,\n                courseid: $store.params.courseid ? courseid : undefined,\n            },\n            true,\n        );\n    };\n\n    const handleRecipientChange = (users: ReadonlyArray<User>, type: RecipientType | null) => {\n        const newRecipients = new Map(recipients);\n        for (const user of users) {\n            if (type) {\n                newRecipients.set(user.id, { ...user, type, isvalid: true });\n            } else {\n                newRecipients.delete(user.id);\n            }\n        }\n        const recipientsList = Array.from(newRecipients.values());\n        recipientsList.sort((a, b) => a.sortorder.localeCompare(b.sortorder));\n        recipients = new Map(recipientsList.map((recipient) => [recipient.id, recipient]));\n\n        save();\n    };\n\n    const handleRecipientDelete = (user: User) => {\n        handleRecipientChange([user], null);\n    };\n\n    const handleSubmit = () => {\n        save();\n        store.navigateToList();\n    };\n\n    const save = () => {\n        if (!formNode) {\n            return;\n        }\n\n        const formData = new FormData(formNode);\n\n        const data: MessageData = {\n            courseid,\n            to: Array.from(recipients.values())\n                .filter((user) => user.type == 'to')\n                .map((user) => user.id),\n            cc: Array.from(recipients.values())\n                .filter((user) => user.type == 'cc')\n                .map((user) => user.id),\n            bcc: Array.from(recipients.values())\n                .filter((user) => user.type == 'bcc')\n                .map((user) => user.id),\n            subject,\n            content: formData.get('content[text]')?.toString() || '',\n            format: parseInt(formData.get('content[format]')?.toString() || '') || 1,\n            draftitemid: parseInt(formData.get('content[itemid]')?.toString() || '') || 0,\n        };\n\n        store.updateDraft(data, false);\n    };\n</script>\n\n<HtmlHead javascript={form.javascript} />\n\n<hr class=\"d-lg-none mt-0 mb-3 mb-sm-2\" />\n<form\n    bind:this={formNode}\n    on:submit|preventDefault={handleSubmit}\n    class=\"pt-lg-2 pb-3 px-lg-4\"\n    class:card={$store.viewportSize >= ViewportSize.LG}\n>\n    <DraftFormTimeAndLabels {store} {message} />\n    <div class=\"row\">\n        <div class=\"form-group col-12 col-xl-5\">\n            <CourseSelect\n                settings={$store.settings}\n                strings={$store.strings}\n                courses={$store.courses}\n                label={$store.strings.course}\n                selected={courseid}\n                required={true}\n                readonly={message.references.length > 0}\n                onChange={handleCourseChange}\n            />\n        </div>\n        <div class=\"col-12 col-xl-7\">\n            <DraftFormUserSearch {store} {recipients} onChange={handleRecipientChange} />\n        </div>\n    </div>\n    <DraftFormRecipients {store} {recipients} onDelete={handleRecipientDelete} />\n\n    <div class=\"form-group\">\n        <input\n            type=\"text\"\n            id=\"local-mail-message-form-subject\"\n            class=\"form-control\"\n            class:is-invalid={!subject.trim()}\n            placeholder={$store.strings.subject}\n            aria-label={$store.strings.subject}\n            autocomplete=\"off\"\n            maxlength=\"100\"\n            bind:value={subject}\n            on:input={() => save()}\n        />\n    </div>\n\n    <div class=\"form-group\" on:change={() => save()}>\n        <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n        {@html form.editorhtml}\n    </div>\n    <div class=\"form-group\">\n        <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n        {@html form.filemanagerhtml}\n    </div>\n\n    {#if Array.from(recipients.values()).some((user) => !user.isvalid)}\n        <div class=\"alert alert-danger\">\n            <i class=\"fa fa-exclamation-circle mr-2\" />\n            {$store.strings.errorinvalidrecipients}\n        </div>\n    {/if}\n    {#if recipients.size == 0}\n        <div class=\"alert alert-danger\">\n            <i class=\"fa fa-exclamation-circle mr-2\" />\n            {$store.strings.erroremptyrecipients}\n        </div>\n    {:else if recipients.size > $store.settings.maxrecipients}\n        <div class=\"alert alert-danger\">\n            <i class=\"fa fa-exclamation-circle mr-2\" />\n            {replaceStringParams(\n                $store.strings.errortoomanyrecipients,\n                $store.settings.maxrecipients,\n            )}\n        </div>\n    {/if}\n    {#if !subject.trim()}\n        <div class=\"alert alert-danger\">\n            <i class=\"fa fa-exclamation-circle mr-2\" />\n            {$store.strings.erroremptysubject}\n        </div>\n    {/if}\n    <div class=\"d-flex justify-content-end align-items-center\">\n        <button\n            type=\"submit\"\n            class=\"btn btn-secondary flex-shrink-0 text-nowrap px-3 text-truncate\"\n            title={$store.strings.send}\n        >\n            {$store.strings.save}\n        </button>\n        <SendButton {store} />\n    </div>\n</form>\n\n{#if message.references.length > 0}\n    <div class=\"alert alert-secondary mt-4 mb-4 text-center\">\n        {$store.strings.references}\n    </div>\n    {#each message.references as reference (reference.id)}\n        <MessageReference strings={$store.strings} {reference} />\n    {/each}\n{/if}\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n    export let store: Store;\n\n    const defaultValues: ReadonlyArray<number> = [5, 10, 20, 50, 100];\n\n    $: values = defaultValues.includes($store.preferences.perpage)\n        ? defaultValues\n        : defaultValues.concat([$store.preferences.perpage]).sort((a, b) => a - b);\n\n    let selected: number = $store.preferences.perpage;\n</script>\n\n<div class=\"form-inline justify-content-end mt-3\">\n    <div class=\"form-group\">\n        <label for=\"local-mail-perpage-select\">{$store.strings.messagesperpage}:</label>\n        <select\n            id=\"local-mail-perpage-select\"\n            class=\"local-mail-perpage-select-select custom-select\"\n            bind:value={selected}\n            on:change={() => store.savePreferences({ perpage: selected })}\n        >\n            {#each values as value}\n                <option {value}>{value}</option>\n            {/each}\n        </select>\n    </div>\n</div>\n\n<style>\n    .local-mail-perpage-select-select {\n        width: auto;\n        margin-left: 0.5rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n    import ModalDialog from './ModalDialog.svelte';\n\n    export let store: Store;\n    export let onCancel: () => void;\n\n    let markasread = $store.preferences.markasread;\n    let notifications = $store.settings.messageprocessors\n        .map((processor) => processor.name)\n        .filter((name) => $store.preferences.notifications.includes(name));\n\n    const handleConfirm = () => {\n        onCancel();\n        store.savePreferences({ markasread, notifications });\n    };\n\n    const toggleMarkAsRead = () => {\n        markasread = !markasread;\n    };\n\n    const toggleMessageProcessor = (name: string) => {\n        notifications = notifications.includes(name)\n            ? notifications.filter((n) => n != name)\n            : [...notifications, name];\n    };\n</script>\n\n<ModalDialog\n    title={$store.strings.preferences}\n    confirmText={$store.strings.save}\n    cancelText={$store.strings.cancel}\n    onConfirm={handleConfirm}\n    {onCancel}\n>\n    <h6 class=\"mb-3\">{$store.strings.notifications}</h6>\n\n    {#each $store.settings.messageprocessors as processor}\n        <div class=\"custom-control custom-switch my-2\">\n            <input\n                id=\"local-mail-preferences-messageprocessor-{processor.name}\"\n                class=\"custom-control-input\"\n                type=\"checkbox\"\n                checked={processor.locked\n                    ? processor.enabled\n                    : notifications.includes(processor.name)}\n                disabled={processor.locked}\n                on:click={() => toggleMessageProcessor(processor.name)}\n            />\n            <label\n                for=\"local-mail-preferences-messageprocessor-{processor.name}\"\n                class=\"custom-control-label pl-1\"\n            >\n                {processor.displayname}\n                {#if processor.locked}\n                    <span class=\"ml-1\">({$store.strings.locked})</span>\n                {/if}\n            </label>\n        </div>\n    {/each}\n    <div class=\"custom-control custom-switch my-2 mt-3\">\n        <input\n            id=\"local-mail-preferences-markasread\"\n            class=\"custom-control-input\"\n            type=\"checkbox\"\n            checked={markasread && notifications.length > 0}\n            disabled={notifications.length == 0}\n            on:click={toggleMarkAsRead}\n        />\n        <label for=\"local-mail-preferences-markasread\" class=\"custom-control-label pl-1\">\n            {$store.strings.markmessagesasread}\n        </label>\n    </div>\n</ModalDialog>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n    export let message: string;\n</script>\n\n<button\n    type=\"button\"\n    class=\"btn btn-help p-0\"\n    data-container=\"body\"\n    data-toggle=\"popover\"\n    data-placement=\"top\"\n    data-content={message}\n    data-trigger=\"focus\"\n    aria-label={$store.strings.help}\n>\n    <i class=\"fa fa-fw fa-question-circle text-info\" role=\"img\" title={$store.strings.help} />\n</button>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n    import { dateFromTimestamp, timestampFromDate } from '../lib/utils';\n    import HelpPopover from './HelpPopover.svelte';\n\n    export let store: Store;\n    export let sendername = '';\n    export let recipientname = '';\n    export let unread = false;\n    export let withfilesonly = false;\n    export let maxtime = 0;\n    export let onSubmit: () => void;\n    export let onCancel: () => void;\n\n    export function focus() {\n        senderNode.focus();\n    }\n\n    let senderNode: HTMLElement;\n    let today = dateFromTimestamp(Math.floor(new Date().getTime() / 1000));\n\n    $: maxdate = dateFromTimestamp(maxtime);\n\n    const updateMaxTime = (event: Event) => {\n        maxtime = timestampFromDate((event.target as HTMLInputElement).value);\n    };\n\n    const handleInputKey = (event: KeyboardEvent) => {\n        if (event.key == 'Enter') {\n            onSubmit();\n        } else if (event.key == 'Escape') {\n            onCancel();\n        }\n    };\n</script>\n\n<div class=\"dropdown-menu show p-3 w-100\" style=\"min-width: 18rem\">\n    <div class=\"form-group row\">\n        <label for=\"local-mail-search-input-sendername\" class=\"col-4 col-form-label pr-0\">\n            {$store.strings.searchfrom}\n        </label>\n        <div class=\"col-8\">\n            <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"local-mail-search-input-sendername\"\n                bind:value={sendername}\n                bind:this={senderNode}\n                on:keyup={handleInputKey}\n            />\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"local-mail-search-input-recipientname\" class=\"col-4 col-form-label pr-0\">\n            {$store.strings.searchto}\n        </label>\n        <div class=\"col-8 p\">\n            <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"local-mail-search-input-recipientname\"\n                bind:value={recipientname}\n                on:keyup={handleInputKey}\n            />\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"local-mail-search-input-maxdate\" class=\"col-4 col-form-label pr-0\">\n            {$store.strings.searchdate}\n            <HelpPopover {store} message={$store.strings.searchdatehelp} />\n        </label>\n        <div class=\"col-8\">\n            <input\n                type=\"date\"\n                class=\"form-control\"\n                id=\"local-mail-search-input-maxdate\"\n                max={today}\n                value={maxdate}\n                on:input={updateMaxTime}\n                on:keyup={handleInputKey}\n            />\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap align-items-center\" style=\"column-gap: 2rem; row-gap: 1rem\">\n        <div class=\"form-check\">\n            <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"local-mail-search-input-unread\"\n                bind:checked={unread}\n                on:keyup={handleInputKey}\n            />\n            <label class=\"form-check-label\" for=\"local-mail-search-input-unread\">\n                {$store.strings.searchunreadonly}\n            </label>\n        </div>\n        <div class=\"form-check\">\n            <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"local-mail-search-input-withfilesonly\"\n                bind:checked={withfilesonly}\n                on:keyup={handleInputKey}\n            />\n            <label class=\"form-check-label\" for=\"local-mail-search-input-withfilesonly\">\n                {$store.strings.searchhasattachments}\n            </label>\n        </div>\n        <button\n            type=\"button\"\n            class=\"btn btn-primary px-3 ml-auto\"\n            on:click={onSubmit}\n            on:keyup={handleInputKey}\n        >\n            {$store.strings.search}\n        </button>\n    </div>\n</div>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { onDestroy } from 'svelte';\n    import {\n        RecipientType,\n        type MessageSummary,\n        type ViewParams,\n        type ServiceError,\n    } from '../lib/state';\n    import { callServices, type MessageQuery, type SearchMessagesRequest } from '../lib/services';\n    import type { Store } from '../lib/store';\n    import { viewUrl } from '../lib/url';\n    import ListMessageSubject from './ListMessageSubject.svelte';\n    import ListMessageUsers from './ListMessageUsers.svelte';\n\n    export let store: Store;\n    export let enabled: boolean;\n    export let content: string;\n    export let loading = false;\n    export let onClick: (params: ViewParams) => void;\n\n    $: if (enabled) {\n        search(content);\n    } else {\n        messages = undefined;\n        loading = false;\n        window.clearTimeout(timeoutId);\n    }\n\n    const LIMIT = 10;\n    const DELAY = 500;\n\n    let timeoutId: number | undefined;\n    let messages: ReadonlyArray<MessageSummary> | undefined;\n    let moreResults = false;\n\n    const search = async (content: string) => {\n        loading = true;\n        window.clearTimeout(timeoutId);\n\n        timeoutId = window.setTimeout(async () => {\n            const params = $store.params;\n            const query: MessageQuery = {\n                courseid: params.courseid,\n                labelid: params.tray == 'label' ? params.labelid : undefined,\n                draft: params.tray == 'drafts' ? true : params.tray == 'sent' ? false : undefined,\n                roles:\n                    params.tray == 'inbox'\n                        ? Object.values(RecipientType)\n                        : params.tray == 'sent'\n                          ? ['from']\n                          : undefined,\n                starred: params.tray == 'starred' ? true : undefined,\n                deleted: params.tray == 'trash',\n                content: content.trim(),\n                stopid: $store.incrementalSearchStopId,\n            };\n            const request: SearchMessagesRequest = {\n                methodname: 'search_messages',\n                query,\n                limit: LIMIT + 1,\n            };\n            let responses: unknown[] | null;\n            try {\n                responses = await callServices([request]);\n            } catch (error) {\n                store.setError(error as ServiceError);\n                return;\n            }\n            if (responses == null) {\n                return;\n            }\n            loading = false;\n            messages = responses[0] as ReadonlyArray<MessageSummary>;\n            moreResults = messages.length > LIMIT || Boolean($store.incrementalSearchStopId);\n            messages = messages.slice(0, LIMIT);\n        }, DELAY);\n    };\n\n    const clickHandler = (message: MessageSummary, i: number) => {\n        return (event: MouseEvent) => {\n            if (!message.draft) {\n                event.preventDefault();\n                onClick(messageParams(message, i));\n            }\n        };\n    };\n\n    onDestroy(() => {\n        window.clearTimeout(timeoutId);\n    });\n\n    $: messageParams = (message: MessageSummary, i: number) => {\n        return {\n            ...$store.params,\n            messageid: message.id,\n            offset: i,\n            search: { content: content.trim() },\n        };\n    };\n\n    $: allParams = {\n        ...$store.params,\n        messageid: undefined,\n        offset: 0,\n        search: { content: content.trim() },\n    };\n</script>\n\n{#if enabled && messages != null}\n    <div class=\"dropdown-menu overflow-hidden show p-0 w-100\" style=\"min-width: 18rem\">\n        {#each messages as message, i}\n            {#if i > 0}\n                <div class=\"dropdown-divider my-0\" />\n            {/if}\n            <a\n                class=\"dropdown-item local-mail-incremental-search-item\"\n                class:font-weight-bold={message.unread}\n                href={viewUrl(messageParams(message, i))}\n                on:click={clickHandler(message, i)}\n            >\n                <ListMessageSubject {store} {message} />\n                <div class=\"local-mail-incremental-search-muted d-flex\">\n                    <ListMessageUsers {store} {message} />\n                    <div title={message.fulltime} class=\"ml-auto\">\n                        {message.shorttime}\n                    </div>\n                </div>\n            </a>\n        {/each}\n        {#if moreResults}\n            <div class=\"dropdown-divider my-0\" />\n            <a\n                class=\"dropdown-item py-2\"\n                href={viewUrl(allParams)}\n                on:click|preventDefault={() => onClick(allParams)}\n            >\n                {$store.strings.searchallmessages}\n            </a>\n        {:else if !messages.length}\n            <div class=\"px-4 py-2 text-danger\">\n                {$store.strings.nomessagesfound}\n            </div>\n        {/if}\n    </div>\n{/if}\n\n<style>\n    .local-mail-incremental-search-muted {\n        opacity: 0.6;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { tick } from 'svelte';\n    import type { SearchParams, ViewParams } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import ComboBox from './ComboBox.svelte';\n    import SearchOptions from './SearchOptions.svelte';\n    import IncrementalSearch from './IncrementalSearch.svelte';\n\n    export let store: Store;\n\n    let entering = !$store.params.search;\n    let advancedExpanded = false;\n    let comboBox: ComboBox;\n    let searchOptions: SearchOptions;\n    let content = '';\n    let sendername = '';\n    let recipientname = '';\n    let unread = false;\n    let withfilesonly = false;\n    let maxtime = 0;\n    let loading = false;\n\n    const updateFields = (search?: SearchParams) => {\n        content = search?.content || '';\n        sendername = search?.sendername || '';\n        recipientname = search?.recipientname || '';\n        unread = search?.unread || false;\n        withfilesonly = search?.withfilesonly || false;\n        maxtime = search?.maxtime || 0;\n    };\n\n    $: search = $store.params.search;\n\n    $: updateFields(search);\n\n    $: advancedEnabled = Boolean(\n        search?.sendername ||\n            search?.recipientname ||\n            search?.unread ||\n            search?.withfilesonly ||\n            search?.maxtime,\n    );\n\n    $: searchEnabled = Boolean(search?.content) || advancedEnabled;\n\n    $: submitEnabled = Boolean(\n        content.trim() ||\n            sendername.trim() ||\n            recipientname.trim() ||\n            unread ||\n            withfilesonly ||\n            maxtime,\n    );\n\n    $: searchFields = [\n        { label: '', value: content },\n        { label: $store.strings.searchfrom, value: sendername },\n        { label: $store.strings.searchto, value: recipientname },\n        {\n            label: $store.strings.searchdate,\n            value: maxtime > 0 ? new Date(maxtime * 1000).toLocaleDateString() : '',\n        },\n        { label: $store.strings.searchunreadonly, value: unread },\n        { label: $store.strings.searchhasattachments, value: withfilesonly },\n    ].filter(({ value }) => Boolean(value));\n\n    const startEntering = async () => {\n        entering = true;\n        if (advancedEnabled) {\n            advancedExpanded = true;\n        }\n        await tick();\n        comboBox.focus();\n    };\n\n    const stopEntering = async () => {\n        entering = !searchEnabled;\n        advancedExpanded = false;\n        updateFields(search);\n    };\n\n    const toggleDropdown = async () => {\n        if (advancedExpanded) {\n            advancedExpanded = false;\n            await tick();\n            comboBox.focus();\n        } else {\n            entering = true;\n            advancedExpanded = true;\n            await tick();\n            searchOptions.focus();\n        }\n    };\n\n    const cancel = async () => {\n        entering = true;\n        advancedExpanded = false;\n        updateFields();\n        await store.navigate({\n            ...$store.params,\n            offset: undefined,\n            search: undefined,\n        });\n        await tick();\n        comboBox.focus();\n    };\n\n    const submit = async () => {\n        await store.navigate({\n            ...$store.params,\n            messageid: undefined,\n            offset: undefined,\n            search: advancedExpanded\n                ? {\n                      content: content.trim(),\n                      sendername: sendername.trim(),\n                      recipientname: recipientname.trim(),\n                      unread,\n                      withfilesonly,\n                      maxtime,\n                  }\n                : {\n                      content: content.trim(),\n                  },\n        });\n        advancedExpanded = false;\n        entering = false;\n    };\n\n    const handleIncrementalSearchClick = async (params: ViewParams) => {\n        await store.navigate(params);\n        advancedExpanded = false;\n        entering = false;\n    };\n</script>\n\n<ComboBox\n    bind:this={comboBox}\n    mode={entering ? 'input' : 'button'}\n    bind:inputText={content}\n    inputPlaceholder={$store.strings.search}\n    leftIconClass={loading ? 'fa-spinner fa-pulse' : 'fa-search'}\n    rightIconClass={advancedExpanded ? 'fa-caret-up' : 'fa-sliders'}\n    rightIconLabel={$store.strings.searchoptions}\n    middleIconClass={searchEnabled || submitEnabled ? 'fa-times' : undefined}\n    middleIconLabel={$store.strings.clearsearch}\n    buttonClass=\"alert alert-primary\"\n    onBlur={stopEntering}\n    onEnter={submitEnabled ? submit : cancel}\n    onRightIconClick={toggleDropdown}\n    onMiddleIconClick={cancel}\n    onButtonClick={startEntering}\n>\n    <span slot=\"buttonContent\">\n        {#each searchFields as { label, value }, i}\n            {#if i > 0}<span class=\"dimmed_text\">,&ensp;</span>{/if}\n            {#if value === true}\n                <span class=\"dimmed_text\">{label}</span>\n            {:else}\n                {#if label}<span class=\"dimmed_text\">{label}: </span>{/if}\n                {value}\n            {/if}\n        {/each}\n    </span>\n\n    {#if advancedExpanded}\n        <SearchOptions\n            bind:this={searchOptions}\n            {store}\n            bind:sendername\n            bind:recipientname\n            bind:unread\n            bind:withfilesonly\n            bind:maxtime\n            onSubmit={submitEnabled ? submit : cancel}\n            onCancel={cancel}\n        />\n    {/if}\n    {#if $store.settings.incrementalsearch}\n        <IncrementalSearch\n            {store}\n            enabled={entering && !advancedExpanded && !!content.trim()}\n            {content}\n            bind:loading\n            onClick={handleIncrementalSearchClick}\n        />\n    {/if}\n</ComboBox>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { flip } from 'svelte/animate';\n    import { fly } from 'svelte/transition';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n</script>\n\n<div\n    aria-live=\"polite\"\n    aria-atomic=\"true\"\n    class=\"local-mail-toasts position-fixed d-flex flex-column-reverse p-3\"\n>\n    {#each $store.toasts as toast (toast)}\n        <div\n            animate:flip\n            in:fly|global={{ y: 50, delay: 200 }}\n            out:fly|global={{ y: 50, duration: 400 }}\n            class=\"toast mt-2 mb-0 show\"\n            role=\"alert\"\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            data-autohide=\"false\"\n        >\n            <div class=\"toast-body d-flex align-items-center p-2\">\n                <div class=\"px-1 mr-auto\">{toast.text}</div>\n                {#if toast.undo}\n                    <button\n                        type=\"button\"\n                        class=\"local-mail-toast-undo btn font-weight-bold px-2 py-0 ml-3\"\n                        on:click={() => store.undo(toast)}\n                    >\n                        {$store.strings.undo}\n                    </button>\n                {/if}\n\n                <button\n                    type=\"button\"\n                    class=\"btn px-2 py-0 ml-2\"\n                    title={$store.strings.close}\n                    on:click={() => store.hideToast(toast)}\n                >\n                    <i class=\"fa fa-times\" />\n                </button>\n            </div>\n        </div>\n    {/each}\n</div>\n\n<style>\n    .local-mail-toasts {\n        left: 0;\n        bottom: 0;\n        z-index: 1100;\n        pointer-events: none;\n    }\n\n    .local-mail-toasts .toast {\n        opacity: 1;\n        pointer-events: auto;\n        flex-basis: 0;\n        max-width: 400px;\n    }\n\n    .local-mail-toast-undo {\n        color: var(--activitycontent);\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n</script>\n\n<button\n    type=\"button\"\n    class=\"local-mail-back-button btn btn-secondary\"\n    title={$store.strings.messagelist}\n    on:click={() => store.navigateToList()}\n>\n    <i class=\"fa fa fa-fw fa-arrow-left\" />\n</button>\n\n<style>\n    .local-mail-back-button {\n        margin-right: 13px;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { blur } from '../actions/blur';\n    import type { SelectAllType } from '../lib/state';\n    import type { Store } from '../lib/store';\n\n    export let store: Store;\n\n    let expanded = false;\n\n    const closeMenu = () => {\n        expanded = false;\n    };\n\n    const toggleMenu = () => {\n        expanded = !expanded;\n    };\n\n    const selectAll = (type: SelectAllType) => {\n        closeMenu();\n        store.selectAll(type);\n    };\n\n    $: iconClass =\n        $store.selectedMessages.size == 0\n            ? 'fa-square-o'\n            : $store.selectedMessages.size < $store.listMessages.length\n              ? 'fa-minus-square-o'\n              : 'fa-check-square-o';\n</script>\n\n<div class=\"btn-group\" role=\"group\" use:blur={closeMenu}>\n    <button\n        class=\"btn btn-secondary dropdown-toggle\"\n        aria-expanded={expanded}\n        title={$store.strings.select}\n        on:click={toggleMenu}\n    >\n        <i class=\"fa fa-fw {iconClass}\" />\n    </button>\n    {#if expanded}\n        <div class=\"dropdown-menu show\">\n            <button type=\"button\" class=\"dropdown-item\" on:click={() => selectAll('all')}>\n                {$store.strings.all}\n            </button>\n            <button type=\"button\" class=\"dropdown-item\" on:click={() => selectAll('none')}>\n                {$store.strings.none}\n            </button>\n            <button type=\"button\" class=\"dropdown-item\" on:click={() => selectAll('read')}>\n                {$store.strings.read}\n            </button>\n            <button type=\"button\" class=\"dropdown-item\" on:click={() => selectAll('unread')}>\n                {$store.strings.unread}\n            </button>\n            <button type=\"button\" class=\"dropdown-item\" on:click={() => selectAll('starred')}>\n                {$store.strings.starred}\n            </button>\n            <button type=\"button\" class=\"dropdown-item\" on:click={() => selectAll('unstarred')}>\n                {$store.strings.unstarred}\n            </button>\n        </div>\n    {/if}\n</div>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { ViewportSize } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import BackButton from './BackButton.svelte';\n    import CourseSelect from './CourseSelect.svelte';\n    import DeleteButton from './DeleteButton.svelte';\n    import DeleteForeverButton from './DeleteForeverButton.svelte';\n    import LabelsButton from './LabelsButton.svelte';\n    import MoreActionsButton from './MoreActionsButton.svelte';\n    import PagingButtons from './PagingButtons.svelte';\n    import RestoreButton from './RestoreButton.svelte';\n    import SelectAllButton from './SelectAllButton.svelte';\n    import SendButton from './SendButton.svelte';\n\n    export let store: Store;\n</script>\n\n<div role=\"toolbar\" class=\"local-mail-toolbar d-flex w-100\">\n    {#if $store.message}\n        <BackButton {store} />\n    {:else}\n        <SelectAllButton {store} />\n    {/if}\n\n    {#if $store.viewportSize >= ViewportSize.MD}\n        <div class=\"btn-group\" role=\"group\">\n            {#if $store.params.tray == 'trash'}\n                <RestoreButton {store} />\n                <DeleteForeverButton {store} />\n            {:else}\n                <LabelsButton {store} />\n                <DeleteButton {store} />\n            {/if}\n            <MoreActionsButton {store} />\n        </div>\n    {/if}\n    {#if !$store.message?.draft && ['shortname', 'fullname'].includes($store.settings.filterbycourse) && $store.viewportSize < ViewportSize.LG}\n        <div\n            class=\"d-flex flex-grow-1 ml-auto mr-0 ml-md-0 mr-md-auto\"\n            style=\"max-width: 20rem; min-width: 0\"\n        >\n            <CourseSelect\n                settings={$store.settings}\n                strings={$store.strings}\n                courses={$store.courses}\n                label={$store.strings.allcourses}\n                selected={$store.params.courseid}\n                readonly={$store.params.tray == 'course'}\n                buttonClass=\"alert alert-primary\"\n                dropdownAlign={$store.viewportSize < ViewportSize.MD ? 'right' : 'left'}\n                onChange={(id) => store.selectCourse(id)}\n            />\n        </div>\n    {/if}\n\n    {#if $store.viewportSize >= ViewportSize.MD}\n        <PagingButtons {store} />\n    {:else if $store.message?.draft}\n        <SendButton {store} />\n    {/if}\n</div>\n\n<style>\n    .local-mail-toolbar {\n        column-gap: 1rem;\n    }\n</style>\n","<!--\nSPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\nSPDX-FileCopyrightText: 2024-2025 Albert Gasset <albertgasset@fsfe.org>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n-->\n<svelte:options immutable={true} />\n\n<script lang=\"ts\">\n    import { onMount, afterUpdate } from 'svelte';\n    import { busy } from '../actions/busy';\n    import { ViewportSize } from '../lib/state';\n    import type { Store } from '../lib/store';\n    import { getViewParamsFromUrl } from '../lib/url';\n    import { formatCourseName } from '../lib/utils';\n    import ComposeButton from './ComposeButton.svelte';\n    import CourseLink from './CourseLink.svelte';\n    import ErrorModal from './ErrorModal.svelte';\n    import BottomToolBar from './BottomToolBar.svelte';\n    import List from './List.svelte';\n    import Menu from './Menu.svelte';\n    import Message from './Message.svelte';\n    import DraftForm from './DraftForm.svelte';\n    import PerPageSelect from './PerPageSelect.svelte';\n    import PreferencesButton from './PreferencesButton.svelte';\n    import PreferencesDialog from './PreferencesDialog.svelte';\n    import SearchBox from './SearchBox.svelte';\n    import Toasts from './Toasts.svelte';\n    import TopToolBar from './TopToolBar.svelte';\n\n    export let store: Store;\n\n    let viewNode: HTMLElement;\n    let prevNavigationId = 0;\n\n    $: loading = $store.loading;\n    $: tray = $store.params.tray;\n    $: course = $store.courses.find((c) => c.id == $store.params.courseid);\n    $: label = $store.labels.find((l) => l.id == $store.params.labelid);\n\n    $: heading =\n        tray == 'inbox'\n            ? $store.strings.inbox\n            : tray == 'starred'\n              ? $store.strings.starredplural\n              : tray == 'sent'\n                ? $store.strings.sentplural\n                : tray == 'drafts'\n                  ? $store.strings.drafts\n                  : tray == 'trash'\n                    ? $store.strings.trash\n                    : tray == 'label'\n                      ? label?.name || ''\n                      : tray == 'course'\n                        ? formatCourseName(course, 'fullname')\n                        : '';\n\n    $: title = $store.message ? $store.message.subject.trim() || $store.strings.nosubject : heading;\n\n    $: mobileTitle =\n        $store.viewportSize < ViewportSize.LG ? heading || $store.strings.pluginname : '';\n\n    $: captureBackButton = tray != null;\n\n    $: window.parent?.postMessage({ addon: 'local_satsmail', setLoading: loading }, '*');\n    $: window.parent?.postMessage({ addon: 'local_satsmail', setTitle: mobileTitle }, '*');\n    $: window.parent?.postMessage({ addon: 'local_satsmail', captureBack: captureBackButton }, '*');\n\n    onMount(() => {\n        store.setViewportSize(window.innerWidth);\n    });\n\n    afterUpdate(() => {\n        if (prevNavigationId != $store.navigationId) {\n            prevNavigationId = $store.navigationId;\n            let parent = viewNode.parentElement;\n            while (parent) {\n                if (parent.scrollTop > 0) {\n                    parent.scrollTo({ top: 0 });\n                }\n                parent = parent.parentElement;\n            }\n        }\n    });\n\n    const handleBeforeUnload = (event: Event) => {\n        if ($store.draftData) {\n            event.preventDefault();\n            store.updateDraft($store.draftData, true);\n            return '';\n        }\n    };\n\n    const handleMessage = (event: MessageEvent) => {\n        if ($store.mobile && event.data.addon == 'local_satsmail' && event.data.backClicked) {\n            store.navigateToMenu();\n        }\n    };\n\n    const handleClick = (event: Event) => {\n        if ($store.mobile && !event.defaultPrevented && event.target instanceof HTMLElement) {\n            const link = event.target.closest('a');\n            if (link) {\n                window.parent?.postMessage({ addon: 'local_satsmail', openUrl: link.href }, '*');\n            }\n            if (!event.defaultPrevented) {\n                event.preventDefault();\n            }\n        }\n    };\n</script>\n\n<svelte:window\n    on:resize={() => store.setViewportSize(window.innerWidth)}\n    on:popstate={() => store.navigate(getViewParamsFromUrl())}\n    on:beforeunload={handleBeforeUnload}\n    on:message={handleMessage}\n/>\n\n<svelte:document on:click={$store.mobile ? handleClick : undefined} />\n\n<svelte:head>\n    <title>{title} - {$store.strings.pluginname}</title>\n</svelte:head>\n\n<div\n    use:busy={$store.loading}\n    class=\"local-mail local-mail-view container-fluid d-flex flex-column pt-2\"\n    class:pt-3={!$store.mobile}\n    class:p-md-4={!$store.mobile && $store.viewportSize >= ViewportSize.MD}\n    class:min-vh-100={$store.viewportSize < ViewportSize.MD}\n    bind:this={viewNode}\n>\n    {#if !$store.mobile}\n        <CourseLink {store} />\n    {/if}\n\n    <!-- Heading / search / compose button -->\n    <div class=\"row align-items-center\">\n        {#if $store.mobile && $store.viewportSize < ViewportSize.LG}\n            <div class=\"local-mail-view-side-column\" />\n        {:else}\n            <h1 class=\"h2 local-mail-view-side-column text-truncate mb-3 mb-md-4\">\n                {$store.strings.pluginname}\n                {#if heading && $store.viewportSize < ViewportSize.LG}\n                    <i class=\"fa fa-angle-right mx-1\" aria-hidden=\"true\" />\n                    {heading}\n                {/if}\n            </h1>\n        {/if}\n\n        <div\n            class=\"local-mail-view-main-column d-flex mb-3\"\n            class:mb-4={$store.viewportSize >= ViewportSize.LG}\n        >\n            {#if tray}\n                <div class=\"local-mail-view-search\">\n                    <SearchBox {store} />\n                </div>\n            {/if}\n            {#if $store.viewportSize < ViewportSize.LG}\n                <ComposeButton\n                    strings={$store.strings}\n                    iconOnly={tray && $store.viewportSize < ViewportSize.SM}\n                    onClick={() => store.createMessage($store.params.courseid)}\n                />\n                {#if !tray}\n                    <div class=\"ml-auto\">\n                        <PreferencesButton\n                            strings={$store.strings}\n                            onClick={() => store.showDialog('preferences')}\n                        />\n                    </div>\n                {/if}\n            {/if}\n        </div>\n    </div>\n\n    <!-- Toolbar -->\n    {#if tray || $store.viewportSize >= ViewportSize.LG}\n        <div class=\"row mb-3\">\n            {#if $store.viewportSize >= ViewportSize.LG}\n                <div class=\"local-mail-view-side-column\">\n                    <ComposeButton\n                        strings={$store.strings}\n                        onClick={() => store.createMessage($store.params.courseid)}\n                    />\n                </div>\n            {/if}\n            {#if tray}\n                <div class=\"local-mail-view-main-column d-flex\">\n                    <TopToolBar {store} />\n                </div>\n            {/if}\n        </div>\n    {/if}\n\n    <!-- List / Messaege -->\n    <div class=\"row mb-3\">\n        {#if !tray || $store.viewportSize >= ViewportSize.LG}\n            <div class=\"local-mail-view-side-column\">\n                <Menu\n                    settings={$store.settings}\n                    strings={$store.strings}\n                    courses={$store.courses}\n                    labels={$store.labels}\n                    params={$store.params}\n                    onClick={store.navigate}\n                    onCourseChange={store.selectCourse}\n                />\n            </div>\n        {/if}\n        {#if tray}\n            <div class=\"local-mail-view-main-column\">\n                {#if $store.message?.draft && $store.draftForm}\n                    <DraftForm {store} message={$store.message} form={$store.draftForm} />\n                {:else if $store.message}\n                    <Message {store} message={$store.message} />\n                {:else}\n                    <List {store} />\n\n                    <PerPageSelect {store} />\n                {/if}\n            </div>\n        {/if}\n    </div>\n</div>\n\n<div class=\"local-mail\" style=\"display: contents\">\n    {#if tray && $store.viewportSize < ViewportSize.MD}\n        <BottomToolBar {store} />\n    {/if}\n\n    {#if $store.params.dialog == 'preferences'}\n        <PreferencesDialog {store} onCancel={() => store.hideDialog()} />\n    {/if}\n\n    <Toasts {store} />\n    <ErrorModal {store} />\n</div>\n\n<style>\n    .local-mail-view {\n        max-width: 100rem;\n        padding-bottom: 0 !important;\n    }\n\n    .local-mail-view-main-column {\n        padding-right: 15px;\n        padding-left: 15px;\n        flex-basis: 100%;\n        flex-grow: 1;\n        min-width: 0;\n        column-gap: 1rem;\n    }\n\n    .local-mail-view-side-column {\n        padding-right: 15px;\n        padding-left: 15px;\n        flex-basis: 100%;\n        flex-grow: 1;\n        min-width: 0;\n    }\n\n    .local-mail-view-search {\n        flex-grow: 1;\n        margin-right: auto;\n    }\n\n    @media (min-width: 992px) {\n        .local-mail-view-main-column {\n            flex-basis: 75%;\n            flex-shrink: 1;\n        }\n        .local-mail-view-side-column {\n            flex-basis: 25%;\n            flex-shrink: 1;\n            max-width: 18rem;\n        }\n        .local-mail-view-search {\n            max-width: 30rem;\n        }\n    }\n</style>\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/*\n * SPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n * SPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n *\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\nimport { writable } from 'svelte/store';\nimport {\n    callServices,\n    type CountMessagesResponse,\n    type CreateLabelRequest,\n    type CreateMessageRequest,\n    type DeleteLabelRequest,\n    type EmptyTrashRequest,\n    type ForwardMessageRequest,\n    type GetCoursesResponse,\n    type GetLabelsResponse,\n    type GetMessageFormeResponse,\n    type GetMessageResponse,\n    type MessageQuery,\n    type ReplyMessageRequest,\n    type SearchMessagesResponse,\n    type ServiceRequest,\n    type SetDeletedRequest,\n    type SetLabelsRequest,\n    type SetPreferencesRequest,\n    type SetStarredRequest,\n    type SetUnreadRequest,\n    type UpdateLabelRequest,\n} from './services';\nimport {\n    DeletedStatus,\n    ViewportSize,\n    type Dialog,\n    type InitialData,\n    type Message,\n    type MessageData,\n    type MessageForm,\n    type MessageSummary,\n    type SelectAllType,\n    type ServiceError,\n    type State,\n    type Toast,\n    type ViewParams,\n    type Preferences,\n    type Group,\n    type Role,\n} from './state';\nimport { getViewParamsFromUrl, setUrlFromViewParams } from './url';\nimport { replaceStringParams } from './utils';\n\nexport type Store = Awaited<ReturnType<typeof createStore>>;\n\nexport async function createStore(data: InitialData) {\n    let draftTimeoutId = 0;\n\n    let state: State = {\n        /* Info */\n        userid: data.userid,\n        settings: data.settings,\n        preferences: data.preferences,\n        strings: data.strings,\n        mobile: data.mobile,\n\n        /* URL parameters */\n        params: {},\n\n        /* Data */\n        unread: 0,\n        drafts: 0,\n        courses: [],\n        labels: [],\n        totalCount: 0,\n        listMessages: [],\n\n        /* Transient */\n        loading: true,\n        selectedMessages: new Map(),\n        toasts: [],\n        navigationId: 0,\n        viewportSize: 0,\n    };\n\n    const { subscribe, set } = writable<State>(state);\n\n    const patch = (update: Partial<State>) => set({ ...state, ...update });\n\n    subscribe((newState) => {\n        state = newState;\n    });\n\n    const callServicesAndRefresh = async (\n        requests: ServiceRequest[],\n        newParams?: ViewParams,\n        redirect = false,\n    ): Promise<unknown[] | null> => {\n        const messageid = state.message?.id;\n        const draftData = state.draftData;\n        const params = newParams || state.params;\n        const prevParams =\n            !redirect &&\n            (params.tray != state.params.tray ||\n                params.messageid != state.params.messageid ||\n                params.courseid != state.params.courseid ||\n                params.labelid != state.params.labelid ||\n                params.search != state.params.search)\n                ? { ...state.params, dialog: undefined }\n                : state.prevParams;\n        const perpage = state.preferences.perpage;\n\n        patch({ loading: true, error: undefined });\n\n        setUrlFromViewParams(params, redirect);\n\n        // Save draft.\n        if (messageid && draftData) {\n            window.clearTimeout(draftTimeoutId);\n            draftTimeoutId = 0;\n            requests.unshift({\n                methodname: 'update_message',\n                messageid,\n                data: draftData,\n            });\n        }\n\n        // Courses.\n        requests.push({\n            methodname: 'get_courses',\n        });\n\n        // Labels.\n        requests.push({\n            methodname: 'get_labels',\n        });\n\n        if (params.tray) {\n            const query: MessageQuery = {\n                courseid: params.courseid,\n                labelid: params.tray == 'label' ? params.labelid : undefined,\n                draft: params.tray == 'drafts' ? true : params.tray == 'sent' ? false : undefined,\n                roles:\n                    params.tray == 'inbox'\n                        ? ['to', 'cc', 'bcc']\n                        : params.tray == 'sent'\n                          ? ['from']\n                          : undefined,\n                starred: params.tray == 'starred' ? true : undefined,\n                deleted: params.tray == 'trash',\n            };\n\n            // Total count of messages.\n            requests.push({\n                methodname: 'count_messages',\n                query,\n            });\n\n            if (params.messageid) {\n                // Full message.\n                requests.push({\n                    methodname: 'get_message',\n                    messageid: params.messageid,\n                });\n\n                // Next message.\n                requests.push({\n                    methodname: 'search_messages',\n                    query: {\n                        ...query,\n                        ...params.search,\n                        startid: params.messageid,\n                        reverse: false,\n                    },\n                    limit: 1,\n                });\n\n                // Previous message.\n                requests.push({\n                    methodname: 'search_messages',\n                    query: {\n                        ...query,\n                        ...params.search,\n                        startid: params.messageid,\n                        reverse: true,\n                    },\n                    limit: 1,\n                });\n\n                if (!params.search) {\n                    // Offset of the message.\n                    requests.push({\n                        methodname: 'count_messages',\n                        query: {\n                            ...query,\n                            startid: params.messageid,\n                            reverse: true,\n                        },\n                    });\n                }\n            } else {\n                // List of messages.\n                requests.push({\n                    methodname: 'search_messages',\n                    query: { ...query, ...params.search },\n                    offset: params.search ? undefined : params.offset,\n                    limit: params.search ? perpage + 1 : perpage,\n                });\n            }\n        }\n\n        const responses = await callServicesAndSetError(requests);\n        if (responses == null) {\n            return null;\n        }\n\n        let message: Message | undefined;\n        let messageOffset: CountMessagesResponse | undefined;\n        let nextMessageId: number | undefined;\n        let prevMessageId: number | undefined;\n        let listMessages: ReadonlyArray<MessageSummary> = [];\n        let totalCount: CountMessagesResponse = 0;\n\n        if (params.tray) {\n            if (params.messageid) {\n                if (!params.search) {\n                    messageOffset = responses.pop() as CountMessagesResponse;\n                }\n                prevMessageId = (responses.pop() as SearchMessagesResponse)[0]?.id;\n                nextMessageId = (responses.pop() as SearchMessagesResponse)[0]?.id;\n                message = responses.pop() as GetMessageResponse;\n            } else {\n                listMessages = responses.pop() as SearchMessagesResponse;\n                if (params.search) {\n                    if (params.search.reverse) {\n                        prevMessageId = listMessages[perpage]?.id;\n                        nextMessageId = params.search.startid;\n                        listMessages = listMessages.slice(0, perpage).reverse();\n                    } else {\n                        prevMessageId = params.search.startid;\n                        nextMessageId = listMessages[perpage]?.id;\n                        listMessages = listMessages.slice(0, perpage);\n                    }\n                }\n            }\n            totalCount = responses.pop() as CountMessagesResponse;\n        }\n\n        const labels = responses.pop() as GetLabelsResponse;\n        const courses = responses.pop() as GetCoursesResponse;\n        if (messageid && draftData) {\n            responses.shift();\n        }\n\n        // Check if the course or label exists.\n        if (\n            (params.tray == 'course' && !courses.find((c) => c.id == params.courseid)) ||\n            (params.tray == 'label' && !labels.find((l) => l.id == params.labelid))\n        ) {\n            await navigate({ tray: 'inbox' }, true);\n            return responses;\n        }\n\n        // Fetch form if message is a draft.\n        let draftForm: MessageForm | undefined;\n        let draftRoles: ReadonlyArray<Role> | undefined;\n        let draftGroups: ReadonlyArray<Group> | undefined;\n        if (message?.draft) {\n            const requests: ServiceRequest[] = [\n                {\n                    methodname: 'get_roles',\n                    courseid: message.course.id,\n                },\n                {\n                    methodname: 'get_groups',\n                    courseid: message.course.id,\n                },\n            ];\n            if (message?.id != messageid) {\n                requests.push({\n                    methodname: 'get_message_form',\n                    messageid: message.id,\n                });\n            }\n            const responses = await callServicesAndSetError(requests);\n            if (responses == null) {\n                return null;\n            }\n            if (message?.id != messageid) {\n                draftForm = responses.pop() as GetMessageFormeResponse;\n            }\n            draftGroups = responses.pop() as ReadonlyArray<Group>;\n            draftRoles = responses.pop() as ReadonlyArray<Role>;\n        }\n\n        // Update state with fetched data.\n        patch({\n            params,\n            prevParams,\n            unread: courses.reduce((total, course) => total + course.unread, 0),\n            drafts: courses.reduce((total, course) => total + course.drafts, 0),\n            courses,\n            labels,\n            messageOffset,\n            totalCount,\n            listMessages,\n            message,\n            nextMessageId,\n            prevMessageId,\n            draftForm: message?.id != messageid ? draftForm : state.draftForm,\n            draftRoles,\n            draftGroups,\n            draftData: undefined,\n            draftSaved: message?.id == messageid,\n            selectedMessages: new Map(\n                message\n                    ? [[message.id, message]]\n                    : state.message\n                      ? []\n                      : listMessages\n                            .filter((message) => state.selectedMessages.has(message.id))\n                            .map((message) => [message.id, message]),\n            ),\n            loading: false,\n            // Scroll to top and prevent animations if changing page.\n            navigationId:\n                redirect ||\n                params.tray != state.params.tray ||\n                params.courseid != state.params.courseid ||\n                params.labelid != state.params.labelid ||\n                params.messageid != state.params.messageid ||\n                params.offset != state.params.offset\n                    ? state.navigationId + 1\n                    : state.navigationId,\n        });\n\n        // Display draft saved notification if navigated to another page.\n        if (messageid && draftData && messageid != message?.id) {\n            showToast({ text: state.strings.draftsaved });\n        }\n\n        return responses;\n    };\n\n    const callServicesAndSetError = async (\n        requests: ServiceRequest[],\n    ): Promise<unknown[] | null> => {\n        try {\n            return await callServices(requests);\n        } catch (error) {\n            setError(error as ServiceError);\n            return null;\n        }\n    };\n\n    const createLabel = async (name: string, color: string) => {\n        const request: CreateLabelRequest = {\n            methodname: 'create_label',\n            name,\n            color,\n            messageids: Array.from(state.selectedMessages.keys()),\n        };\n\n        await callServicesAndRefresh([request]);\n    };\n\n    const createMessage = async (courseid: number | undefined) => {\n        const oldParams = state.params;\n\n        const request: CreateMessageRequest = {\n            methodname: 'create_message',\n            courseid: courseid || state.courses[0].id,\n        };\n\n        const responses = await callServicesAndSetError([request]);\n\n        if (responses != null) {\n            await navigate({\n                tray: 'drafts',\n                messageid: responses.pop() as number,\n                courseid:\n                    ['shortname', 'fullname'].includes(state.settings.filterbycourse) &&\n                    oldParams.courseid\n                        ? courseid\n                        : undefined,\n            });\n        }\n    };\n\n    const deleteLabel = async (labelid: number) => {\n        const request: DeleteLabelRequest = {\n            methodname: 'delete_label',\n            labelid,\n        };\n        await callServicesAndRefresh([request], { tray: 'inbox' });\n    };\n\n    const emptyTrash = async (courseid?: number) => {\n        const request: EmptyTrashRequest = {\n            methodname: 'empty_trash',\n            courseid,\n        };\n        await callServicesAndRefresh([request]);\n    };\n\n    const forward = async (message: Message) => {\n        const oldParams = state.params;\n\n        const request: ForwardMessageRequest = {\n            methodname: 'forward_message',\n            messageid: message.id,\n        };\n\n        const responses = await callServicesAndRefresh([request]);\n\n        if (responses != null) {\n            await navigate({\n                tray: 'drafts',\n                messageid: responses.pop() as number,\n                courseid:\n                    ['shortname', 'fullname'].includes(state.settings.filterbycourse) &&\n                    oldParams.courseid != null\n                        ? message.course.id\n                        : undefined,\n            });\n        }\n    };\n\n    const hideDialog = () => {\n        const newParams: ViewParams = { ...state.params, dialog: undefined };\n        patch({ params: newParams });\n        setUrlFromViewParams(newParams, true);\n    };\n\n    const hideToast = (toast: Toast) => {\n        patch({ toasts: state.toasts.filter((t) => t != toast) });\n    };\n\n    const navigate = async (params?: ViewParams, redirect = false, init = true) => {\n        const requests: ServiceRequest[] = [];\n\n        if (init && state.settings.incrementalsearch) {\n            requests.push({\n                methodname: 'search_messages',\n                query: { deleted: false },\n                offset: state.settings.incrementalsearchlimit,\n                limit: 1,\n            });\n        }\n\n        if (params?.messageid) {\n            requests.push({\n                methodname: 'view_message',\n                messageid: params.messageid,\n            });\n        }\n\n        const responses = await callServicesAndRefresh(requests, params, redirect);\n\n        if (responses != null && init && state.settings.incrementalsearch) {\n            const messages = responses[0] as MessageSummary[];\n            patch({ incrementalSearchStopId: messages[0]?.id });\n        }\n    };\n\n    const navigateToList = async (redirect = false) => {\n        const params: ViewParams = {\n            ...state.params,\n            messageid: undefined,\n            offset:\n                Math.floor((state.params.offset || 0) / state.preferences.perpage) *\n                    state.preferences.perpage || undefined,\n        };\n\n        await callServicesAndRefresh([], params, redirect);\n    };\n\n    const navigateToMenu = async () => {\n        await callServicesAndRefresh([], {});\n    };\n\n    const reply = async (message: Message, all: boolean) => {\n        const oldParams = state.params;\n\n        const request: ReplyMessageRequest = {\n            methodname: 'reply_message',\n            messageid: message.id,\n            all,\n        };\n\n        const responses = await callServicesAndRefresh([request]);\n\n        if (responses != null) {\n            await navigate({\n                tray: 'drafts',\n                messageid: responses.pop() as number,\n                courseid:\n                    ['shortname', 'fullname'].includes(state.settings.filterbycourse) &&\n                    oldParams.courseid != null\n                        ? message.course.id\n                        : undefined,\n            });\n        }\n    };\n\n    const savePreferences = async (preferences: Partial<Preferences>) => {\n        patch({ preferences: { ...state.preferences, ...preferences } });\n        let newParams = state.params;\n        if (preferences.perpage) {\n            newParams = {\n                ...newParams,\n                offset: state.params.offset\n                    ? Math.trunc(state.params.offset / preferences.perpage) * preferences.perpage\n                    : undefined,\n            };\n        }\n        const request: SetPreferencesRequest = {\n            methodname: 'set_preferences',\n            preferences,\n        };\n        await callServicesAndRefresh([request], newParams, true);\n    };\n\n    const selectAll = (type: SelectAllType) => {\n        patch({\n            selectedMessages: new Map(\n                state.listMessages\n                    .filter(\n                        (message) =>\n                            type == 'all' ||\n                            (type == 'read' && !message.unread) ||\n                            (type == 'unread' && message.unread) ||\n                            (type == 'starred' && message.starred) ||\n                            (type == 'unstarred' && !message.starred),\n                    )\n                    .map((message) => [message.id, message]),\n            ),\n        });\n    };\n\n    const selectCourse = async (id?: number) => {\n        await navigate({\n            ...state.params,\n            courseid: id,\n            offset: 0,\n            messageid: undefined,\n            search: state.params.search\n                ? { ...state.params.search, startid: undefined, reverse: undefined }\n                : undefined,\n        });\n    };\n\n    const sendMessage = async () => {\n        if (!state.message?.draft) {\n            return;\n        }\n\n        const request: ServiceRequest = {\n            methodname: 'send_message',\n            messageid: state.message.id,\n        };\n\n        const newParams: ViewParams = state.prevParams\n            ? {\n                  ...state.prevParams,\n                  messageid: undefined,\n                  offset:\n                      Math.floor((state.prevParams.offset || 0) / state.preferences.perpage) *\n                          state.preferences.perpage || undefined,\n              }\n            : ['shortname', 'fullname'].includes(state.settings.filterbycourse)\n              ? { tray: 'inbox', courseid: state.message.course.id }\n              : { tray: 'course', courseid: state.message.course.id };\n\n        const responses = await callServicesAndRefresh([request], newParams);\n\n        if (responses != null) {\n            showToast({ text: state.strings.messagesent });\n        }\n    };\n\n    const setDeleted = async (\n        ids: ReadonlyArray<number>,\n        deleted: DeletedStatus,\n        allowUndo: boolean,\n    ) => {\n        const requests = ids.map(\n            (id): SetDeletedRequest => ({\n                methodname: 'set_deleted',\n                messageid: id,\n                deleted,\n            }),\n        );\n\n        // Redirect if deleting message in single view.\n        const params: ViewParams = { ...state.params, messageid: undefined };\n        const responses = await callServicesAndRefresh(requests, params, true);\n\n        if (responses != null && deleted != DeletedStatus.DeletedForever) {\n            const string = deleted\n                ? ids.length > 1\n                    ? 'messagesmovedtotrash'\n                    : 'messagemovedtotrash'\n                : ids.length > 1\n                  ? 'messagesrestored'\n                  : 'messagerestored';\n            const text = replaceStringParams(state.strings[string], ids.length);\n            const undo = () => {\n                setDeleted(ids, deleted ? DeletedStatus.NotDeleted : DeletedStatus.Deleted, false);\n            };\n            showToast({ text, undo: allowUndo ? undo : undefined });\n        }\n    };\n\n    const setError = async (error?: ServiceError) => {\n        patch({ loading: state.loading && !error, error });\n    };\n\n    const setLabels = async (added: number[], removed: number[]) => {\n        updateMessages((message) => {\n            if (!state.selectedMessages.has(message.id)) {\n                return message;\n            }\n            return {\n                ...message,\n                labels: state.labels.filter((label) => {\n                    if (added.includes(label.id)) {\n                        return true;\n                    } else if (removed.includes(label.id)) {\n                        return false;\n                    } else {\n                        return message.labels.findIndex((l) => l.id == label.id) >= 0;\n                    }\n                }),\n            };\n        });\n\n        const requests: SetLabelsRequest[] = [];\n        state.selectedMessages.forEach((message) => {\n            requests.push({\n                methodname: 'set_labels',\n                messageid: message.id,\n                labelids: message.labels.map((label) => label.id),\n            });\n        });\n\n        await callServicesAndRefresh(requests);\n    };\n\n    const setStarred = async (messageids: ReadonlyArray<number>, starred: boolean) => {\n        updateMessages((message) =>\n            messageids.includes(message.id) ? { ...message, starred } : message,\n        );\n\n        const requests = messageids.map(\n            (messageid): SetStarredRequest => ({\n                methodname: 'set_starred',\n                messageid,\n                starred,\n            }),\n        );\n\n        await callServicesAndRefresh(requests);\n    };\n\n    const setUnread = async (messageids: ReadonlyArray<number>, unread: boolean) => {\n        updateMessages((message) =>\n            messageids.includes(message.id) ? { ...message, unread } : message,\n        );\n\n        const requests = messageids.map(\n            (messageid): SetUnreadRequest => ({\n                methodname: 'set_unread',\n                messageid,\n                unread,\n            }),\n        );\n\n        const params: ViewParams = { ...state.params, messageid: undefined };\n\n        await callServicesAndRefresh(requests, params);\n    };\n\n    const setViewportSize = (width: number) => {\n        patch({\n            viewportSize: width,\n            navigationId: state.navigationId + 1, // Prevent list animations.\n        });\n\n        // Redirect to inbox on large screens if no tray is specified.\n        if (!state.params.tray && width >= ViewportSize.LG && !state.error) {\n            navigate({ tray: 'inbox', dialog: state.params.dialog }, true);\n        }\n    };\n\n    const showDialog = async (dialog: Dialog) => {\n        const params: ViewParams = { ...state.params, dialog };\n        setUrlFromViewParams(params, state.params.dialog != null);\n        patch({ params });\n    };\n\n    const showToast = async (toast: Toast) => {\n        patch({ toasts: [toast] });\n        if (toast) {\n            window.setTimeout(() => hideToast(toast), 10000);\n        }\n    };\n\n    const toggleSelected = (id: number) => {\n        patch({\n            selectedMessages: new Map(\n                state.listMessages\n                    .filter((message) =>\n                        message.id == id\n                            ? !state.selectedMessages.has(message.id)\n                            : state.selectedMessages.has(message.id),\n                    )\n                    .map((message) => [message.id, message]),\n            ),\n        });\n    };\n\n    const undo = async (toast: Toast) => {\n        if (toast.undo) {\n            hideToast(toast);\n            toast.undo();\n        }\n    };\n\n    const updateDraft = (data: MessageData, noDelay: boolean) => {\n        if (!state.message) {\n            return;\n        }\n\n        const message = state.message;\n        const handler = async () => {\n            window.clearTimeout(draftTimeoutId);\n            draftTimeoutId = 0;\n\n            const data = state.draftData;\n            if (!data) {\n                return;\n            }\n\n            const requests: ServiceRequest[] = [\n                {\n                    methodname: 'update_message',\n                    messageid: message.id,\n                    data,\n                },\n                {\n                    methodname: 'get_message',\n                    messageid: message.id,\n                },\n            ];\n\n            const responses = await callServicesAndSetError(requests);\n\n            if (responses != null && data === state.draftData) {\n                const updatedMessage = responses.pop() as Message;\n                patch({\n                    message: updatedMessage,\n                    draftData: undefined,\n                    draftSaved: true,\n                });\n            }\n        };\n\n        patch({ draftData: data, draftSaved: false });\n        if (noDelay) {\n            handler();\n        } else if (!draftTimeoutId && state.settings.autosaveinterval > 0) {\n            draftTimeoutId = window.setTimeout(handler, state.settings.autosaveinterval * 1000);\n        }\n    };\n\n    const updateLabel = async (labelid: number, name: string, color: string) => {\n        const request: UpdateLabelRequest = {\n            methodname: 'update_label',\n            labelid,\n            name,\n            color,\n        };\n\n        await callServicesAndRefresh([request]);\n    };\n\n    const updateMessages = (callback: <T extends MessageSummary>(message: T) => T) => {\n        patch({\n            listMessages: state.listMessages.map((message) => callback(message)),\n            message: state.message ? callback(state.message) : undefined,\n            selectedMessages: new Map(\n                Array.from(state.selectedMessages.entries()).map(([id, message]) => [\n                    id,\n                    callback(message),\n                ]),\n            ),\n        });\n    };\n\n    await navigate(getViewParamsFromUrl(), true, true);\n\n    return {\n        createLabel,\n        createMessage,\n        deleteLabel,\n        emptyTrash,\n        forward,\n        get: (): State => state,\n        hideDialog,\n        hideToast,\n        navigate,\n        navigateToList,\n        navigateToMenu,\n        reply,\n        savePreferences,\n        selectAll,\n        selectCourse,\n        sendMessage,\n        setDeleted,\n        setError,\n        setLabels,\n        setStarred,\n        setUnread,\n        setViewportSize,\n        showDialog,\n        subscribe,\n        toggleSelected,\n        undo,\n        updateDraft,\n        updateLabel,\n    };\n}\n","/*\n * SPDX-FileCopyrightText: 2023-2024 Proyecto UNIMOODLE <direccion.area.estrategia.digital@uva.es>\n * SPDX-FileCopyrightText: 2024 Albert Gasset <albertgasset@fsfe.org>\n *\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\nimport Navbar from './components/Navbar.svelte';\nimport View from './components/View.svelte';\nimport type { Preferences, Settings, Strings } from './lib/state';\nimport { createStore } from './lib/store';\n\nimport './global.css';\n\nasync function init() {\n    const viewTarget = document.getElementById('local-mail-view');\n    const navbarTarget = document.getElementById('local-mail-navbar');\n\n    // Get initial data from script tag.\n    const data = window.local_satsmail_view_data;\n    if (!data) {\n        return;\n    }\n\n    const store = await createStore({\n        userid: data.userid as number,\n        settings: data.settings as Settings,\n        preferences: data.preferences as Preferences,\n        strings: data.strings as Strings,\n        mobile: Boolean(data.mobile),\n    });\n\n    if (viewTarget) {\n        new View({ target: viewTarget, props: { store } });\n    }\n\n    if (navbarTarget) {\n        // Remove fallback link created in local_satsmail_render_navbar_output.\n        navbarTarget.innerHTML = '';\n\n        // Instantiate Navbar component with current store data.\n        const state = store.get();\n        const navbar = new Navbar({\n            target: navbarTarget,\n            props: {\n                settings: state.settings,\n                strings: state.strings,\n                courses: state.courses,\n                labels: state.labels,\n                params: state.params,\n                loading: state.loading,\n                onClick: store.navigate,\n                onComposeClick: store.createMessage,\n                onCourseChange: store.selectCourse,\n            },\n        });\n\n        // Update properties when store data changes.\n        store.subscribe((state) => {\n            navbar.$set({\n                settings: state.settings,\n                strings: state.strings,\n                courses: state.courses,\n                labels: state.labels,\n                params: state.params,\n                loading: state.loading,\n            });\n        });\n    }\n}\n\ninit();\n"],"names":["globals","create_animation","node","from","fn","params","noop","to","delay","duration","easing","linear","start_time","now","end","tick","css","running","started","name","start","create_rule","stop","delete_rule","loop","p","t","fix_position","style","width","height","a","add_transform","b","transform","DeletedStatus","GroupMode","RecipientType","ViewportSize","ctx","create_if_block_1","insert","target","div","anchor","t_value","formatCourseName","attr","a_href_value","replaceStringParams","nav","append","dirty","set_data","store","$$props","$$invalidate","course","$store","c","cubicOut","f","fade","o","fly","x","y","opacity","target_opacity","od","xValue","xUnit","split_css_unit","yValue","yUnit","u","create_if_block_2","if_block1","button","is_function","create_if_block","div4","div3","div2","div0","h5","span","div1","div5","div4_transition","create_bidirectional_transition","title","cancelText","confirmText","onCancel","onConfirm","confirmClass","confirmDisabled","onMount","onDestroy","handleKey","event","$$value","_a","_b","pre","_c","_d","t0","t0_value","if_block","func","i","bottom","click_handler","confirm","button_aria_checked_value","colors","form","label0","input","label1","t6","t6_value","modaldialog_changes","label","onSubmit","nameEl","submit","selectedColor","color","id","emptyName","normalizeLabelName","repeatedName","l","validName","each_value","ensure_array_like","get_key","if_block0","create_if_block_3","t1_value","t1","expanded","selectedLabels","closeMenu","toggleMenu","toggleLabel","labelid","selected","applyLabels","newLabel","createLabel","messages","message","messageLabel","applyEnabled","labelIconClass","create_if_block_6","create_if_block_12","create_if_block_11","create_if_block_10","create_if_block_9","create_if_block_7","create_if_block_8","button0","button1","t3","t3_value","create_if_block_5","setUnread","unread","setStarred","starred","openEditLabelModal","confirmEditLabel","openDeleteLabelModal","deletelabelconfirm","openEmptyTrashModal","confirmEmptyTrash","click_handler_1","click_handler_2","click_handler_3","func_1","func_2","someRead","someUnread","someStarred","someUnstarred","disabled","button0_title_value","i0","i1","prevParams","nextParams","hasNext","hasPrev","pagingText","formatNumber","flip","ox","oy","dx","dy","d","sx","sy","checkClass","button_disabled_value","button_title_value","starClass","users","user","dispose","action_destroyer","truncate_action","truncate","show_if","settings","text","length","span_style_value","create_if_block_4","coursebadge_changes","span_title_value","toggle_class","div1_intro","create_in_transition","viewUrl","recentParams","div6","current","stop_animation","rect","a_intro","a_outro","create_out_transition","previous_key","not_equal","messageParams","javascript","scriptElement","updateJavascript","fragment","loadModule","button2","i2","t4","t4_value","t7","t7_value","canReplyAll","click_handler_4","click_handler_5","t2_value","formatSize","img","img_alt_value","src_url_equal","img_src_value","t2","downloadAllUrl","strings","fileName","file","content","afterUpdate","icon","hr","userpicture_changes","userfullname_changes","messagecontent_changes","reference","each_value_1","each_blocks","recipients","type","messageattachments_changes","messagereference_changes","div7","h3","hr0","hr1","htmlhead_changes","constants_0","child_ctx","args","truncate_action_1","onDelete","div0_title_value","i_class_value","currentCall","cancellableMethods","callServices","requests","cancelled","ajax","ajaxRequests","request","methodname","responses","error","option","option_value_value","each_value_3","select","select_disabled_value","add_render_callback","button_aria_pressed_value","each_value_4","combobox_changes","DELAY","onChange","comboBox","loading","timeoutId","roleid","groupid","handleToggleClick","search","throttle","limit","handleBlur","handleFocus","select_value","change_handler","change_handler_1","all","recipientType","value","role","group","_e","raw0_value","raw1_value","show_if_1","if_block3","form_1","courseselect_changes","t12","t12_value","formNode","save","disableTinyEventHandlers","enableTinyEventHandlers","tiny","tinyEditor","handleChange","handleExecCommand","handleEditor","loader","editor","handleCourseChange","courseid","handleRecipientChange","newRecipients","recipientsList","recipient","handleRecipientDelete","handleSubmit","formData","data","subject","defaultValues","values","input_id_value","input_checked_value","input_disabled_value","label_for_value","h6","markasread","notifications","processor","handleConfirm","toggleMarkAsRead","toggleMessageProcessor","n","div9","input0","input1","label2","input2","div8","input3","label3","input4","label4","t11","t11_value","t14","t14_value","t16","t16_value","sendername","recipientname","withfilesonly","maxtime","focus","senderNode","today","dateFromTimestamp","updateMaxTime","timestampFromDate","handleInputKey","maxdate","LIMIT","enabled","onClick","moreResults","clickHandler","allParams","incrementalsearch_changes","entering","advancedExpanded","searchOptions","updateFields","startEntering","advancedEnabled","stopEntering","searchEnabled","toggleDropdown","cancel","handleIncrementalSearchClick","submitEnabled","searchFields","div2_intro","div2_outro","toast","button3","button4","button5","t8","t8_value","t10","t10_value","selectAll","iconClass","create_if_block_13","h1","composebutton_changes","preferencesbutton_changes","menu_changes","message_changes","draftform_changes","title_value","create_if_block_14","if_block4","if_block5","if_block7","if_block8","busy_action","busy","viewNode","prevNavigationId","parent","handleBeforeUnload","handleMessage","handleClick","link","resize_handler","getViewParamsFromUrl","func_3","tray","heading","mobileTitle","captureBackButton","subscriber_queue","writable","subscribers","set","new_value","safe_not_equal","run_queue","subscriber","update","subscribe","run","invalidate","createStore","draftTimeoutId","state","patch","newState","callServicesAndRefresh","newParams","redirect","messageid","draftData","perpage","setUrlFromViewParams","query","callServicesAndSetError","messageOffset","nextMessageId","prevMessageId","listMessages","totalCount","labels","courses","navigate","draftForm","draftRoles","draftGroups","total","showToast","setError","createMessage","oldParams","deleteLabel","emptyTrash","forward","hideDialog","hideToast","init","navigateToList","navigateToMenu","reply","savePreferences","preferences","selectCourse","sendMessage","setDeleted","ids","deleted","allowUndo","string","setLabels","added","removed","updateMessages","messageids","setViewportSize","showDialog","dialog","toggleSelected","undo","updateDraft","noDelay","handler","updatedMessage","updateLabel","callback","viewTarget","navbarTarget","View","navbar","Navbar"],"mappings":"ksBACO,MAAMA,GACZ,OAAO,OAAW,IACf,OACA,OAAO,WAAe,IACtB,WAEA,OCGG,SAASC,GAAiBC,EAAMC,EAAMC,EAAIC,EAAQ,CACxD,GAAI,CAACF,EAAM,OAAOG,EAClB,MAAMC,EAAKL,EAAK,sBAAuB,EACvC,GACCC,EAAK,OAASI,EAAG,MACjBJ,EAAK,QAAUI,EAAG,OAClBJ,EAAK,MAAQI,EAAG,KAChBJ,EAAK,SAAWI,EAAG,OAEnB,OAAOD,EACR,KAAM,CACL,MAAAE,EAAQ,EACR,SAAAC,EAAW,IACX,OAAAC,EAASC,GAET,MAAOC,EAAaC,GAAG,EAAKL,EAE5B,IAAAM,EAAMF,EAAaH,EACnB,KAAAM,EAAOT,EACP,IAAAU,CACF,EAAKZ,EAAGF,EAAM,CAAE,KAAAC,EAAM,GAAAI,CAAE,EAAIF,CAAM,EACjC,IAAIY,EAAU,GACVC,EAAU,GACVC,EAEJ,SAASC,GAAQ,CACZJ,IACHG,EAAOE,GAAYnB,EAAM,EAAG,EAAGO,EAAUD,EAAOE,EAAQM,CAAG,GAEvDR,IACJU,EAAU,GAEb,CAEC,SAASI,GAAO,CACXN,GAAKO,GAAYrB,EAAMiB,CAAI,EAC/BF,EAAU,EACZ,CACC,OAAAO,GAAMX,GAAQ,CAQb,GAPI,CAACK,GAAWL,GAAOD,IACtBM,EAAU,IAEPA,GAAWL,GAAOC,IACrBC,EAAK,EAAG,CAAC,EACTO,EAAM,GAEH,CAACL,EACJ,MAAO,GAER,GAAIC,EAAS,CACZ,MAAMO,EAAIZ,EAAMD,EACVc,EAAI,EAAI,EAAIhB,EAAOe,EAAIhB,CAAQ,EACrCM,EAAKW,EAAG,EAAIA,CAAC,CAChB,CACE,MAAO,EACT,CAAE,EACDN,EAAO,EACPL,EAAK,EAAG,CAAC,EACFO,CACR,CAMO,SAASK,GAAazB,EAAM,CAClC,MAAM0B,EAAQ,iBAAiB1B,CAAI,EACnC,GAAI0B,EAAM,WAAa,YAAcA,EAAM,WAAa,QAAS,CAChE,KAAM,CAAE,MAAAC,EAAO,OAAAC,CAAM,EAAKF,EACpBG,EAAI7B,EAAK,sBAAuB,EACtCA,EAAK,MAAM,SAAW,WACtBA,EAAK,MAAM,MAAQ2B,EACnB3B,EAAK,MAAM,OAAS4B,EACpBE,GAAc9B,EAAM6B,CAAC,CACvB,CACA,CAOO,SAASC,GAAc9B,EAAM6B,EAAG,CACtC,MAAME,EAAI/B,EAAK,sBAAuB,EACtC,GAAI6B,EAAE,OAASE,EAAE,MAAQF,EAAE,MAAQE,EAAE,IAAK,CACzC,MAAML,EAAQ,iBAAiB1B,CAAI,EAC7BgC,EAAYN,EAAM,YAAc,OAAS,GAAKA,EAAM,UAC1D1B,EAAK,MAAM,UAAY,GAAGgC,CAAS,cAAcH,EAAE,KAAOE,EAAE,IAAI,OAAOF,EAAE,IAAME,EAAE,GAAG,KACtF,CACA,CCzEY,IAAAE,IAAAA,IACRA,EAAAA,EAAA,WAAa,CAAb,EAAA,aACAA,EAAAA,EAAA,QAAU,CAAV,EAAA,UACAA,EAAAA,EAAA,eAAiB,CAAjB,EAAA,iBAHQA,IAAAA,IAAA,CAAA,CAAA,EAoBAC,IAAAA,IACRA,EAAAA,EAAA,GAAK,CAAL,EAAA,KACAA,EAAAA,EAAA,SAAW,CAAX,EAAA,WACAA,EAAAA,EAAA,QAAU,CAAV,EAAA,UAHQA,IAAAA,IAAA,CAAA,CAAA,EA4FAC,IAAAA,IACRA,EAAA,GAAK,KACLA,EAAA,GAAK,KACLA,EAAA,IAAM,MAHEA,IAAAA,IAAA,CAAA,CAAA,EAiIAC,IAAAA,IACRA,EAAAA,EAAA,GAAK,GAAL,EAAA,KACAA,EAAAA,EAAA,GAAK,GAAL,EAAA,KACAA,EAAAA,EAAA,GAAK,GAAL,EAAA,KACAA,EAAAA,EAAA,GAAK,IAAL,EAAA,KAJQA,IAAAA,IAAA,CAAA,CAAA,8CCxPCC,EAAM,CAAA,EAAAC,8HADfC,EAiBKC,EAAAC,EAAAC,CAAA,gJAHK,GAEN,8DALaC,EAAAC,GAAiBP,EAAM,CAAA,EAAEA,EAAO,CAAA,EAAA,SAAS,UAAU,EAAA,4EAN9CQ,EAAAhB,EAAA,OAAAiB,EAAA,OAAO,EAAE,IAAI,QAAU,uBAAyBT,EAAO,CAAA,EAAA,OAAO,QAAQ,gBACrEU,GACHV,EAAM,CAAA,EAAC,QAAQ,WACfO,GAAiBP,EAAM,CAAA,EAAE,UAAU,CAAA,CAAA,mDAN/CE,EAWKC,EAAAQ,EAAAN,CAAA,EAVDO,EASGD,EAAAnB,CAAA,iBADEqB,EAAA,GAAAP,KAAAA,EAAAC,GAAiBP,EAAM,CAAA,EAAEA,EAAO,CAAA,EAAA,SAAS,UAAU,EAAA,KAAAc,EAAA3B,EAAAmB,CAAA,EAN9CO,EAAA,GAAAJ,KAAAA,EAAA,OAAO,EAAE,IAAI,QAAU,uBAAyBT,EAAO,CAAA,EAAA,OAAO,qCAC7DU,GACHV,EAAM,CAAA,EAAC,QAAQ,WACfO,GAAiBP,EAAM,CAAA,EAAE,UAAU,CAAA,yDATrD,YAAa,UAAU,EAAE,SAASA,EAAM,CAAA,EAAC,SAAS,UAAU,0FAA5D,YAAa,UAAU,EAAE,SAASA,EAAM,CAAA,EAAC,SAAS,UAAU,wMALnD,GAAA,CAAA,MAAAe,CAAA,EAAAC,wFAERC,EAAA,EAAAC,EAASC,EAAO,QAAQ,KAAMC,GAAMA,EAAE,IAAMD,EAAO,OAAO,QAAQ,CAAA,qFCkHlE,SAASE,GAASlC,EAAG,CAC3B,MAAMmC,EAAInC,EAAI,EACd,OAAOmC,EAAIA,EAAIA,EAAI,CACpB,CC/FO,SAASC,GAAK5D,EAAM,CAAE,MAAAM,EAAQ,EAAG,SAAAC,EAAW,IAAK,OAAAC,EAASC,EAAQ,EAAG,GAAI,CAC/E,MAAMoD,EAAI,CAAC,iBAAiB7D,CAAI,EAAE,QAClC,MAAO,CACN,MAAAM,EACA,SAAAC,EACA,OAAAC,EACA,IAAMgB,GAAM,YAAYA,EAAIqC,CAAC,EAC7B,CACF,CAUO,SAASC,GACf9D,EACA,CAAE,MAAAM,EAAQ,EAAG,SAAAC,EAAW,IAAK,OAAAC,EAASkD,GAAU,EAAAK,EAAI,EAAG,EAAAC,EAAI,EAAG,QAAAC,EAAU,CAAC,EAAK,CAAA,EAC7E,CACD,MAAMvC,EAAQ,iBAAiB1B,CAAI,EAC7BkE,EAAiB,CAACxC,EAAM,QACxBM,EAAYN,EAAM,YAAc,OAAS,GAAKA,EAAM,UACpDyC,EAAKD,GAAkB,EAAID,GAC3B,CAACG,EAAQC,CAAK,EAAIC,GAAeP,CAAC,EAClC,CAACQ,EAAQC,CAAK,EAAIF,GAAeN,CAAC,EACxC,MAAO,CACN,MAAA1D,EACA,SAAAC,EACA,OAAAC,EACA,IAAK,CAACgB,EAAGiD,IAAM;AAAA,gBACDzC,CAAS,eAAe,EAAIR,GAAK4C,CAAM,GAAGC,CAAK,MAAM,EAAI7C,GAAK+C,CAAM,GAAGC,CAAK;AAAA,cAC9EN,EAAiBC,EAAKM,CAAC,EACnC,CACF,gDCDyBpC,EAAU,CAAA,GAAAqC,GAAArC,CAAA,EAKVsC,EAAAtC,MAAeA,EAAS,CAAA,GAAAC,GAAAD,CAAA,oFANjCE,EAgBKC,EAAAC,EAAAC,CAAA,+CAfIL,EAAU,CAAA,yDAKVA,MAAeA,EAAS,CAAA,sJAHpBA,EAAU,CAAA,CAAA,gEADfE,EAEQC,EAAAoC,EAAAlC,CAAA,sCAFkDmC,GAAAxC,OAAAA,EAAQ,CAAA,EAAA,MAAA,KAAA,SAAA,+BAC7DA,EAAU,CAAA,CAAA,qFAUVA,EAAW,CAAA,CAAA,4CAJAA,EAAY,CAAA,CAAA,aACdA,EAAe,CAAA,UAH7BE,EAOQC,EAAAoC,EAAAlC,CAAA,sCAHMmC,GAAAxC,OAAAA,EAAS,CAAA,EAAA,MAAA,KAAA,SAAA,+BAElBA,EAAW,CAAA,CAAA,sBAJAA,EAAY,CAAA,qCACdA,EAAe,CAAA,0IAXpCA,EAAU,CAAA,GAAKA,EAAW,CAAA,GAAIA,EAAS,CAAA,IAAAyC,GAAAzC,CAAA,6EAdnCA,EAAK,CAAA,CAAA,yRAKMA,EAAU,CAAA,CAAA,yNAf1BA,EAAK,CAAA,CAAA,+EAJrBE,EAiDKC,EAAAuC,EAAArC,CAAA,EAvCDO,EAsCK8B,EAAAC,CAAA,EArCD/B,EAoCK+B,EAAAC,CAAA,EAnCDhC,EAYKgC,EAAAC,CAAA,EAXDjC,EAEIiC,EAAAC,CAAA,gBACJlC,EAOQiC,EAAAN,CAAA,EADJ3B,EAA8C2B,EAAAQ,CAAA,SAGtDnC,EAEKgC,EAAAI,CAAA,yDAwBjB9C,EAAyDC,EAAA8C,EAAA5C,CAAA,gCArDlCL,EAAS,CAAA,CAAA,yBAsBFwC,GAAAxC,OAAAA,EAAQ,CAAA,EAAA,MAAA,KAAA,SAAA,wBAZxBA,EAAQ,CAAA,CAAA,CAAA,sCAMDA,EAAK,CAAA,CAAA,8BAKMA,EAAU,CAAA,CAAA,wEASzBA,EAAU,CAAA,GAAKA,EAAW,CAAA,GAAIA,EAAS,CAAA,wFAxBxCA,EAAK,CAAA,CAAA,2CAIPA,EAAQ,CAAA,CAAA,+BADOkD,IAAAA,EAAAC,GAAAT,EAAAjB,GAAA,CAAA,MAAO,EAAA,EAAA,gFAAPyB,IAAAA,EAAAC,GAAAT,EAAAjB,GAAA,CAAA,MAAO,EAAA,EAAA,wMAnCrB,CAAA,MAAA2B,CAAA,EAAApC,GACA,WAAAqC,EAAa,EAAA,EAAArC,GACb,YAAAsC,EAAc,EAAA,EAAAtC,EACd,CAAA,SAAAuC,CAAA,EAAAvC,GACA,UAAAwC,EAAsC,MAAA,EAAAxC,GACtC,aAAAyC,EAAe,aAAA,EAAAzC,GACf,gBAAA0C,EAAkB,EAAA,EAAA1C,EAEzBrD,EAEJgG,GAAA,IAAA,CACI,SAAS,KAAK,UAAU,IAAI,YAAY,EACxChG,EAAK,MAAA,IAGTiG,GAAA,IAAA,CACI,SAAS,KAAK,UAAU,OAAO,YAAY,UAGzCC,EAAaC,GAAA,CACXA,EAAM,KAAO,UACbP,EAAA,6CAaG5F,EAAIoG,qjBChCK/D,EAAM,CAAA,EAAC,QAAQ,2IAAfA,EAAM,CAAA,EAAC,QAAQ,yLAGvBgE,EAAAhE,EAAM,CAAA,EAAC,QAAP,YAAAgE,EAAc,WAAS,wCAA3B9D,EAA+BC,EAAAjB,EAAAmB,CAAA,qCAA3B2D,EAAAhE,EAAM,CAAA,EAAC,QAAP,YAAAgE,EAAc,WAAS,KAAAlD,EAAA3B,EAAAmB,CAAA,oDAGrB0D,EAAAhE,EAAM,CAAA,EAAC,QAAP,YAAAgE,EAAc,cAAaC,EAAAjE,EAAM,CAAA,EAAC,QAAP,YAAAiE,EAAc,aAAU,0CAAzD/D,EAA+DC,EAAA+D,EAAA7D,CAAA,wCAAzD2D,EAAAhE,EAAM,CAAA,EAAC,QAAP,YAAAgE,EAAc,cAAaC,EAAAjE,EAAM,CAAA,EAAC,QAAP,YAAAiE,EAAc,aAAU,KAAAnD,EAAA3B,EAAAmB,CAAA,uDALzD0D,EAAAhE,EAAM,CAAA,EAAC,QAAP,YAAAgE,EAAc,SAAO,eACpBC,EAAAjE,EAAM,CAAA,EAAC,QAAP,YAAAiE,EAAc,YAAS5B,GAAArC,CAAA,OAGvBmE,EAAAnE,EAAM,CAAA,EAAC,QAAP,YAAAmE,EAAc,cAAaC,EAAApE,EAAM,CAAA,EAAC,QAAP,YAAAoE,EAAc,cAAUnE,GAAAD,CAAA,0EAJxDE,EAA6BC,EAAAjB,EAAAmB,CAAA,8FAAzB2D,EAAAhE,EAAM,CAAA,EAAC,QAAP,YAAAgE,EAAc,SAAO,KAAAlD,EAAAuD,EAAAC,CAAA,GACpBL,EAAAjE,EAAM,CAAA,EAAC,QAAP,MAAAiE,EAAc,6EAGdE,EAAAnE,EAAM,CAAA,EAAC,QAAP,MAAAmE,EAAc,YAAaC,EAAApE,EAAM,CAAA,EAAC,QAAP,MAAAoE,EAAc,yJANjDG,EAAAvE,KAAO,OAAKyC,GAAAzC,CAAA,yEAAZA,KAAO,2QAHG,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAI+C,MAAAwD,EAAA,IAAAzD,EAAM,SAAQ,wTCO7Df,EAAM,CAAA,EAAC,iBAAiB,mBAC5BA,EAAM,CAAA,EAAC,QAAQ,WAAW,uBAJXA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,kBACNA,EAAM,CAAA,EAAC,iBAAiB,IAAI,UALjDE,EAYQC,EAAAoC,EAAAlC,CAAA,EADJO,EAA8B2B,EAAAkC,CAAA,uDALnBzE,EAAM,CAAA,EAAC,iBAAiB,kCAC5BA,EAAM,CAAA,EAAC,QAAQ,uDAJAA,EAAM,CAAA,CAAA,uBACXA,EAAM,CAAA,CAAA,uBACNA,EAAM,CAAA,EAAC,iBAAiB,IAAI,gIATlC,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,OAAA0D,EAAS,EAAA,EAAA1D,EAYhB,MAAA2D,EAAA,IAAA5D,EAAM,WAAW,MAAM,KAAKI,EAAO,iBAAiB,KAAI,CAAA,EAAKvB,GAAc,QAAS,EAAI,qOCejFI,EAAM,CAAA,EAAC,QAAQ,yBACVA,EAAM,CAAA,EAAC,QAAQ,mBACdA,EAAM,CAAA,EAAC,QAAQ,gEAGjBA,EAAO,CAAA,yHALXA,EAAM,CAAA,EAAC,QAAQ,kCACVA,EAAM,CAAA,EAAC,QAAQ,4BACdA,EAAM,CAAA,EAAC,QAAQ,uLAK3BA,EAAM,CAAA,EAAC,QACJA,KAAO,iBAAiB,MAAQ,EAC1B,8BACA,8BAA6B,EAAA,4DAHtCA,EAAM,CAAA,EAAC,QACJA,KAAO,iBAAiB,MAAQ,EAC1B,8BACA,8BAA6B,EAAA,KAAAc,EAAA,EAAAR,CAAA,uDAZ1CiE,EAAAvE,EAAO,CAAA,EAAA,OAAO,QAAU,iBAAeyC,GAAAzC,CAAA,kLAP7BA,EAAM,CAAA,EAAC,iBAAiB,mBAC5BA,EAAM,CAAA,EAAC,QAAQ,aAAa,uBAHbA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,UAJ3BE,EAUQC,EAAAoC,EAAAlC,CAAA,EADJO,EAA8B2B,EAAAkC,CAAA,+FAJnBzE,EAAM,CAAA,EAAC,iBAAiB,wCAC5BA,EAAM,CAAA,EAAC,QAAQ,gEAHAA,EAAM,CAAA,CAAA,6BACXA,EAAM,CAAA,CAAA,EAQtBA,EAAO,CAAA,EAAA,OAAO,QAAU,0SAzBd,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,OAAA0D,EAAS,EAAA,EAAA1D,EAEd,MAAA4D,EAAA,IAAA,CACF7D,EAAM,WAAA,EACNA,EAAM,WACF,MAAM,KAAKI,EAAO,iBAAiB,MAAA,EACnCvB,GAAc,eACd,EAAA,SAYQmB,EAAM,WAAW,eAAe,EAW5ByD,EAAA,IAAAzD,EAAM,WAAU,iRCiBlB,GAEN,4DAHKf,EAAM,CAAA,EAAC,QAAQ,uBAAsB,6DAArCA,EAAM,CAAA,EAAC,QAAQ,uBAAsB,KAAAc,EAAA,EAAAR,CAAA,kHA4B9BJ,EAAgCC,EAAA4C,EAAA1C,CAAA,wIAFhCH,EAAkEC,EAAAsE,EAAApE,CAAA,mEADjE,OAAAL,OAASA,EAAa,CAAA,EAAAyC,mIAVbjC,EAAA+B,EAAA,eAAAsC,EAAA7E,OAASA,EAAa,CAAA,CAAA,oCAE7BA,EAAM,CAAA,EAAC,QAAO,QAASA,EAAK,EAAA,CAAA,EAAA,CAAA,uEAEKQ,EAAA+B,EAAA,QAAA,iCAAAvC,uFACQA,EAAK,EAAA,CAAA,uCAAA,uBAPzDE,EAiBQC,EAAAoC,EAAAlC,CAAA,kHAfUQ,EAAA,KAAAgE,KAAAA,EAAA7E,OAASA,EAAa,CAAA,uCAE7BA,EAAM,CAAA,EAAC,QAAO,QAASA,EAAK,EAAA,CAAA,EAAA,6EA9BLA,EAAM,CAAA,EAAC,QAAQ,KAAI,2BAsBxDA,EAAM,CAAA,EAAC,QAAQ,MAAK,wDAVhBA,EAAY,CAAA,EAAAC,8BAaV6E,EAAM,cAAW9E,EAAK,EAAA,mBAA3B,OAAIyE,GAAA,EAAA,6YAlBDzE,EAAE,CAAA,EAAA,OAAA,iBAFSA,EAAS,CAAA,CAAA,oBACNA,EAAS,CAAA,CAAA,2GAenBA,EAAE,CAAA,EAAA,QAAA,gGAGkDA,EAAE,CAAA,EAAA,QAAA,qCA1B3EE,EAiDMC,EAAA4E,EAAA1E,EAAA,EAhDFO,EAoBKmE,EAAAnC,CAAA,EAnBDhC,EAAqEgC,EAAAoC,CAAA,gBACrEpE,EASCgC,EAAAqC,CAAA,gBADejF,EAAI,CAAA,CAAA,SAEpBY,EAMKgC,EAAAC,CAAA,qBACLjC,EAAuCgC,EAAAI,CAAA,SAE3CpC,EA0BKmE,EAAArC,CAAA,EAzBD9B,EAEO8B,EAAAwC,CAAA,gBACPtE,EAqBK8B,EAAAC,CAAA,6FA/CmB3C,EAAM,EAAA,CAAA,CAAA,gCAEYA,EAAM,CAAA,EAAC,QAAQ,KAAI,KAAAc,EAAAuD,EAAAC,CAAA,iBAOpDtE,EAAE,CAAA,EAAA,sCAEKA,EAAI,CAAA,QAAJA,EAAI,CAAA,CAAA,yBAJAA,EAAS,CAAA,CAAA,4BACNA,EAAS,CAAA,CAAA,iFAgB3BA,EAAM,CAAA,EAAC,QAAQ,MAAK,KAAAc,EAAAqE,EAAAC,CAAA,iBADZpF,EAAE,CAAA,EAAA,uCAIJ8E,EAAM,yDADgD9E,EAAE,CAAA,EAAA,4JAjCpE,MAAAA,KAAO,QAAQA,EAAQ,CAAA,EAAA,YAAc,UAAU,aAC1CA,EAAM,CAAA,EAAC,QAAQ,qBAEd,YAAAA,KAAO,QAAQA,EAAQ,CAAA,EAAA,OAAS,QAAQ,mBACnCA,EAAS,CAAA,YAChBA,EAAM,EAAA,6GALVa,EAAA,KAAAwE,EAAA,MAAArF,KAAO,QAAQA,EAAQ,CAAA,EAAA,YAAc,UAAU,uBAC1CA,EAAM,CAAA,EAAC,QAAQ,+BAEda,EAAA,KAAAwE,EAAA,YAAArF,KAAO,QAAQA,EAAQ,CAAA,EAAA,OAAS,QAAQ,8BACnCA,EAAS,CAAA,4OA5BhB,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,MAAAsE,EAA2B,MAAA,EAAAtE,EAC3B,CAAA,SAAAuC,CAAA,EAAAvC,EACA,CAAA,SAAAuE,CAAA,EAAAvE,EAEPwE,EAWE,MAAAC,EAAA,SAAA,CACFF,EAAS3G,EAAM8G,CAAa,GAGhC/B,GAAA,IAAc6B,EAAO,OAAA,4CAqBEA,EAAMzB,wBACLnF,EAAI,KAAA,gCA0BJqC,EAAA,EAAAyE,EAAgBC,CAAK,sLA7D1C1E,EAAA,EAAA2E,EAAA,2BAA+BN,GAAA,YAAAA,EAAO,KAAM,KAAK,EAAA,gBACjDrE,EAAA,EAAArC,GAAO0G,GAAA,YAAAA,EAAO,OAAQ,EAAA,gBACzBrE,EAAA,EAAGyE,GAAgBJ,GAAA,YAAAA,EAAO,QAASR,GAAO,CAAC,CAAA,gBACxC7D,EAAA,GAAA4E,EAAYC,GAAmBlH,CAAI,GAAK,EAAA,iBAC3CqC,EAAA,EAAG8E,EAAe5E,EAAO,OAAO,KAC3B6E,GAAMA,EAAE,KAAMV,GAAA,YAAAA,EAAO,KAAMU,EAAE,MAAQF,GAAmBlH,CAAI,CAAA,CAAA,mBAEjEqC,EAAA,EAAGgF,GAAaJ,GAAc,CAAAE,CAAA,+PC8EfG,EAAAC,GAAAnG,KAAO,MAAM,EAAW,MAAAoG,EAAApG,GAAAA,MAAM,mBAAnC,OAAIyE,GAAA,EAAA,8CAUD,IAAA4B,EAAArG,EAAO,CAAA,EAAA,OAAO,OAAS,GAACsG,GAAA,yBAGxBtG,EAAY,CAAA,EAAAqC,wJAdrBnC,EA+BKC,EAAAC,EAAAC,CAAA,4GA9BM6F,EAAAC,GAAAnG,KAAO,MAAM,oCAUfA,EAAO,CAAA,EAAA,OAAO,OAAS,iNAHnBuG,EAAAvG,MAAM,KAAI,oIADSA,EAAc,CAAA,EAACA,EAAK,EAAA,EAAC,EAAE,EAAA,iBAAA,6GAL/CE,EAOQC,EAAAoC,EAAAlC,CAAA,EAFJO,EAAgD2B,EAAAkC,CAAA,gFAA5BzE,EAAc,CAAA,EAACA,EAAK,EAAA,EAAC,EAAE,EAAA,mCAC1Ca,EAAA,GAAA0F,KAAAA,EAAAvG,MAAM,KAAI,KAAAc,EAAA0F,EAAAD,CAAA,8GAIfrG,EAA+BC,EAAAC,EAAAC,CAAA,yCAgB1BL,EAAM,CAAA,EAAC,QAAQ,SAAQ,uIAL5BE,EAMQC,EAAAoC,EAAAlC,CAAA,2BAHML,EAAQ,EAAA,CAAA,4BAEjBA,EAAM,CAAA,EAAC,QAAQ,SAAQ,KAAAc,EAAA3B,EAAAmB,CAAA,kDARvBN,EAAM,CAAA,EAAC,QAAQ,MAAK,uIALzBE,EAMQC,EAAAoC,EAAAlC,CAAA,2BAHML,EAAW,CAAA,CAAA,4BAEpBA,EAAM,CAAA,EAAC,QAAQ,MAAK,KAAAc,EAAA3B,EAAAmB,CAAA,6GAciCN,EAAW,EAAA,mPAnC5EA,EAAQ,CAAA,GAAAC,GAAAD,CAAA,EAkCRsC,EAAAtC,EAAO,CAAA,EAAA,OAAO,QAAU,eAAayC,GAAAzC,CAAA,gOAzC3BA,EAAM,CAAA,EAAC,iBAAiB,yBACpBA,EAAQ,CAAA,CAAA,gBAChBA,EAAM,CAAA,EAAC,QAAQ,MAAM,uBALNA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,kBACNA,EAAM,CAAA,EAAC,iBAAiB,IAAI,4DANhBA,EAAM,CAAA,CAAA,UAA3CE,EAmDKC,EAAAC,EAAAC,CAAA,EAlDDO,EAYQR,EAAAmC,CAAA,EADJ3B,EAA4B2B,EAAAkC,CAAA,sEAFlBzE,EAAU,CAAA,CAAA,oBAVwCA,EAAS,CAAA,CAAA,CAAA,qCAO1DA,EAAM,CAAA,EAAC,iBAAiB,sDACpBA,EAAQ,CAAA,CAAA,mBAChBA,EAAM,CAAA,EAAC,QAAQ,yDALAA,EAAM,CAAA,CAAA,6BACXA,EAAM,CAAA,CAAA,6BACNA,EAAM,CAAA,EAAC,iBAAiB,IAAI,EAQ5CA,EAAQ,CAAA,yDAkCRA,EAAO,CAAA,EAAA,OAAO,QAAU,uIAhDIA,EAAM,CAAA,CAAA,qLA7E5B,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,OAAA0D,EAAS,EAAA,EAAA1D,EAEhByF,EAAW,GAEXC,EAAsE,IAAA,IAoCpE,MAAAC,EAAA,IAAA,KACFF,EAAW,EAAA,GAGTG,EAAA,IAAA,KACFH,EAAY,CAAAA,CAAA,GAGVI,EAAeC,GAAA,CACjB7F,EAAA,GAAAyF,EAAA,IAAqB,IACjB,MAAM,KAAKA,EAAe,QAAW,CAAA,EAAA,IAAA,CAAA,CAAMd,EAAImB,CAAQ,IAAA,CACnDnB,EACAA,GAAMkB,EAAWC,GAAY,OAAS,QAAU,OAAUA,OAKhEC,EAAA,IAAA,KACFP,EAAW,EAAA,EACX1F,EAAM,UACF,MAAM,KAAK2F,EAAe,QAAQ,OAAQd,GAAOc,EAAe,IAAId,CAAE,GAAK,MAAM,EACjF,MAAM,KAAKc,EAAe,KAAQ,CAAA,EAAA,OAAQd,GAAOc,EAAe,IAAId,CAAE,GAAK,OAAO,CAAA,GAIpFqB,EAAA,IAAA,CACFN,EAAA,EACA5F,EAAM,WAAW,aAAa,GAG5BmG,EAAA,MAAqBtI,EAAc+G,IAAA,CACrC5E,EAAM,WAAA,EACNA,EAAM,YAAYnC,EAAM+G,CAAK,QAwBDkB,EAAYvB,EAAM,EAAE,EA6BZd,EAAA,IAAAzD,EAAM,WAAU,kHAvHxDE,EAAA,GAAGyF,EAAqB,IAAA,IACpBvF,EAAO,OAAO,IAAKmE,GAAA,CACT,MAAA6B,EAAW,MAAM,KAAKhG,EAAO,iBAAiB,UAAU,OAAQiG,GAClEA,EAAQ,OAAO,KAAMC,GAAiBA,EAAa,IAAM/B,EAAM,EAAE,CAAA,SAGjEA,EAAM,GACN6B,EAAS,QAAU,EACb,QACAA,EAAS,OAAShG,EAAO,iBAAiB,KACxC,QACA,6BAKpBF,EAAA,EAAGqG,EAAe,MAAM,KAAKZ,EAAe,WAAW,KAAO,CAAA,CAAAI,EAASC,CAAQ,IAC3E,MAAM,KAAK5F,EAAO,iBAAiB,QAAA,EAAU,KACxCiG,GACIL,GAAY,QAAUK,EAAQ,OAAO,MAAO9B,GAAUA,EAAM,IAAMwB,CAAO,GACzEC,GAAY,SAAWK,EAAQ,OAAO,KAAM9B,GAAUA,EAAM,IAAMwB,CAAO,CAAA,CAAA,CAAA,mBAItF7F,EAAA,EAAGsG,EAAkBT,GACbJ,EAAe,IAAII,CAAO,GAAK,QACxB,cACAJ,EAAe,IAAII,CAAO,GAAK,QAC/B,oBAEA,8KC0DF,OAAA9G,EAAO,CAAA,EAAA,OAAO,MAAQ,QAAOwH,8FADtCtH,EAsCKC,EAAAC,EAAAC,CAAA,2IAhCQL,EAAU,CAAA,GAAAyH,GAAAzH,CAAA,IAKVA,EAAQ,CAAA,GAAA0H,GAAA1H,CAAA,IAKRA,EAAa,CAAA,GAAA2H,GAAA3H,CAAA,IAKbA,EAAW,CAAA,GAAA4H,GAAA5H,CAAA,IAKXA,EAAK,CAAA,GAAA6H,GAAA7H,CAAA,kNApBLA,EAAU,CAAA,oEAKVA,EAAQ,CAAA,oEAKRA,EAAa,CAAA,oEAKbA,EAAW,CAAA,oEAKXA,EAAK,CAAA,mLAvBLA,EAAM,CAAA,EAAC,QAAQ,WAAU,mGAD9BE,EAEQC,EAAAoC,EAAAlC,CAAA,2BAF8CL,EAAmB,EAAA,CAAA,8BACpEA,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAA3B,EAAAmB,CAAA,kDAKrBN,EAAM,CAAA,EAAC,QAAQ,WAAU,mGAD9BE,EAEQC,EAAAoC,EAAAlC,CAAA,8DADHL,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAA3B,EAAAmB,CAAA,kDAKzBN,EAAM,CAAA,EAAC,QAAQ,aAAY,mGADhCE,EAEQC,EAAAoC,EAAAlC,CAAA,8DADHL,EAAM,CAAA,EAAC,QAAQ,aAAY,KAAAc,EAAA3B,EAAAmB,CAAA,kDAK3BN,EAAM,CAAA,EAAC,QAAQ,cAAa,mGADjCE,EAEQC,EAAAoC,EAAAlC,CAAA,8DADHL,EAAM,CAAA,EAAC,QAAQ,cAAa,KAAAc,EAAA3B,EAAAmB,CAAA,kDAK5BN,EAAM,CAAA,EAAC,QAAQ,gBAAe,mGADnCE,EAEQC,EAAAoC,EAAAlC,CAAA,8DADHL,EAAM,CAAA,EAAC,QAAQ,gBAAe,KAAAc,EAAA3B,EAAAmB,CAAA,oDAQ9BN,EAAM,CAAA,EAAC,QAAQ,UAAS,WAGxBA,EAAM,CAAA,EAAC,QAAQ,YAAW,SAP1BuE,GAAAvE,EAAc,CAAA,GAAAA,EAAY,CAAA,GAAAA,MAAiBA,EAAW,CAAA,IAAA8H,GAAA,6MAG3D5H,EAEQC,EAAA4H,EAAA1H,CAAA,kBACRH,EAEQC,EAAA6H,EAAA3H,CAAA,4BAL8CL,EAAkB,EAAA,CAAA,cAGlBA,EAAoB,EAAA,CAAA,iBANrEA,EAAc,CAAA,GAAAA,EAAY,CAAA,GAAAA,MAAiBA,EAAW,CAAA,yEAItDA,EAAM,CAAA,EAAC,QAAQ,UAAS,KAAAc,EAAA0F,EAAAD,CAAA,gBAGxBvG,EAAM,CAAA,EAAC,QAAQ,YAAW,KAAAc,EAAAmH,EAAAC,CAAA,2IAN3BhI,EAA+BC,EAAAC,EAAAC,CAAA,kFA4B9C,OAAAL,EAAO,CAAA,EAAA,OAAO,QAAU,YAAW,EAO9BA,EAAO,CAAA,EAAA,OAAO,QAAU,cAAa,sWApB1CuE,EAAAvE,EAAO,CAAA,EAAA,OAAO,QAAU,cAAYC,GAAAD,CAAA,uEAApCA,EAAO,CAAA,EAAA,OAAO,QAAU,4OAsBdA,EAAM,CAAA,EAAC,QAAQ,uBACVA,EAAM,CAAA,EAAC,QAAQ,mBACdA,EAAM,CAAA,EAAC,QAAQ,+DAGjBA,EAAkB,EAAA,2HALtBA,EAAM,CAAA,EAAC,QAAQ,kCACVA,EAAM,CAAA,EAAC,QAAQ,8BACdA,EAAM,CAAA,EAAC,QAAQ,qQANlBA,EAAgB,EAAA,mPAWzBU,GAAoBV,EAAO,CAAA,EAAA,QAAQ,mBAAoBA,EAAK,CAAA,EAAC,IAAI,EAAA,8DAAjEU,GAAoBV,EAAO,CAAA,EAAA,QAAQ,mBAAoBA,EAAK,CAAA,EAAC,IAAI,EAAA,KAAAc,EAAA,EAAAR,CAAA,uEA3B3DN,EAAM,CAAA,EAAC,QAAQ,sBACVA,EAAM,CAAA,EAAC,QAAQ,mBACdA,EAAM,CAAA,EAAC,QAAQ,8DAGjBA,EAAiB,EAAA,2HALrBA,EAAM,CAAA,EAAC,QAAQ,iCACVA,EAAM,CAAA,EAAC,QAAQ,8BACdA,EAAM,CAAA,EAAC,QAAQ,4LAK3BA,EAAM,CAAA,EAAC,QAAQ,kBAAiB,8DAAhCA,EAAM,CAAA,EAAC,QAAQ,kBAAiB,KAAAc,EAAA,EAAAR,CAAA,+DArDpCN,EAAQ,CAAA,GAAAmI,GAAAnI,CAAA,uCA2CZ,OAAAA,EAAO,CAAA,EAAA,OAAO,MAAQ,QAAO,EAaxBA,EAAK,CAAA,EAAA,kSA9DQA,EAAQ,CAAA,CAAA,gBAChBA,EAAM,CAAA,EAAC,QAAQ,IAAI,uBALJA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,6DALMA,EAAM,CAAA,CAAA,UAA3CE,EAuDKC,EAAAC,EAAAC,CAAA,EAtDDO,EAYQR,EAAAmC,CAAA,EADJ3B,EAAmC2B,EAAAkC,CAAA,kFAFzBzE,EAAU,EAAA,CAAA,oBAV2BA,EAAS,EAAA,CAAA,CAAA,mFAQzCA,EAAQ,CAAA,CAAA,qBAChBA,EAAM,CAAA,EAAC,QAAQ,uDALAA,EAAM,CAAA,CAAA,6BACXA,EAAM,CAAA,CAAA,oCAStBA,EAAQ,CAAA,oFAdoBA,EAAM,CAAA,CAAA,kXA7E5B,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,OAAA0D,EAAS,EAAA,EAAA1D,EAEhByF,EAAW,GAiBT,MAAAE,EAAA,IAAA,KACFF,EAAW,EAAA,GAGTG,EAAA,IAAA,KACFH,EAAY,CAAAA,CAAA,GAGV2B,EAAaC,GAAA,CACf1B,EAAA,EACA5F,EAAM,UACFoG,EAAS,OAAQC,IAAa,CAAAA,GAAQ,KAAK,EAAE,IAAKA,IAAYA,GAAQ,EAAE,EACxEiB,CAAA,GAIFC,EAAcC,GAAA,CAChB5B,EAAA,EACA5F,EAAM,WACFoG,EAAS,IAAKC,IAAYA,GAAQ,EAAE,EACpCmB,CAAA,GAIFC,EAAA,IAAA,CACF7B,EAAA,EACA5F,EAAM,WAAW,WAAW,GAG1B0H,EAAA,CAAoB7J,EAAc+G,KAAA,CACpC5E,EAAM,WAAA,EACFuE,GACAvE,EAAM,YAAYuE,EAAM,GAAI1G,EAAM+G,EAAK,GAIzC+C,EAAA,IAAA,CACF/B,EAAA,EACA5F,EAAM,WAAW,aAAa,GAG5B4H,EAAA,IAAA,CACF5H,EAAM,WAAA,EACNA,EAAM,YAAYI,EAAO,OAAO,SAAW,CAAC,GAG1CyH,EAAA,IAAA,CACFjC,EAAA,EACA5F,EAAM,WAAW,YAAY,GAG3B8H,EAAA,IAAA,CACF9H,EAAM,WAAA,EACNA,EAAM,WAAWI,EAAO,OAAO,QAAQ,GA0BiCwD,EAAA,IAAAyD,EAAU,EAAK,EAKfU,EAAA,IAAAV,EAAU,EAAI,EAKdW,EAAA,IAAAT,EAAW,EAAI,EAKfU,GAAA,IAAAV,EAAW,EAAK,EA2BpE9D,GAAA,IAAAzD,EAAM,WAAU,EAWhBkI,EAAA,IAAAlI,EAAM,WAAU,EAShBmI,GAAA,IAAAnI,EAAM,WAAU,oHA5JxCE,EAAA,EAAGqE,EACCnE,EAAO,OAAO,MAAQ,SAAWA,EAAO,SAAW,KAC7CA,EAAO,OAAO,KAAMmE,GAAUA,EAAM,IAAMnE,EAAO,OAAO,OAAO,EAC/D,IAAA,kBAEVF,EAAA,GAAGkG,EAAW,MAAM,KAAKhG,EAAO,iBAAiB,OAAA,CAAA,CAAA,sBACjDF,EAAA,EAAGkI,EAAWhC,EAAS,KAAMC,IAAaA,EAAQ,OAAA,CAAUA,EAAQ,MAAM,CAAA,sBAC1EnG,EAAA,EAAGmI,EAAajC,EAAS,KAAMC,IAAaA,EAAQ,OAASA,EAAQ,MAAM,CAAA,sBAC3EnG,EAAA,EAAGoI,EAAclC,EAAS,KAAMC,GAAYA,EAAQ,OAAO,CAAA,sBAC3DnG,EAAA,EAAGqI,EAAgBnC,EAAS,KAAMC,GAAA,CAAaA,EAAQ,OAAO,CAAA,kBAC3DnG,EAAA,EAAAsI,EACCpI,EAAO,OAAO,MAAQ,SACfA,EAAO,YACPmE,GAAU,CAAA6D,GAAA,CAAaC,IAAeC,GAAgB,CAAAC,CAAA,oMCwDxDtJ,EAAU,CAAA,CAAA,uDADfE,EAEKC,EAAAC,EAAAC,CAAA,0BADAL,EAAU,CAAA,CAAA,mEAkBNA,EAAU,CAAA,CAAA,kGADfE,EAEKC,EAAAC,EAAAC,CAAA,0BADAL,EAAU,CAAA,CAAA,0EApBjBA,EAAM,CAAA,GAAAC,GAAAD,CAAA,IAkBHA,EAAM,CAAA,GAAAyC,GAAAzC,CAAA,gLAFyCA,EAAM,CAAA,EAAC,QAAQ,YAAY,sEAJhEA,EAAU,CAAA,EACdQ,EAAAuH,EAAA,QAAAyB,EAAAxJ,EAAO,CAAA,EAAA,QAAQA,KAAO,QAAU,kBAAoB,cAAc,CAAA,uBAHnDA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,8DAqB0BA,EAAM,CAAA,EAAC,QAAQ,QAAQ,wDAJ7DA,EAAU,CAAA,gBACdA,EAAM,CAAA,EAAC,QAAQA,KAAO,QAAU,cAAgB,UAAU,CAAA,uBAH3CA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,6FArBiBA,EAAM,CAAA,CAAA,+EAPIA,EAAM,CAAA,CAAA,UAApEE,EAoCKC,EAAA6C,EAAA3C,CAAA,wBA7BDO,EA4BKoC,EAAAH,CAAA,EA3BDjC,EAUQiC,EAAAkF,CAAA,EADJnH,EAA8EmH,EAAA0B,CAAA,+BAOlF7I,EAUQiC,EAAAmF,CAAA,EADJpH,EAA2EoH,EAAA0B,CAAA,sEAhC7E1J,EAAM,CAAA,qEAgB4CA,EAAM,CAAA,EAAC,QAAQ,iDAJpDA,EAAU,CAAA,mBACda,EAAA,GAAA2I,KAAAA,EAAAxJ,EAAO,CAAA,EAAA,QAAQA,KAAO,QAAU,kBAAoB,cAAc,6CAHnDA,EAAM,CAAA,CAAA,uBACXA,EAAM,CAAA,CAAA,EAOtBA,EAAM,CAAA,qEAc0CA,EAAM,CAAA,EAAC,QAAQ,6CAJrDA,EAAU,CAAA,+BACdA,EAAM,CAAA,EAAC,QAAQA,KAAO,QAAU,cAAgB,UAAU,6CAH3CA,EAAM,CAAA,CAAA,uBACXA,EAAM,CAAA,CAAA,wBArBiBA,EAAM,CAAA,CAAA,sBAPIA,EAAM,CAAA,CAAA,8JAzErD,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,OAAA0D,EAAS,EAAA,EAAA1D,cAuFmBD,EAAM,SAAS4I,CAAU,QAgBzB5I,EAAM,SAAS6I,CAAU,wHArGhE3I,EAAA,EAAG4I,EACC1I,EAAO,eACL,CAAAA,EAAO,OAAO,SACXA,EAAO,OAAO,QAAU,GAAKA,EAAO,YAAY,QAAUA,EAAO,UAAA,gBAEvEF,EAAA,EAAA6I,EAAU3I,EAAO,eAAmB,CAAAA,EAAO,OAAO,SAAWA,EAAO,OAAO,QAAU,EAAA,kBAExFF,EAAA,EAAG2I,EAAaC,EACV1I,EAAO,YAEIA,EAAO,OACV,UAAWA,EAAO,cAClB,QAASA,EAAO,OAAO,QAAU,GAAK,OAGnCA,EAAO,OACV,UAAW,OACX,QAASA,EAAO,OAAO,QAAU,GAAKA,EAAO,YAAY,QACzD,OAAQA,EAAO,OAAO,QAET,GAAAA,EAAO,OAAO,OACjB,SAAS6C,EAAA7C,EAAO,aAAaA,EAAO,aAAa,OAAS,CAAC,IAAlD,YAAA6C,EAAqD,GAC9D,QAAS,IAEb,QAEd,MAAA,iBAEN/C,EAAA,EAAG0I,EAAaG,EACV3I,EAAO,YAEIA,EAAO,OACV,UAAWA,EAAO,cAClB,OAAQ,KAAK,IAAI,GAAIA,EAAO,OAAO,QAAU,GAAK,CAAC,OAGhDA,EAAO,OACV,UAAW,OACX,OAAQ,KAAK,IAAI,GAAIA,EAAO,OAAO,QAAU,GAAKA,EAAO,YAAY,OAAO,EAC5E,OAAQA,EAAO,OAAO,QAET,GAAAA,EAAO,OAAO,OACjB,QAASA,EAAO,aAAa,CAAC,EAAE,GAChC,QAAS,IAEb,QAEd,MAAA,gBAENF,EAAA,EAAG8I,EAAa5I,EAAO,QACjBA,EAAO,OAAO,QAAUA,EAAO,aAAepB,GAAa,GACvDiK,IAAc7I,EAAO,OAAO,QAAU,GAAK,CAAC,EAC5CT,GAAoBS,EAAO,QAAQ,aAAA,CAC/B,MAAO6I,IAAc7I,EAAO,eAAiB,GAAK,CAAC,EACnD,MAAO6I,GAAa7I,EAAO,UAAU,IAE7CA,EAAO,aAAa,QAAU,EAC5B,GACAA,EAAO,OAAO,QAAUA,EAAO,aAAepB,GAAa,GACzDW,GAAoBS,EAAO,QAAQ,YAAA,CAC/B,MAAO6I,IAAc7I,EAAO,OAAO,QAAU,GAAK,CAAC,EACnD,KAAM6I,IAAc7I,EAAO,OAAO,QAAU,GAAKA,EAAO,aAAa,MAAM,IAE/ET,GAAoBS,EAAO,QAAQ,iBAAA,CAC/B,MAAO6I,IAAc7I,EAAO,OAAO,QAAU,GAAK,CAAC,EACnD,KAAM6I,IAAc7I,EAAO,OAAO,QAAU,GAAKA,EAAO,aAAa,MAAM,EAC3E,MAAO6I,GAAa7I,EAAO,UAAU,oKC1CxCnB,EAAM,CAAA,EAAC,QAAQ,mBACVA,EAAM,CAAA,EAAC,QAAQ,mBACdA,EAAM,CAAA,EAAC,QAAQ,gCAEjBA,EAAO,CAAA,yHAJXA,EAAM,CAAA,EAAC,QAAQ,4BACVA,EAAM,CAAA,EAAC,QAAQ,4BACdA,EAAM,CAAA,EAAC,QAAQ,iLAI3BA,EAAM,CAAA,EAAC,QAAQ,sBAAqB,4DAApCA,EAAM,CAAA,EAAC,QAAQ,sBAAqB,KAAAc,EAAA,EAAAR,CAAA,uDARxCiE,EAAAvE,EAAO,CAAA,EAAA,OAAO,QAAU,WAASyC,GAAAzC,CAAA,yKAPvBA,EAAM,CAAA,EAAC,iBAAiB,mBAC5BA,EAAM,CAAA,EAAC,QAAQ,OAAO,uBAHPA,EAAM,CAAA,CAAA,kBACXA,EAAM,CAAA,CAAA,UAJ3BE,EAUAC,EAAAoC,EAAAlC,CAAA,EADIO,EAA8B2B,EAAAkC,CAAA,+FAJnBzE,EAAM,CAAA,EAAC,iBAAiB,wCAC5BA,EAAM,CAAA,EAAC,QAAQ,0DAHAA,EAAM,CAAA,CAAA,6BACXA,EAAM,CAAA,CAAA,EAQtBA,EAAO,CAAA,EAAA,OAAO,QAAU,oSAzBd,GAAA,CAAA,MAAAe,CAAA,EAAAC,UACA,OAAA0D,EAAS,EAAA,EAAA1D,EAEd,MAAA4D,EAAA,IAAA,CACF7D,EAAM,WAAA,EACNA,EAAM,WACF,MAAM,KAAKI,EAAO,iBAAiB,MAAA,EACnCvB,GAAc,WACd,EAAA,SAYQmB,EAAM,WAAW,SAAS,EAUtByD,EAAA,IAAAzD,EAAM,WAAU,yPCjBE,EAAI,uCACJ,EAAI,6XAJH,EAAI,uCACE,EAAI,kYAFxC,OAAAf,EAAO,CAAA,EAAA,OAAO,MAAQ,QAAO,oEAOC,EAAI,uCACR,EAAI,8QAV3CE,EAYKC,EAAA6C,EAAA3C,CAAA,EAXDO,EAUKoC,EAAAH,CAAA,2gBAdM,GAAA,CAAA,MAAA9B,CAAA,EAAAC,yICJR,SAASiJ,GAAKtM,EAAM,CAAE,KAAAC,EAAM,GAAAI,CAAI,EAAEF,EAAS,GAAI,CACrD,MAAMuB,EAAQ,iBAAiB1B,CAAI,EAC7BgC,EAAYN,EAAM,YAAc,OAAS,GAAKA,EAAM,UACpD,CAAC6K,EAAIC,CAAE,EAAI9K,EAAM,gBAAgB,MAAM,GAAG,EAAE,IAAI,UAAU,EAC1D+K,EAAKxM,EAAK,KAAQA,EAAK,MAAQsM,EAAMlM,EAAG,OAASA,EAAG,KAAOkM,GAC3DG,EAAKzM,EAAK,IAAOA,EAAK,OAASuM,EAAMnM,EAAG,QAAUA,EAAG,IAAMmM,GAC3D,CAAE,MAAAlM,EAAQ,EAAG,SAAAC,EAAYoM,GAAM,KAAK,KAAKA,CAAC,EAAI,IAAK,OAAAnM,EAASkD,EAAU,EAAGvD,EAC/E,MAAO,CACN,MAAAG,EACA,SAAUuE,GAAYtE,CAAQ,EAAIA,EAAS,KAAK,KAAKkM,EAAKA,EAAKC,EAAKA,CAAE,CAAC,EAAInM,EAC3E,OAAAC,EACA,IAAK,CAACgB,EAAGiD,IAAM,CACd,MAAMV,EAAIU,EAAIgI,EACRzI,EAAIS,EAAIiI,EACRE,EAAKpL,EAAKiD,EAAIxE,EAAK,MAASI,EAAG,MAC/BwM,EAAKrL,EAAKiD,EAAIxE,EAAK,OAAUI,EAAG,OACtC,MAAO,cAAc2B,CAAS,cAAc+B,CAAC,OAAOC,CAAC,aAAa4I,CAAE,KAAKC,CAAE,IAC9E,CACE,CACF,wFCNkBxK,EAAU,CAAA,CAAA,8HAJV,EAAQA,EAAO,CAAA,EAAA,iBAAiB,IAAIA,EAAO,CAAA,EAAC,EAAE,CAAA,gBACrDA,EAAM,CAAA,EAAC,QAAQ,MAAM,UALhCE,EASQC,EAAAoC,EAAAlC,CAAA,EADJO,EAA4B2B,EAAAkC,CAAA,oEAAdzE,EAAU,CAAA,+BAJV,EAAQA,EAAO,CAAA,EAAA,iBAAiB,IAAIA,EAAO,CAAA,EAAC,EAAE,sCACrDA,EAAM,CAAA,EAAC,QAAQ,wJAXX,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,EAWoC,MAAA2D,EAAA,IAAA5D,EAAM,eAAeqG,EAAQ,EAAE,oHAT9EnG,EAAA,EAAGwJ,EAAatJ,EAAO,iBAAiB,IAAIiG,EAAQ,EAAE,EAAI,oBAAsB,aAAA,4LCclEpH,EAAS,CAAA,CAAA,+EAPTQ,EAAA+B,EAAA,eAAAsC,EAAA7E,KAAQ,OAAO,EACnBuC,EAAA,SAAAmI,EAAA1K,KAAQ,QACXQ,EAAA+B,EAAA,QAAAoI,EAAA3K,EAAQ,CAAA,EAAA,QACTA,EAAM,CAAA,EAAC,QAAQA,KAAQ,QAAU,UAAY,WAAW,EACxDA,EAAO,CAAA,EAAA,QAAQA,KAAQ,QAAU,kBAAoB,eAAe,CAAA,UAR9EE,EAYQC,EAAAoC,EAAAlC,CAAA,EADJO,EAA2B2B,EAAAkC,CAAA,oEAAbzE,EAAS,CAAA,mBAPTa,EAAA,GAAAgE,KAAAA,EAAA7E,KAAQ,gCACZa,EAAA,GAAA6J,KAAAA,EAAA1K,KAAQ,yBACXa,EAAA,IAAA8J,KAAAA,EAAA3K,EAAQ,CAAA,EAAA,QACTA,EAAM,CAAA,EAAC,QAAQA,KAAQ,QAAU,UAAY,WAAW,EACxDA,EAAO,CAAA,EAAA,QAAQA,KAAQ,QAAU,kBAAoB,eAAe,mJAd/D,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,cAcoCD,EAAM,WAAY,CAAAqG,EAAQ,EAAE,EAAA,CAAIA,EAAQ,OAAO,oHAZ3FnG,EAAA,EAAA2J,EAAYxD,EAAQ,QAAU,uBAAyB,WAAA,0HCSzDpH,EAAK,CAAA,EAAC,KAAK,IAAI,EAAA,gDADpBE,EAEKC,EAAAC,EAAAC,CAAA,mCAFcL,EAAK,CAAA,EAAC,KAAK;AAAA,CAAI,CAAA,CAAA,8BAC7BA,EAAK,CAAA,EAAC,KAAK,IAAI,EAAA,KAAAc,EAAA3B,EAAAmB,CAAA,2CADDN,EAAK,CAAA,EAAC,KAAK;AAAA,CAAI,CAAA,kIAXnB,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,qHAEXC,EAAA,EAAG4J,EACC1J,EAAO,OAAO,MAAQ,QAAUA,EAAO,OAAO,MAAQ,SAChDiG,EAAQ,WAAW,OAAS,EACxBA,EAAQ,WAAW,IAAK0D,GAASA,EAAK,QAAQ,EAC7C,CAAA3J,EAAO,QAAQ,WAAW,EAC9B,CAAAiG,EAAQ,OAAO,QAAQ,CAAA,wHCDzBpH,EAAM,CAAA,EAAC,QAAQ,MAAK,2EADzBE,EAEMC,EAAA4C,EAAA1C,CAAA,6BADDL,EAAM,CAAA,EAAC,QAAQ,MAAK,KAAAc,EAAA3B,EAAAmB,CAAA,yCAG5BiG,GAAAvG,KAAQ,SAAWA,EAAO,CAAA,EAAA,QAAQ,WAAS,WALvCuE,EAAAvE,KAAQ,OAAKyC,GAAAzC,CAAA,sDADtBE,EAOKC,EAAAC,EAAAC,CAAA,mCAPc0K,EAAAC,GAAAC,EAAAC,GAAA,KAAA,KAAA9K,EAAAJ,KAAQ,SAAWA,EAAO,CAAA,EAAA,QAAQ,SAAS,CAAA,kBACrDA,KAAQ,6DAKZa,EAAA,GAAA0F,KAAAA,GAAAvG,KAAQ,SAAWA,EAAO,CAAA,EAAA,QAAQ,WAAS,KAAAc,EAAA0F,EAAAD,CAAA,EAN7B0E,GAAAzI,GAAAyI,EAAA,MAAA,GAAApK,EAAA,GAAAoK,EAAA,OAAA,KAAA,KAAAjL,KAAQ,SAAWA,EAAO,CAAA,EAAA,QAAQ,SAAS,yIAJ/C,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,yOCaNhB,EAAI,CAAA,CAAA,8HAFoCA,EAAM,CAAA,EAAA,cAAA,UAHnDE,EAMMC,EAAA4C,EAAA1C,CAAA,mCAJYL,EAAI,CAAA,CAAA,CAAA,yBAGjBA,EAAI,CAAA,CAAA,gCAFoCA,EAAM,CAAA,EAAA,cAAA,2CADjCA,EAAI,CAAA,CAAA,0CAHpB,IAAAmL,EAAA,CAAA,YAAa,UAAU,EAAE,SAASnL,KAAS,YAAY,iFAAvDa,EAAA,IAAAsK,EAAA,CAAA,YAAa,UAAU,EAAE,SAASnL,KAAS,YAAY,oIAP9C,CAAA,OAAAkB,CAAA,EAAAF,EACA,CAAA,SAAAoK,CAAA,EAAApK,qHAEXC,EAAA,EAAGoK,EAAO9K,GAAiBW,EAAQkK,EAAS,YAAY,CAAA,gBACrDnK,EAAA,EAAAqK,EAASF,EAAS,oBAAsB,EAAA,wHCK1C9K,EAAAN,KAAM,KAAI,4HAH6BQ,EAAAuC,EAAA,QAAAwI,EAAA,iCAAAvL,sFACQA,EAAK,CAAA,CAAA,uCAAA,UAHzDE,EAMMC,EAAA4C,EAAA1C,CAAA,mBADDQ,EAAA,GAAAP,KAAAA,EAAAN,KAAM,KAAI,KAAAc,EAAA3B,EAAAmB,CAAA,EAH6BO,EAAA,GAAA0K,KAAAA,EAAA,iCAAAvL,sFACQA,EAAK,CAAA,CAAA,0GAR1C,CAAA,MAAAsF,CAAA,EAAAtE,iFAEXC,EAAA,EAAG0E,EAAQb,GAAO,SAASQ,EAAM,KAAK,EAAIA,EAAM,MAAQ,MAAA,oKCInDtF,EAAM,CAAA,EAAC,OAAO,UAAYA,EAAO,CAAA,EAAC,OAAO,IAAEwL,GAAAxL,CAAA,uEAA3CA,EAAM,CAAA,EAAC,OAAO,UAAYA,EAAO,CAAA,EAAC,OAAO,0NACrB,OAAAA,KAAQ,OAAkB,SAAAA,KAAO,2EAAjCa,EAAA,IAAA4K,EAAA,OAAAzL,KAAQ,QAAkBa,EAAA,IAAA4K,EAAA,SAAAzL,KAAO,yWAIrDuE,GAAAvE,EAAO,CAAA,EAAA,OAAO,MAAQ,SAAWA,EAAM,CAAA,EAAC,OAAO,SAAWA,KAAM,KAAEqC,GAAArC,CAAA,yHAAlEA,EAAO,CAAA,EAAA,OAAO,MAAQ,SAAWA,EAAM,CAAA,EAAC,OAAO,SAAWA,KAAM,2MAKhEA,EAAM,CAAA,EAAC,OAAO,UAAYA,EAAO,CAAA,EAAC,OAAO,IAAEC,GAAAD,CAAA,uEAA3CA,EAAM,CAAA,EAAC,OAAO,UAAYA,EAAO,CAAA,EAAC,OAAO,0NACrB,OAAAA,KAAQ,OAAkB,SAAAA,KAAO,2EAAjCa,EAAA,IAAA4K,EAAA,OAAAzL,KAAQ,QAAkBa,EAAA,IAAA4K,EAAA,SAAAzL,KAAO,8IAZzDqG,EAAArG,EAAO,CAAA,EAAA,aAAeD,GAAa,IAAEuG,GAAAtG,CAAA,EAKnCkG,EAAAC,GAAAnG,KAAQ,MAAM,EAAW,MAAAoG,EAAApG,GAAAA,KAAM,mBAApC,OAAIyE,GAAA,EAAA,8CAKD,IAAAnC,EAAAtC,EAAO,CAAA,EAAA,cAAgBD,GAAa,IAAE0C,GAAAzC,CAAA,+MAVtCA,EAAO,CAAA,EAAA,aAAeD,GAAa,kHAKjCmG,EAAAC,GAAAnG,KAAQ,MAAM,yDAKhBA,EAAO,CAAA,EAAA,cAAgBD,GAAa,8IALvC,OAAI0E,GAAA,iQATS,GAAA,CAAA,MAAA1D,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,yQCOahB,EAAO,CAAA,EAAC,eAAiB,EAAI,eAAiB,GAAE,oBAAgB,EAAI,oDAH3EA,EAAO,CAAA,EAAC,gBAAkB,CAAC,gBACjCA,EAAO,CAAA,EAAC,eAAiB,EAAIA,EAAM,CAAA,EAAC,QAAQ,eAAiB,MAAS,UAHjFE,EAMMC,EAAA4C,EAAA1C,CAAA,EADFO,EAA2FmC,EAAA0B,CAAA,mCAAvEzE,EAAO,CAAA,EAAC,eAAiB,EAAI,eAAiB,iCAHrDA,EAAO,CAAA,EAAC,gBAAkB,qCAChCA,EAAO,CAAA,EAAC,eAAiB,EAAIA,EAAM,CAAA,EAAC,QAAQ,eAAiB,gEAJvEA,EAAO,CAAA,EAAC,eAAiB,GAAKA,EAAM,CAAA,EAAC,cAAgBD,GAAa,KAAE0C,GAAAzC,CAAA,oEAApEA,EAAO,CAAA,EAAC,eAAiB,GAAKA,EAAM,CAAA,EAAC,cAAgBD,GAAa,oMAJxD,GAAA,CAAA,MAAAgB,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,sMCQVV,EAAAN,KAAQ,UAAS,iIAFXQ,EAAAuC,EAAA,QAAA2I,EAAA1L,KAAQ,QAAQ,EADgB2L,EAAA5I,EAAA,kCAAA/C,EAAO,CAAA,EAAA,cAAgBD,GAAa,EAAE,UAFjFG,EAMMC,EAAA4C,EAAA1C,CAAA,mBADDQ,EAAA,GAAAP,KAAAA,EAAAN,KAAQ,UAAS,KAAAc,EAAA3B,EAAAmB,CAAA,EAFXO,EAAA,GAAA6K,KAAAA,EAAA1L,KAAQ,+BADwB2L,EAAA5I,EAAA,kCAAA/C,EAAO,CAAA,EAAA,cAAgBD,GAAa,EAAE,uHANlE,GAAA,CAAA,QAAAqH,CAAA,EAAApG,EACA,CAAA,MAAAD,CAAA,EAAAC,8MCYFhB,EAAM,CAAA,EAAC,QAAQ,gBAAe,WAE9BA,EAAM,CAAA,EAAC,WAAa,GAACC,GAAAD,CAAA,iGAJ9BE,EAaKC,EAAA6C,EAAA3C,CAAA,EAZDO,EAEKoC,EAAAH,CAAA,mDADA7C,EAAM,CAAA,EAAC,QAAQ,gBAAe,KAAAc,EAAAuD,EAAAC,CAAA,EAE9BtE,EAAM,CAAA,EAAC,WAAa,iFAJb4L,EAAAC,GAAA7I,EAAAzB,GAAA,CAAA,MAAO,IAAG,mEAUbvB,EAAM,CAAA,EAAC,QAAQ,mBAAkB,kFAH5BQ,EAAAhB,EAAA,OAAAiB,EAAAqL,GAAQ9L,EAAY,CAAA,CAAA,CAAA,UAF9BE,EAMGC,EAAAX,EAAAa,CAAA,+DADEL,EAAM,CAAA,EAAC,QAAQ,mBAAkB,KAAAc,EAAA3B,EAAAmB,CAAA,EAH5BO,EAAA,GAAAJ,KAAAA,EAAAqL,GAAQ9L,EAAY,CAAA,CAAA,mEARpCA,EAAM,CAAA,EAAC,aAAa,QAAMyC,GAAAzC,CAAA,oEAA1BA,EAAM,CAAA,EAAC,aAAa,sOATX,GAAA,CAAA,MAAAe,CAAA,EAAAC,kBAkBgCD,EAAM,SAASgL,CAAY,oFAhBnE9K,EAAA,EAAA8K,EAAA,CACC,KAAM5K,EAAO,OAAO,KACpB,SAAUA,EAAO,OAAO,SACxB,QAASA,EAAO,OAAO,klCC4DXjB,EAoBKC,EAAA6L,EAAA3L,CAAA,qBAlBDO,EAiBKoL,EAAA/I,CAAA,EAhBDrC,EAMKqC,EAAAD,CAAA,wCAHDpC,EAEKoC,EAAAH,CAAA,qBAETjC,EAKKqC,EAAAN,CAAA,EAJD/B,EAEK+B,EAAAC,CAAA,wCAGThC,EAEKqC,EAAAP,CAAA,yzDA7CbxC,EAyBKC,EAAAuC,EAAArC,CAAA,wCAtBDO,EAmBK8B,EAAAC,CAAA,EAfD/B,EAEK+B,EAAAE,CAAA,qBACLjC,EAWK+B,EAAAC,CAAA,qBANDhC,EAKKgC,EAAAI,CAAA,o6BArBhB,OAAAhD,EAAO,CAAA,EAAA,cAAgBD,GAAa,GAAE,yMAPrCS,EAAAhB,EAAA,OAAAiB,EAAAqL,GAAQ9L,EAAc,CAAA,EAAAA,KAASA,EAAC,CAAA,CAAA,CAAA,CAAA,EACP2L,EAAAnM,EAAA,0BAAAQ,KAAO,iBAAiB,IAAIA,KAAQ,EAAE,CAAA,mCACnCA,EAAO,CAAA,EAAC,QAAM,CAC3CA,EAAM,CAAA,EAAC,iBAAiB,IAAIA,EAAO,CAAA,EAAC,EAAE,CAAA,EACnB2L,EAAAnM,EAAA,mBAAAQ,KAAQ,MAAM,uBAT1CE,EA8DGC,EAAAX,EAAAa,CAAA,uMAzDO,CAAA4L,GAAApL,EAAA,GAAAJ,KAAAA,EAAAqL,GAAQ9L,EAAc,CAAA,EAAAA,KAASA,EAAC,CAAA,CAAA,CAAA,8BACP2L,EAAAnM,EAAA,0BAAAQ,KAAO,iBAAiB,IAAIA,KAAQ,EAAE,CAAA,8CACnCA,EAAO,CAAA,EAAC,QAAM,CAC3CA,EAAM,CAAA,EAAC,iBAAiB,IAAIA,EAAO,CAAA,EAAC,EAAE,CAAA,aACnB2L,EAAAnM,EAAA,mBAAAQ,KAAQ,MAAM,mEARtBkM,EAAAxO,GAAA8B,EAAA2M,EAAAlC,GAAA,CAAA,MAAO,IAAK,SAAU,IAAG,4CAC9BmC,EAAAP,GAAArM,EAAA+B,GAAA,CAAA,MAAO,IAAG,sDACT8K,EAAAC,GAAA9M,EAAA+B,GAAA,CAAA,SAAU,IAAG,kGAJ1B2E,EAAAC,GAAAnG,KAAO,YAAY,EAAgB,MAAAoG,EAAApG,GAAAA,KAAQ,mBAAhD,OAAIyE,GAAA,EAAA,kMADVvE,EAmEKC,EAAAC,EAAAC,CAAA,2FAlEM6F,EAAAC,GAAAnG,KAAO,YAAY,6LAAxB,OAAIyE,GAAA,8KAFR,IAAA8H,EAAAvM,KAAO,0FAAPa,EAAA,GAAA2L,GAAAD,EAAAA,EAAAvM,KAAO,YAAY,oOAXV,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAEL,MAAAyL,EAAA,CAAiBrF,EAAyB3C,SAErCtD,EAAO,OACV,UAAWiG,EAAQ,GACnB,QAASjG,EAAO,OAAO,QAAU,GAAKsD,IAkBHE,EAAA,CAAAyC,EAAA3C,IAAA1D,EAAM,SAAS0L,EAAcrF,EAAS3C,CAAC,CAAA,4JCnCvE,GAAA,CAAA,WAAAiI,CAAA,EAAA1L,EAEP2L,QAIEC,EAA0BF,MAAAA,GAAAA,CACtB,MAAAG,EAAA,MAAiBC,GAAyB,eAAe,EAC/DH,GAAA,MAAAA,EAAe,SACfA,EAAgB,OACV,MAAAnO,GAAA,EACNmO,EAAgB,SAAS,cAAc,QAAQ,EAC/CA,EAAc,aAAa,OAAQ,iBAAiB,EACpDA,EAAc,UAAYE,EAAS,2BAA2BH,CAAU,EACxE,SAAS,KAAK,OAAOC,CAAa,GAGtC,OAAA/I,GAAA,IAAA,CACI+I,GAAA,MAAAA,EAAe,6FAdhBC,EAAiBF,GAAc,EAAE,2HCoC3B1M,EAAQ,CAAA,GAAAqC,GAAArC,CAAA,6KANMA,EAAQ,CAAA,CAAA,gBAChBA,EAAM,CAAA,EAAC,QAAQ,IAAI,kCALlCE,EAoCKC,EAAAC,EAAAC,CAAA,EAnCDO,EAQQR,EAAAmC,CAAA,EADJ3B,EAAgD2B,EAAAkC,CAAA,2CAFtCzE,EAAU,CAAA,CAAA,oBANIA,EAAS,CAAA,CAAA,CAAA,0CAIlBA,EAAQ,CAAA,CAAA,eAChBA,EAAM,CAAA,EAAC,QAAQ,sBAKrBA,EAAQ,CAAA,6HAQAA,EAAM,CAAA,EAAC,QAAQ,MAAK,eAUpBA,EAAM,CAAA,EAAC,QAAQ,SAAQ,iBAIvBA,EAAM,CAAA,EAAC,QAAQ,QAAO,sWAVZA,EAAW,CAAA,+CAELA,EAAW,CAAA,CAAA,6KAbpCE,EAuBKC,EAAAC,EAAAC,CAAA,EAtBDO,EAOQR,EAAA2H,CAAA,EAFJnH,EAAiDmH,EAAA0B,CAAA,uBAGrD7I,EASQR,EAAA4H,CAAA,EAFJpH,EAAqDoH,EAAA0B,CAAA,uBAGzD9I,EAGQR,EAAA2M,CAAA,EAFJnM,EAAiDmM,EAAAC,CAAA,2GAbhDhN,EAAM,CAAA,EAAC,QAAQ,MAAK,KAAAc,EAAA0F,EAAAD,CAAA,eAUpBvG,EAAM,CAAA,EAAC,QAAQ,SAAQ,KAAAc,EAAAmM,EAAAC,CAAA,eANblN,EAAW,CAAA,wCAELA,EAAW,CAAA,CAAA,eAQ3BA,EAAM,CAAA,EAAC,QAAQ,QAAO,KAAAc,EAAAqM,EAAAC,CAAA,sQAU5BpN,EAAM,CAAA,EAAC,QAAQ,KAAK,qIAQhBA,EAAW,CAAA,gBAEfA,EAAM,CAAA,EAAC,QAAQ,QAAQ,mDADbA,EAAW,CAAA,CAAA,gGASrBA,EAAM,CAAA,EAAC,QAAQ,OAAO,2CApBjCE,EAOQC,EAAA4H,EAAA1H,CAAA,EADJO,EAAiDmH,EAAA0B,CAAA,WAErDvJ,EASQC,EAAA6H,EAAA3H,CAAA,EADJO,EAAqDoH,EAAA0B,CAAA,WAEzDxJ,EAOQC,EAAA4M,EAAA1M,CAAA,EADJO,EAAiDmM,EAAAC,CAAA,8FAtB1ChN,EAAM,CAAA,EAAC,QAAQ,oCAQXA,EAAW,CAAA,gCAEfA,EAAM,CAAA,EAAC,QAAQ,+CADLA,EAAW,CAAA,CAAA,eASrBA,EAAM,CAAA,EAAC,QAAQ,mHA7DzBqG,EAAArG,EAAO,CAAA,EAAA,aAAeD,GAAa,IAAEE,GAAAD,CAAA,EAwCrCsC,EAAAtC,EAAO,CAAA,EAAA,cAAgBD,GAAa,IAAE0C,GAAAzC,CAAA,6FA3CzBA,EAAS,CAAA,CAAA,+EALTQ,EAAA+B,EAAA,eAAAsC,EAAA7E,KAAQ,OAAO,EACnBuC,EAAA,SAAAmI,EAAA1K,KAAQ,QACXQ,EAAA+B,EAAA,QAAAoI,EAAA3K,KAAQ,QAAUA,EAAM,CAAA,EAAC,QAAQ,gBAAkBA,EAAM,CAAA,EAAC,QAAQ,aAAa,UAN1FE,EAUQC,EAAAoC,EAAAlC,CAAA,EADJO,EAA2B2B,EAAAkC,CAAA,gHAAbzE,EAAS,CAAA,mBALTa,EAAA,GAAAgE,KAAAA,EAAA7E,KAAQ,gCACZa,EAAA,GAAA6J,KAAAA,EAAA1K,KAAQ,yBACXa,EAAA,IAAA8J,KAAAA,EAAA3K,KAAQ,QAAUA,EAAM,CAAA,EAAC,QAAQ,gBAAkBA,EAAM,CAAA,EAAC,QAAQ,+BAMxEA,EAAO,CAAA,EAAA,aAAeD,GAAa,qEAwCnCC,EAAO,CAAA,EAAA,cAAgBD,GAAa,0OArE1B,GAAA,CAAA,MAAAgB,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,EACA,CAAA,YAAAqM,CAAA,EAAArM,EAEPyF,EAAW,GAIT,MAAAG,EAAA,IAAA,KACFH,EAAY,CAAAA,CAAA,GAGVE,EAAA,IAAA,KACFF,EAAW,EAAA,SAWC1F,EAAM,WAAY,CAAAqG,EAAQ,EAAE,EAAA,CAAIA,EAAQ,OAAO,EAqB/B0B,EAAA,IAAA/H,EAAM,MAAMqG,EAAS,EAAK,EAU1B2B,EAAA,IAAAhI,EAAM,MAAMqG,EAAS,EAAI,QAKerG,EAAM,QAAQqG,CAAO,EAczEkG,EAAA,IAAAvM,EAAM,MAAMqG,EAAS,EAAK,EAU1BmG,EAAA,IAAAxM,EAAM,MAAMqG,EAAS,EAAI,QAQzBrG,EAAM,QAAQqG,CAAO,4JAtFtCnG,EAAA,EAAA2J,EAAYxD,EAAQ,QAAU,uBAAyB,WAAA,kOCuBVoG,EAAAxN,KAASA,EAAI,CAAA,CAAA,EAAA,aACdyN,GAAWzN,EAAI,CAAA,EAAC,QAAQ,EAAA,8IAbtDQ,EAAAkN,EAAA,MAAAC,EAAA3N,KAAK,QAAQ,EACb4N,GAAAF,EAAA,IAAAG,EAAA7N,KAAK,OAAO,GAAAQ,EAAAkN,EAAA,MAAAG,CAAA,uVANfrN,EAAAhB,EAAA,OAAAiB,EAAAT,KAAK,OAAO,wIADtBE,EAqBGC,EAAAX,EAAAa,CAAA,EAjBCO,EAOCpB,EAAAkO,CAAA,SACD9M,EAICpB,EAAAiF,CAAA,SACD7D,EAGKpB,EAAAoD,CAAA,EAFDhC,EAAwDgC,EAAAC,CAAA,gBACxDjC,EAAkEgC,EAAAI,CAAA,aAD/C+H,EAAAC,GAAAC,EAAAC,GAAA,KAAA,KAAArI,EAAA7C,KAASA,EAAI,CAAA,CAAA,CAAA,CAAA,oBAZ3Ba,EAAA,GAAA8M,KAAAA,EAAA3N,KAAK,wBACLa,EAAA,GAAA,CAAA+M,GAAAF,EAAA,IAAAG,EAAA7N,KAAK,OAAO,gBAWmBa,EAAA,GAAA2M,KAAAA,EAAAxN,KAASA,EAAI,CAAA,CAAA,EAAA,KAAAc,EAAAgN,EAAAN,CAAA,EAA9BvC,GAAAzI,GAAAyI,EAAA,MAAA,GAAApK,EAAA,GAAAoK,EAAA,OAAA,KAAA,KAAAjL,KAASA,EAAI,CAAA,CAAA,CAAA,cACGyN,GAAWzN,EAAI,CAAA,EAAC,QAAQ,EAAA,KAAAc,EAAAmM,EAAAC,CAAA,EAlBzDrM,EAAA,GAAAJ,KAAAA,EAAAT,KAAK,4EAgCsBuG,EAAAvG,KAAQ,YAAW,6QAR9C+N,GAAe/N,EAAO,CAAA,EAAC,EAAE,CAAA,8FADnCE,EAUGC,EAAAX,EAAAa,CAAA,EANCO,EAICpB,EAAAiF,CAAA,SACD7D,EAA0DpB,EAAAY,CAAA,iBAAzBS,EAAA,GAAA0F,KAAAA,EAAAvG,KAAQ,YAAW,KAAAc,EAAA0F,EAAAD,CAAA,cAR9CwH,GAAe/N,EAAO,CAAA,EAAC,EAAE,yDA1BhCkG,EAAAC,GAAAnG,KAAQ,WAAW,uBAAxB,OAAIyE,GAAA,qBAwBD,IAAAF,EAAAvE,EAAQ,CAAA,EAAA,YAAY,OAAS,GAACyC,GAAAzC,CAAA,qKAzBvCE,EAsCKC,EAAAC,EAAAC,CAAA,2FArCM6F,EAAAC,GAAAnG,KAAQ,WAAW,oBAAxB,OAAIyE,GAAA,EAAA,gHAAJ,OAwBGzE,EAAQ,CAAA,EAAA,YAAY,OAAS,wHAhCvB,GAAA,CAAA,QAAAgO,CAAA,EAAAhN,EACA,CAAA,QAAAoG,CAAA,EAAApG,EAEL,MAAAiN,EAAYC,IACbA,EAAK,SAAWA,EAAK,UAAU,QAAQ,MAAO,EAAE,+MCIpDlO,EAAM,CAAA,EAAC,QAAQ,MAAK,eAYpBA,EAAM,CAAA,EAAC,QAAQ,SAAQ,iBAIvBA,EAAM,CAAA,EAAC,QAAQ,QAAO,6TAZZA,EAAW,CAAA,+CACLA,EAAW,CAAA,CAAA,oBAETA,EAAW,CAAA,CAAA,uBACRA,EAAW,CAAA,CAAA,8GAdrCE,EAOQC,EAAA4H,EAAA1H,CAAA,EAFJO,EAAmCmH,EAAA0B,CAAA,yBAGvCvJ,EAWQC,EAAA6H,EAAA3H,CAAA,EAFJO,EAAuCoH,EAAA0B,CAAA,yBAG3CxJ,EAGQC,EAAA4M,EAAA1M,CAAA,EAFJO,EAAmCmM,EAAAC,CAAA,0GAflChN,EAAM,CAAA,EAAC,QAAQ,MAAK,KAAAc,EAAA0F,EAAAD,CAAA,cAYpBvG,EAAM,CAAA,EAAC,QAAQ,SAAQ,KAAAc,EAAAmM,EAAAC,CAAA,eARblN,EAAW,CAAA,wCACLA,EAAW,CAAA,CAAA,yBAETA,EAAW,CAAA,CAAA,4BACRA,EAAW,CAAA,CAAA,cAQhCA,EAAM,CAAA,EAAC,QAAQ,QAAO,KAAAc,EAAAqM,EAAAC,CAAA,wJA3BZ,GAAA,CAAA,MAAArM,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,EACA,CAAA,YAAAqM,CAAA,EAAArM,EAMK,MAAA2D,EAAA,IAAA5D,EAAM,MAAMqG,EAAS,EAAK,EAY1B0B,EAAA,IAAA/H,EAAM,MAAMqG,EAAS,EAAI,QAK2BrG,EAAM,QAAQqG,CAAO,2VCf7FlH,EAGKC,EAAAC,EAAAC,CAAA,cADML,EAAO,CAAA,sCAAPA,EAAO,CAAA,yDAZH,GAAA,CAAA,QAAAmO,CAAA,EAAAnN,EAEPrD,EAEJyQ,GAAA,SAAA,EACU,MAAetB,GAA8B,qBAAqB,GACjE,4BAA4BnP,CAAI,CAAA,8CAIIA,EAAIoG,0PCH9B,OAAA/D,KAAQ,OAAkB,SAAAA,KAAO,2EAAjCa,EAAA,IAAA4K,EAAA,OAAAzL,KAAQ,QAAkBa,EAAA,IAAA4K,EAAA,SAAAzL,KAAO,sbADrDA,EAAO,CAAA,EAAC,OAAO,IAAMA,EAAM,CAAA,EAAC,OAAO,UAAQyC,GAAAzC,CAAA,EAGzCkG,EAAAC,GAAAnG,KAAQ,MAAM,EAAW,MAAAoG,EAAApG,GAAAA,KAAM,mBAApC,OAAIyE,GAAA,EAAA,uNAHDzE,EAAO,CAAA,EAAC,OAAO,IAAMA,EAAM,CAAA,EAAC,OAAO,wHAGjCkG,EAAAC,GAAAnG,KAAQ,MAAM,2FAAnB,OAAIyE,GAAA,wOAPS,GAAA,CAAA,MAAA1D,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,sMCKNV,EAAAN,KAAK,SAAQ,2CADlBE,EAEMC,EAAA4C,EAAA1C,CAAA,iBADDQ,EAAA,GAAAP,KAAAA,EAAAN,KAAK,SAAQ,KAAAc,EAAA3B,EAAAmB,CAAA,uCAJbA,EAAAN,KAAK,SAAQ,kCADTQ,EAAAhB,EAAA,OAAAiB,EAAAT,KAAK,UAAU,UAAxBE,EAEGC,EAAAX,EAAAa,CAAA,iBADEQ,EAAA,GAAAP,KAAAA,EAAAN,KAAK,SAAQ,KAAAc,EAAA3B,EAAAmB,CAAA,EADTO,EAAA,GAAAJ,KAAAA,EAAAT,KAAK,gFADb,OAAAA,KAAK,WAAUyC,8MAHL,GAAA,CAAA,KAAAqI,CAAA,EAAA9J,0KCgBF,OAAAgD,EAAAhE,EAAM,CAAA,IAAN,MAAAgE,EAAM,YAAaC,EAAAjE,OAAA,MAAAiE,EAAM,SAAQhE,+HAD1CC,EAMMC,EAAA4C,EAAA1C,CAAA,yJAdGuN,GAAAF,EAAA,IAAAG,EAAA7N,KAAK,UAAU,GAAAQ,EAAAkN,EAAA,MAAAG,CAAA,qHADxB3N,EAOCC,EAAAuN,EAAArN,CAAA,UANQQ,EAAA,GAAA,CAAA+M,GAAAF,EAAA,IAAAG,EAAA7N,KAAK,UAAU,+FAYFA,EAAI,CAAA,EAAA,gBAAA,UAAlBE,EAAsBC,EAAAsE,EAAApE,CAAA,4BAARL,EAAI,CAAA,EAAA,iEAFjB,IAAAsE,EAAAtE,KAAK,UAAU,MAAM,EAAG,CAAC,EAAA,KAAGuG,EAAAvG,KAAK,SAAS,MAAM,EAAG,CAAC,EAAA,gEAApDa,EAAA,GAAAyD,KAAAA,EAAAtE,KAAK,UAAU,MAAM,EAAG,CAAC,EAAA,KAAAc,EAAAuD,EAAAC,CAAA,EAAGzD,EAAA,GAAA0F,KAAAA,EAAAvG,KAAK,SAAS,MAAM,EAAG,CAAC,EAAA,KAAAc,EAAA0F,EAAAD,CAAA,oEAZ5D,OAAAvC,EAAAhE,OAAA,MAAAgE,EAAM,WAAUvB,kNAJN,KAAAqI,EAAyB,MAAA,EAAA9J,GACzB,KAAAqN,EAAO,SAAA,EAAArN,wOC6B6BhB,EAAS,CAAA,mDADhDE,EAAKC,EAAAmO,EAAAjO,CAAA,kFACkCL,EAAS,CAAA,qIAnB/CsE,EAAAtE,KAAU,QAAO,yBAYbkN,EAAAlN,KAAU,SAAQ,2BAPI,MAAA,CAAA,KAAAA,KAAU,MAAM,cAGf,MAAA,CAAA,KAAAA,KAAU,MAAM,cAQvB,MAAA,CAAA,QAAAA,KAAU,OAAO,IACrC,IAAAuE,EAAAvE,EAAU,CAAA,EAAA,YAAY,OAAS,GAACyC,GAAAzC,CAAA,6fApB7CE,EAyBKC,EAAA6L,EAAA3L,CAAA,EAxBDO,EAuBKoL,EAAA/I,CAAA,EAtBDrC,EAEIqC,EAAAH,CAAA,gBACJlC,EAYKqC,EAAAP,CAAA,EAXD9B,EAOK8B,EAAAE,CAAA,EANDhC,EAEKgC,EAAAC,CAAA,qBACLjC,EAEKgC,EAAAI,CAAA,qBAETpC,EAEK8B,EAAAC,CAAA,gBAET/B,EAAKqC,EAAAqL,CAAA,2DAfA,CAAArC,GAAApL,EAAA,IAAAyD,KAAAA,EAAAtE,KAAU,QAAO,KAAAc,EAAAuD,EAAAC,CAAA,aAKSzD,EAAA,IAAA0N,EAAA,KAAAvO,KAAU,6BAGTa,EAAA,IAAA2N,EAAA,KAAAxO,KAAU,mBAIjC,CAAAiM,GAAApL,EAAA,IAAAqM,KAAAA,EAAAlN,KAAU,SAAQ,KAAAc,EAAAmM,EAAAC,CAAA,cAIFrM,EAAA,IAAA4N,GAAA,QAAAzO,KAAU,oBAC9BA,EAAU,CAAA,EAAA,YAAY,OAAS,qTAxB7B,GAAA,CAAA,QAAAgO,CAAA,EAAAhN,EACA,CAAA,UAAA0N,CAAA,EAAA1N,wUCiBahB,EAAM,CAAA,EAAC,QAAQA,EAAI,CAAA,CAAA,EAAA,4BACpB2O,EAAAxI,GAAAnG,KAAWA,EAAI,CAAA,CAAA,CAAA,EAAc,MAAAoG,EAAApG,GAAAA,KAAK,mBAAvC,OAAIyE,GAAA,EAAA,2FADuB,GAAE,+EADnCvE,EAOKC,EAAAC,EAAAC,CAAA,EANDO,EAAqCR,EAAA2C,CAAA,8GAA7B/C,EAAM,CAAA,EAAC,QAAQA,EAAI,CAAA,CAAA,EAAA,KAAAc,EAAAuD,EAAAC,CAAA,QACpBqK,EAAAxI,GAAAnG,KAAWA,EAAI,CAAA,CAAA,CAAA,2EAApB,OAAIyE,GAAA,wJACS,GACX,gEADKF,EAAAvE,KAAI,GAACC,GAAA,iLAALD,KAAI,2NAJhB,IAAAmL,EAAAnL,EAAW,CAAA,EAAAA,EAAM,CAAA,CAAA,EAAA,OAAS,sFAA1Ba,EAAA,IAAAsK,EAAAnL,EAAW,CAAA,EAAAA,EAAM,CAAA,CAAA,EAAA,OAAS,4NAPhB,MAAA,CAAA,KAAAA,KAAQ,MAAM,cAIT,MAAA,CAAA,KAAAA,KAAQ,MAAM,aAE/B,OAAO,OAAOF,EAAa,CAAA,uBAAhC,OAAI2E,GAAA,2VARdvE,EAqBKC,EAAAwC,EAAAtC,CAAA,EApBDO,EAEK+B,EAAAE,CAAA,qBACLjC,EAgBK+B,EAAAC,CAAA,EAfDhC,EAEKgC,EAAAI,CAAA,gGALcnC,EAAA,IAAA0N,EAAA,KAAAvO,KAAQ,gCAIHa,EAAA,IAAA2N,EAAA,KAAAxO,KAAQ,6BAEzB,OAAO,OAAOF,EAAa,CAAA,oBAAhC,OAAI2E,GAAA,EAAA,4GAAJ,OAAIA,EAAAmK,EAAA,OAAAnK,GAAA,gFAAJ,OAAIA,GAAA,0PAhBC,GAAA,CAAA,MAAA1D,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,oHAEXC,EAAA,EAAG4N,EAAcC,GACN1H,EAAQ,WAAW,OAAQ0D,GAASA,EAAK,MAAQgE,CAAI,6MCsC3B,QAAA9O,KAAO,sEADpCE,EAAKC,EAAAmO,EAAAjO,CAAA,4CACwBQ,EAAA,IAAAkO,EAAA,QAAA/O,KAAO,+JAWvCA,EAAM,CAAA,EAAC,QAAQ,WAAU,0BAEvBkG,EAAAC,GAAAnG,KAAQ,UAAU,EAAe,MAAAoG,EAAApG,GAAAA,KAAU,mBAAhD,OAAIyE,GAAA,EAAA,gMAHNvE,EAEKC,EAAAC,EAAAC,CAAA,wGADAL,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAAuD,EAAAC,CAAA,QAEvB4B,EAAAC,GAAAnG,KAAQ,UAAU,sFAAvB,OAAIyE,GAAA,oLACyB,QAAAzE,KAAO,2IAAPa,EAAA,IAAAmO,EAAA,QAAAhP,KAAO,gKAlC7BuG,EAAAvG,KAAQ,QAAO,mBAQPkN,EAAAlN,KAAQ,SAAQ,8DAbf,WAAAA,KAAQ,6KAsBG,MAAA,CAAA,QAAAA,KAAQ,OAAO,IACnC,IAAAqG,EAAArG,EAAQ,CAAA,EAAA,YAAY,OAAS,GAACC,GAAAD,CAAA,+DAWtC,IAAAsC,EAAAtC,EAAQ,CAAA,EAAA,WAAW,OAAS,GAACyC,GAAAzC,CAAA,+3BAhClCE,EA8BKC,EAAA8O,EAAA5O,CAAA,EA7BDO,EA4BKqO,EAAAjD,CAAA,EA3BDpL,EAEIoL,EAAAkD,CAAA,gBACJtO,EAYKoL,EAAAtJ,CAAA,EAXD9B,EAEK8B,EAAAG,CAAA,qBACLjC,EAOK8B,EAAAC,CAAA,EAND/B,EAEK+B,EAAAK,CAAA,gBACLpC,EAEK+B,EAAAC,CAAA,wCAIbhC,EAAKoL,EAAAmD,CAAA,kDAMLvO,EAAKoL,EAAAoD,CAAA,UACLxO,EAEKoL,EAAA/I,EAAA,yEA9BSpC,EAAA,IAAAwO,EAAA,WAAArP,KAAQ,uBAKjB,CAAAiM,IAAApL,EAAA,IAAA0F,KAAAA,EAAAvG,KAAQ,QAAO,KAAAc,EAAA0F,EAAAD,CAAA,sEAQP,CAAA0F,IAAApL,EAAA,IAAAqM,KAAAA,EAAAlN,KAAQ,SAAQ,KAAAc,EAAAmM,EAAAC,CAAA,0KASJrM,EAAA,IAAA4N,GAAA,QAAAzO,KAAQ,oBAC5BA,EAAQ,CAAA,EAAA,YAAY,OAAS,8LAWrCA,EAAQ,CAAA,EAAA,WAAW,OAAS,qjBA7ClB,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,oHAEXC,EAAA,EAAGoM,EACCjG,EAAQ,OAAO,IAAMjG,EAAO,OACtBiG,EAAQ,WAAW,OAAQhF,GAAMA,EAAE,MAAQ,IAAI,EAAE,OAAS,EAC1DgF,EAAQ,WAAW,OACdhF,GAAO,CAAA,KAAM,IAAI,EAAE,SAASA,EAAE,IAAI,GAAKA,EAAE,IAAMjB,EAAO,QACzD,OAAS,CAAA,gJCPL,MAAAmO,EAAA,MAAM,KAAKC,EAAW,CAAA,EAAA,OAAM,GAAI,OAAM,YAAAC,EAAA,4HAIzCxP,EAAM,CAAA,EAAC,QAAQA,EAAI,CAAA,CAAA,EAAA,qCAGbA,EAAK,CAAA,CAAA,EAAU,MAAAoG,EAAApG,GAAAA,MAAK,mBAAzB,OAAIyE,GAAA,EAAA,0FAHgB,GAC1B,kPAHJvE,EAuCKC,EAAAyC,EAAAvC,CAAA,EAtCDO,EAEKgC,EAAAC,CAAA,uBACLjC,EAkCKgC,EAAAI,CAAA,yFApCAhD,EAAM,CAAA,EAAC,QAAQA,EAAI,CAAA,CAAA,EAAA,KAAAc,EAAAuD,EAAAC,CAAA,cAGbtE,EAAK,CAAA,CAAA,8EAAV,OAAIyE,GAAA,obAcqBzE,EAAM,CAAA,EAAC,QAAQ,oBAAoB,UAH9CE,EAMKC,EAAAC,EAAAC,CAAA,EADDO,EAAqCR,EAAAqE,CAAA,sBAF9BzE,EAAM,CAAA,EAAC,QAAQ,yUAO7BuG,EAAAvG,MAAK,SAAQ,gEAbT,OAAAA,MAAK,QAAO,wWAkBVA,EAAM,CAAA,EAAC,QAAQ,MAAM,wIArBX2L,EAAA/I,EAAA,eAAA,CAAA5C,MAAK,OAAO,uBAJrCE,EA8BKC,EAAAyC,EAAAvC,CAAA,EAxBDO,EAYKgC,EAAAC,CAAA,wBACLjC,EAEKgC,EAAAI,CAAA,gBACLpC,EAOQgC,EAAAL,CAAA,EADJ3B,EAA8B2B,EAAAkC,CAAA,qBATFuG,GAAAC,EAAAC,GAAA,KAAA,KAAAlI,EAAAhD,MAAK,QAAQ,CAAA,iBAjB/BgL,GAAAyE,EAAAvE,GAAA,KAAA,KAAAtI,EAAA5C,MAAK,QAAQ,CAAA,2JAkBtB,CAAAiM,GAAApL,EAAA,IAAA0F,KAAAA,EAAAvG,MAAK,SAAQ,KAAAc,EAAA0F,EAAAD,CAAA,EADc0E,GAAAzI,GAAAyI,EAAA,MAAA,GAAApK,EAAA,GAAAoK,EAAA,OAAA,KAAA,KAAAjL,MAAK,QAAQ,mBAMlCA,EAAM,CAAA,EAAC,QAAQ,yBAvBZyP,GAAAjN,GAAAiN,EAAA,MAAA,GAAA5O,EAAA,GAAA4O,EAAA,OAAA,KAAA,KAAAzP,MAAK,QAAQ,aAEN2L,EAAA/I,EAAA,eAAA,CAAA5C,MAAK,OAAO,qMAXhDuE,EAAAvE,KAAM,QAAMyC,GAAAzC,CAAA,uEAAZA,KAAM,2MAFR,OAAO,OAAOF,EAAa,CAAA,uBAAhC,OAAI2E,GAAA,+MAAC,OAAO,OAAO3E,EAAa,CAAA,oBAAhC,OAAI2E,GAAA,EAAA,oHAAJ,OAAIA,EAAAmK,EAAA,OAAAnK,GAAA,0CAAJ,OAAIA,GAAA,wMALS,GAAA,CAAA,MAAA1D,CAAA,EAAAC,MACA,GAAA,CAAA,WAAA6N,CAAA,EAAA7N,EACA,CAAA,SAAA0O,CAAA,EAAA1O,EAsC6B,MAAA2D,EAAAmG,GAAA4E,EAAS5E,CAAI,EAlCGtG,EAAA,CAAAsK,EAAAhE,IAASA,EAAK,MAAQgE,4TCKbvI,EAAAvG,KAAQ,UAAS,0GAAtEE,EAAmDC,EAAAsE,EAAApE,CAAA,4BAAEQ,EAAA,GAAA0F,KAAAA,EAAAvG,KAAQ,UAAS,KAAAc,EAAA0F,EAAAD,CAAA,uDAFnBvG,EAAM,CAAA,EAAC,QAAQ,WAAU,wGAA5EE,EAAiDC,EAAAsE,EAAApE,CAAA,wCAAEL,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAA0F,EAAAD,CAAA,oEAoBzEL,EAAAC,GAAAnG,KAAQ,MAAM,EAAW,MAAAoG,EAAApG,GAAAA,KAAM,mBAApC,OAAIyE,GAAA,EAAA,iLADVvE,EAIKC,EAAAC,EAAAC,CAAA,sEAHM6F,EAAAC,GAAAnG,KAAQ,MAAM,8EAAnB,OAAIyE,GAAA,6dArBD,OAAAzE,KAAO,WAAUC,wBAmBzBqC,EAAAtC,KAAQ,QAAMyC,GAAAzC,CAAA,8KArBJQ,EAAAqC,EAAA,QAAA8M,EAAA3P,KAAQ,QAAQ,EAiBTQ,EAAAiE,EAAA,QAAAmL,EAAA,OAAA5P,KAAQ,QAAU,uBAAyB,YAAW,oGALtDQ,EAAA+B,EAAA,eAAAsC,EAAA7E,KAAQ,OAAO,EACnBuC,EAAA,SAAAmI,EAAA1K,KAAQ,QACXQ,EAAA+B,EAAA,QAAAoI,EAAA3K,KAAQ,QAAUA,EAAM,CAAA,EAAC,QAAQ,gBAAkBA,EAAM,CAAA,EAAC,QAAQ,aAAa,sJAlBlGE,EAgCKC,EAAAyC,EAAAvC,CAAA,EA/BDO,EAsBKgC,EAAAI,CAAA,EArBDpC,EASKoC,EAAAH,CAAA,qBACLjC,EAUQoC,EAAAT,CAAA,EADJ3B,EAAwE2B,EAAAkC,CAAA,sIAjBjE,CAAAwH,GAAApL,EAAA,GAAA8O,KAAAA,EAAA3P,KAAQ,4BAiBD,CAAAiM,GAAApL,EAAA,GAAA+O,KAAAA,EAAA,OAAA5P,KAAQ,QAAU,uBAAyB,gCAL3C,CAAAiM,GAAApL,EAAA,GAAAgE,KAAAA,EAAA7E,KAAQ,kCACZ,CAAAiM,GAAApL,EAAA,GAAA6J,KAAAA,EAAA1K,KAAQ,2BACX,CAAAiM,GAAApL,EAAA,GAAA8J,KAAAA,EAAA3K,KAAQ,QAAUA,EAAM,CAAA,EAAC,QAAQ,gBAAkBA,EAAM,CAAA,EAAC,QAAQ,gCAO5EA,KAAQ,kRA7BF,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,cAsBaD,EAAM,WAAY,CAAAqG,EAAQ,EAAE,EAAA,CAAIA,EAAQ,OAAO,mLC+N3E,IAAIyI,GAEJ,MAAMC,OAAyB,IAAI,CAC/B,cACA,aACA,iBACA,kBACA,cACA,eACA,YACA,aACA,eACA,kBACJ,CAAC,EAQM,SAASC,GAAaC,EAAuD,CAChF,IAAIC,EAAY,GAEhB,MAAMpR,EAAQ,SAAY,CAChB,MAAAqR,EAAO,MAAMpD,GAAqB,WAAW,EAC7CqD,EAAeH,EAChB,OAAQI,GAAY,CAACH,GAAa,CAACH,GAAmB,IAAIM,EAAQ,UAAU,CAAC,EAC7E,IAAI,CAAC,CAAE,WAAAC,EAAY,GAAGb,MAAY,CAC/B,WAAY,cAAca,CAAU,GACpC,KAAAb,CAAA,EACF,EAEN,IAAIc,EAAuB,CAAC,EAExB,GAAAH,EAAa,OAAS,EAClB,GAAA,CACAG,EAAY,MAAM,QAAQ,IAAIJ,EAAK,KAAKC,CAAY,CAAC,QAChDI,EAAO,CACZ,MAAM,OAAOA,GAAS,SAAW,CAAE,QAASA,CAAU,EAAAA,CAAA,CAI9D,OAAON,EAAY,KAAOK,CAC9B,EAEA,OAAAT,IAAA,MAAAA,GAAa,SAECA,GAAA,CAEV,QAASA,GAAcA,GAAY,QAAQ,KAAKhR,EAAOA,CAAK,EAAIA,EAAM,EACtE,OAAQ,IAAM,CACEoR,EAAA,EAAA,CAEpB,EAEOJ,GAAY,OACvB,uDChH4C,MAAAP,GAAAtL,EAAAuL,KAAW,IAAIA,EAAK,EAAA,EAAA,EAAE,IAAtB,YAAAvL,EAAyB,+HAlBvB,MAAAsL,EAAAC,MAAM,MAAK,YAAAC,EAAA,sLAtCxBlL,EAAAtE,MAAK,KAAI,gEADCwQ,EAAA,QAAAC,EAAAzQ,MAAK,wCAApBE,EAEQC,EAAAqQ,EAAAnQ,CAAA,4BADHQ,EAAA,CAAA,EAAA,IAAAyD,KAAAA,EAAAtE,MAAK,KAAI,KAAAc,EAAAuD,EAAAC,CAAA,EADCzD,EAAA,CAAA,EAAA,IAAA4P,KAAAA,EAAAzQ,MAAK,+FAeb0Q,EAAAvK,GAAAnG,KAAO,aAAW,EAAA,EAAiB,MAAAoG,EAAApG,GAAAA,MAAM,mBAA9C,OAAIyE,GAAA,EAAA,uLAJKkM,EAAA,SAAAC,GAAA5Q,EAAO,CAAA,EAAA,aAAmB,IAAA,QAAU,EACnCA,EAAO,CAAA,IAAA,QAAA6Q,GAAA,IAAA7Q,EAAA,EAAA,EAAA,KAAA2Q,CAAA,CAAA,uDAL3BzQ,EAcKC,EAAAC,EAAAC,CAAA,EAbDO,EAYQR,EAAAuQ,CAAA,wDARQ3Q,EAAO,CAAA,EAAA,EAAA,0EAGZ0Q,EAAAvK,GAAAnG,KAAO,aAAW,CAAA,CAAA,uCAJda,EAAA,CAAA,EAAA,IAAA+P,KAAAA,GAAA5Q,EAAO,CAAA,EAAA,aAAmB,CAAA,GAAA,QAAU,iCACnCA,EAAO,CAAA,CAAA,yFAKVsE,EAAAtE,MAAM,KAAI,gEADAwQ,EAAA,QAAAC,EAAAzQ,MAAM,qEAArBE,EAEQC,EAAAqQ,EAAAnQ,CAAA,4BADHQ,EAAA,CAAA,EAAA,IAAAyD,KAAAA,EAAAtE,MAAM,KAAI,KAAAc,EAAAuD,EAAAC,CAAA,EADAzD,EAAA,CAAA,EAAA,IAAA4P,KAAAA,EAAAzQ,MAAM,oFAmBxBA,EAAM,CAAA,EAAC,QAAQ,SAAQ,iFAGjB,OAAO,OAAOF,EAAa,CAAA,uBAAhC,OAAI2E,GAAA,8BAkBXzE,EAAK,EAAA,CAAA,EAAU,MAAAoG,EAAApG,GAAAA,MAAK,mBAAzB,OAAIyE,GAAA,EAAA,gcA3BNvE,EA0BKC,EAAAuC,EAAArC,CAAA,EAzBDO,EAEK8B,EAAAG,CAAA,qBACLjC,EAqBK8B,EAAAC,CAAA,EApBD/B,EAEK+B,EAAAK,CAAA,gBACLpC,EAgBK+B,EAAAC,CAAA,kJAnBgC5C,EAAM,CAAA,EAAC,QAAQ,QAAQ,CAAA,yCACvDA,EAAM,CAAA,EAAC,QAAQ,SAAQ,KAAAc,EAAA0F,EAAAD,CAAA,+CADSvG,EAAM,CAAA,EAAC,QAAQ,QAAQ,kBAIjD,OAAO,OAAOF,EAAa,CAAA,oBAAhC,OAAI2E,GAAA,EAAA,mHAAJ,wBAkBPzE,EAAK,EAAA,CAAA,yGAAV,OAAIyE,GAAA,2NA9BDzE,EAAK,EAAA,CAAA,qDADVE,EAEKC,EAAAC,EAAAC,CAAA,gCADAL,EAAK,EAAA,CAAA,iDAwBWA,EAAM,CAAA,EAAC,QAAQA,EAAI,EAAA,CAAA,EAAA,qLAHNA,EAAG,EAAA,CAAA,oBAFEA,EAAG,EAAA,CAAA,uBACAA,EAAG,EAAA,CAAA,UAJ7BE,EASQC,EAAAoC,EAAAlC,CAAA,uEADHL,EAAM,CAAA,EAAC,QAAQA,EAAI,EAAA,CAAA,EAAA,KAAAc,EAAAuD,EAAAC,CAAA,oBAHNtE,EAAG,EAAA,uDAFEA,EAAG,EAAA,CAAA,kCACAA,EAAG,EAAA,CAAA,kDA+BpBA,EAAM,CAAA,EAAC,QAAQA,EAAI,EAAA,CAAA,EAAA,sKAJNQ,EAAA+B,EAAA,eAAAuO,EAAA9Q,OAAiBA,EAAI,EAAA,CAAA,EAFhB2L,EAAApJ,EAAA,cAAAvC,OAAiBA,EAAI,EAAA,CAAA,EACnB2L,EAAApJ,EAAA,gBAAAvC,OAAiBA,EAAI,EAAA,CAAA,UAJ9CE,EAUQC,EAAAoC,EAAAlC,CAAA,uEADHL,EAAM,CAAA,EAAC,QAAQA,EAAI,EAAA,CAAA,EAAA,KAAAc,EAAAuD,EAAAC,CAAA,EAJNzD,EAAA,CAAA,EAAA,MAAAiQ,KAAAA,EAAA9Q,OAAiBA,EAAI,EAAA,qCAFhB2L,EAAApJ,EAAA,cAAAvC,OAAiBA,EAAI,EAAA,CAAA,aACnB2L,EAAApJ,EAAA,gBAAAvC,OAAiBA,EAAI,EAAA,CAAA,4DARjDuG,EAAAvG,MAAK,SAAQ,qDAGP,OAAO,OAAOF,EAAa,CAAA,uBAAhC,OAAI2E,GAAA,mZATlBvE,EAwBKC,EAAAuC,EAAArC,CAAA,EAvBDO,EAEK8B,EAAAG,CAAA,qBACLjC,EAmBK8B,EAAAC,CAAA,EAlBD/B,EAEK+B,EAAAK,CAAA,gBACLpC,EAcK+B,EAAAC,CAAA,8HAhBA,CAAAqJ,GAAApL,EAAA,CAAA,EAAA,OAAA0F,KAAAA,EAAAvG,MAAK,SAAQ,KAAAc,EAAA0F,EAAAD,CAAA,kBAGP,OAAO,OAAOzG,EAAa,CAAA,oBAAhC,OAAI2E,GAAA,EAAA,mHAAJ,qIArESzE,EAAM,CAAA,EAAC,QAAQ,SAAQ,kCACnC+Q,EAAA5K,GAAAnG,KAAO,YAAU,EAAA,EAAgB,MAAAoG,EAAApG,GAAAA,MAAK,mBAA3C,OAAIyE,GAAA,EAAA,8CAOR,IAAA4B,GAAArG,EAAO,CAAA,EAAA,aAAmB,CAAA,GAAA,OAAS,GAACC,GAAAD,CAAA,8CAkBzCA,EAAK,EAAA,EAAA,oLA1BiB,+FAHHA,EAAM,CAAA,IAAA,QAAA6Q,GAAA,IAAA7Q,EAAA,EAAA,EAAA,KAAA2Q,CAAA,CAAA,2NAPlB3Q,EAAQ,CAAA,CAAA,UAFxBE,EAmGKC,EAAAyC,EAAAvC,CAAA,EA9FDO,EAgCKgC,EAAAI,CAAA,EA/BDpC,EAaKoC,EAAAH,CAAA,EAZDjC,EAWQiC,EAAA8N,CAAA,EANJ/P,EAAmD+P,EAAAH,CAAA,+DAHvCxQ,EAAM,CAAA,EAAA,EAAA,uIAGCA,EAAM,CAAA,EAAC,QAAQ,SAAQ,KAAAc,EAAAuD,EAAAC,CAAA,YACnCyM,EAAA5K,GAAAnG,KAAO,YAAU,CAAA,CAAA,qDAJZA,EAAM,CAAA,CAAA,GAWpBA,EAAO,CAAA,EAAA,aAAmB,CAAA,GAAA,OAAS,2NAlBjCA,EAAQ,CAAA,CAAA,gNAZNA,EAAM,CAAA,EAAC,QAAQ,4BAClBA,EAAO,CAAA,EAAG,sBAAwB,yBACjCA,EAAI,CAAA,EAAG,WAAaA,EAAQ,CAAA,EAAG,cAAgB,+BAC/CA,EAAM,CAAA,EAAC,QAAQ,+BACbA,EAAiB,EAAA,EACzB,QAAA,CAAAA,KAAW,aACZA,EAAW,EAAA,SACZA,EAAU,EAAA,+DARFA,EAAI,CAAA,IAAA,qBAAJA,EAAI,CAAA,qLAJ5BE,EAoHKC,EAAAC,EAAAC,CAAA,mEA/GqBL,EAAM,CAAA,EAAC,QAAQ,0CAClBA,EAAO,CAAA,EAAG,sBAAwB,uCACjCA,EAAI,CAAA,EAAG,WAAaA,EAAQ,CAAA,EAAG,cAAgB,4CAC/CA,EAAM,CAAA,EAAC,QAAQ,eAErBa,EAAA,CAAA,EAAA,IAAAmQ,EAAA,QAAA,CAAAhR,KAAW,uFANLA,EAAI,CAAA,kIAhGlBiR,GAAQ,mGAJH,GAAA,CAAA,MAAAlQ,CAAA,EAAAC,MACA,GAAA,CAAA,WAAA6N,CAAA,EAAA7N,EACA,CAAA,SAAAkQ,CAAA,EAAAlQ,EAIPyF,EAAW,GACX4E,EAAO,GACP8F,EACAC,EAAU,GACVC,EACAxG,EAAA,CAAA,EACA0F,EAAQ,GACRe,EAAS,EACTC,EAAU,EAQR,MAAAC,EAAA,SAAA,CACE/K,OACA4E,EAAO,EAAA,MACP5E,EAAW,EAAA,EACX,OAAO,aAAa4K,CAAS,IAE7BI,EAAO,EAAK,EACZN,EAAS,MAAA,IAIXM,EAAgB,MAAAC,GAAA,OACZ,MAAAC,GAAQxQ,EAAO,SAAS,gBAK1B,OAHJiQ,EAAU,EAAA,EACV,OAAO,aAAaC,CAAS,GAEzBnQ,GAAA,YAAAA,EAAQ,YAAarB,GAAU,IAAO,GAAAmE,EAAA7C,EAAO,cAAP,MAAA6C,EAAoB,QAAA,KAC1DoN,EAAU,EAAA,MACV3K,EAAW,EAAA,EACXxF,EAAA,GAAAsP,EAAQpP,EAAO,QAAQ,aAAA,SAI3BkQ,EAAY,OAAO,qBAEL,MAAAjB,EAAA,CACF,WAAY,eACZ,MAAA,CACI,UAAUlP,GAAA,YAAAA,EAAQ,KAAM,EACxB,SAAUmK,EACV,OAAAiG,EACA,QAAAC,GAEJ,MAAOI,GAAQ,GAEf,IAAArB,MAEAA,EAAA,MAAkBP,IAAcK,CAAO,CAAA,CAClCG,OAAAA,EAAAA,CACLxP,EAAM,SAASwP,CAAqB,SAGpCD,GAAa,OAGjBrP,EAAA,GAAA4J,EAAQyF,EAAU,IAAA,CAAA,EACbzF,EAAM,OAEAA,EAAM,OAAS8G,GACtB1Q,EAAA,GAAAsP,EAAQpP,EAAO,QAAQ,iBAAA,OAEvBoP,EAAQ,EAAA,EAJRtP,EAAA,GAAAsP,EAAQpP,EAAO,QAAQ,YAAA,OAM3B0J,EAAQA,EAAM,MAAM,EAAG8G,EAAK,CAAA,MAC5BP,EAAU,EAAA,MACV3K,EAAW,EAAA,IAEfiL,EAAWT,GAAQ,IAIrBW,EAAA,IAAA,KACFvG,EAAO,EAAA,MACP5E,EAAW,EAAA,GAGToL,EAAA,IAAA,CACGpL,GACDgL,EAAO,EAAK,gBA6BYH,EAAMQ,GAAA,IAAA,gBACD,MAAAC,EAAA,IAAAN,EAAO,EAAK,eAgBbF,EAAOO,GAAA,IAAA,gBACF,MAAAE,EAAA,IAAAP,EAAO,EAAK,EAmCL9M,EAAA,CAAAsN,EAAAnD,KAAAoC,EAASrG,EAAOoH,EAAM,KAAOnD,EAAI,OARhDhE,KAAS,OAAA,QAAA9G,EAAA6K,EAAW,IAAI/D,GAAK,EAAE,IAAtB,YAAA9G,EAAyB,OAAQ8K,gBAmCnCoC,EAAQ,CAAEpG,CAAI,EAAGoH,IAAiBpD,EAAO,KAAOA,CAAI,EA3FzE7F,GAAA,IAAAwI,EAAO,EAAI,4CAXfN,EAAQpN,0BAEHsH,EAAI8G,uLApFrBjR,GAAS8C,EAAA7C,EAAO,UAAP,YAAA6C,EAAgB,0BAC5B/C,EAAA,EAAGqQ,GAASrN,GAAA9C,EAAO,aAAP,MAAA8C,GAAmB,KAAMmO,GAASA,EAAK,IAAMd,GAAUA,EAAS,CAAA,oBAC5ErQ,EAAA,EAAGsQ,GAAUpN,EAAAhD,EAAO,cAAP,MAAAgD,EAAoB,KAAMkO,GAAUA,EAAM,IAAMd,GACvDA,IACAe,GAAAlO,EAAAjD,EAAO,cAAP,YAAAiD,EAAqB,KAArB,YAAAkO,EAAyB,KAAM,CAAA,sMCtBpCtS,EAAM,CAAA,EAAC,QAAQ,KAAI,uOAJbA,EAAM,CAAA,EAAC,QAAQ,IAAI,UAH9BE,EAQQC,EAAAoC,EAAAlC,CAAA,EAFJO,EAA4B2B,EAAAkC,CAAA,oEAC3BzE,EAAM,CAAA,EAAC,QAAQ,KAAI,KAAAc,EAAA0F,EAAAD,CAAA,cAJbvG,EAAM,CAAA,EAAC,QAAQ,oJANX,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAOK,MAAA2D,EAAA,IAAA5D,EAAM,YAAW,4OC+LxBf,EAAM,CAAA,EAAC,QAAQ,uBAAsB,wIAF1CE,EAGKC,EAAAC,EAAAC,CAAA,EAFDO,EAA0CR,EAAAqE,CAAA,sCACzCzE,EAAM,CAAA,EAAC,QAAQ,uBAAsB,KAAAc,EAAA0F,EAAAD,CAAA,6CAWrC7F,GACGV,EAAM,CAAA,EAAC,QAAQ,uBACfA,EAAM,CAAA,EAAC,SAAS,aAAa,EAAA,wIAJrCE,EAMKC,EAAAC,EAAAC,CAAA,EALDO,EAA0CR,EAAAqE,CAAA,sCACzC/D,GACGV,EAAM,CAAA,EAAC,QAAQ,uBACfA,EAAM,CAAA,EAAC,SAAS,aAAa,EAAA,KAAAc,EAAA0F,EAAAD,CAAA,6CAPhCvG,EAAM,CAAA,EAAC,QAAQ,qBAAoB,wIAFxCE,EAGKC,EAAAC,EAAAC,CAAA,EAFDO,EAA0CR,EAAAqE,CAAA,sCACzCzE,EAAM,CAAA,EAAC,QAAQ,qBAAoB,KAAAc,EAAA0F,EAAAD,CAAA,6CAcnCvG,EAAM,CAAA,EAAC,QAAQ,kBAAiB,wIAFrCE,EAGKC,EAAAC,EAAAC,CAAA,EAFDO,EAA0CR,EAAAqE,CAAA,sCACzCzE,EAAM,CAAA,EAAC,QAAQ,kBAAiB,KAAAc,EAAA0F,EAAAD,CAAA,yCAiBpCvG,EAAM,CAAA,EAAC,QAAQ,WAAU,yBAEvBkG,EAAAC,GAAAnG,KAAQ,UAAU,EAAe,MAAAoG,EAAApG,GAAAA,MAAU,mBAAhD,OAAIyE,GAAA,EAAA,gMAHNvE,EAEKC,EAAAC,EAAAC,CAAA,0GADAL,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAAuD,EAAAC,CAAA,UAEvB4B,EAAAC,GAAAnG,KAAQ,UAAU,sFAAvB,OAAIyE,GAAA,oLACyB,QAAAzE,KAAO,4IAAPa,EAAA,MAAAmO,EAAA,QAAAhP,KAAO,mMAlD3BuS,EAAAvS,KAAK,WAAU,OAIfwS,EAAAxS,KAAK,gBAAe,KAG1ByS,EAAA,MAAM,KAAKzS,EAAW,CAAA,EAAA,UAAU,KAAIwE,EAAA,QAoBnC2G,EAAA,CAAAnL,KAAQ,KAAI,YAYTA,EAAM,CAAA,EAAC,QAAQ,KAAI,mCArFV,MAAA,CAAA,WAAAA,KAAK,UAAU,iEAaX,SAAAA,KAAO,SACR,QAAAA,KAAO,QACP,QAAAA,KAAO,cACTA,EAAM,CAAA,EAAC,QAAQ,gBACZA,EAAQ,CAAA,WACR,GACA,SAAAA,EAAQ,CAAA,EAAA,WAAW,OAAS,WAC5BA,EAAkB,CAAA,0DAIoBA,EAAqB,CAAA,0DAG7BA,EAAqB,EAAA,0CAgCpEA,EAAU,CAAA,EAAC,MAAQ,EAAC,OAAAqC,GAKf,GAAArC,KAAW,KAAOA,EAAO,CAAA,EAAA,SAAS,cAAa,OAAAsG,wEA2BxD,IAAAoM,GAAA1S,EAAQ,CAAA,EAAA,WAAW,OAAS,GAACyC,GAAAzC,CAAA,0nBAxDTA,EAAM,CAAA,EAAC,QAAQ,OAAO,qBACvBA,EAAM,CAAA,EAAC,QAAQ,OAAO,mDAFf2L,EAAA1G,EAAA,aAAA,CAAAjF,KAAQ,MAAI,oMAiDxBA,EAAM,CAAA,EAAC,QAAQ,IAAI,mGA5EtB2L,EAAAgH,EAAA,OAAA3S,EAAO,CAAA,EAAA,cAAgBD,GAAa,EAAE,+BALtDG,EAAyCC,EAAAmO,EAAAjO,EAAA,YACzCH,EAsFMC,EAAAwS,EAAAtS,EAAA,qBA/EFO,EAgBK+R,EAAA/P,CAAA,EAfDhC,EAWKgC,EAAAC,CAAA,qBACLjC,EAEKgC,EAAAI,CAAA,wCAITpC,EAaK+R,EAAAhQ,CAAA,EAZD/B,EAWC+B,EAAAsC,CAAA,OAFejF,EAAO,CAAA,CAAA,SAK3BY,EAGK+R,EAAAjQ,CAAA,uBACL9B,EAGK+R,EAAA1P,CAAA,kGA4BLrC,EASK+R,EAAA3G,CAAA,EARDpL,EAMQoL,EAAAzJ,EAAA,mKAjFcvC,EAAY,EAAA,CAAA,CAAA,iCALpBa,GAAA,IAAAwO,GAAA,WAAArP,KAAK,wGAaDa,GAAA,MAAA+R,GAAA,SAAA5S,KAAO,UACRa,GAAA,MAAA+R,GAAA,QAAA5S,KAAO,SACPa,GAAA,MAAA+R,GAAA,QAAA5S,KAAO,2BACTA,EAAM,CAAA,EAAC,QAAQ,4BACZA,EAAQ,CAAA,GAERa,GAAA,IAAA+R,GAAA,SAAA5S,EAAQ,CAAA,EAAA,WAAW,OAAS,qLAgB7BA,EAAM,CAAA,EAAC,QAAQ,qDAChBA,EAAM,CAAA,EAAC,QAAQ,gDAGfA,EAAO,CAAA,QAAPA,EAAO,CAAA,CAAA,gBALA2L,EAAA1G,EAAA,aAAA,CAAAjF,KAAQ,MAAI,GAY5B,CAAAiM,IAAApL,GAAA,IAAA0R,KAAAA,EAAAvS,KAAK,WAAU,MAAA0C,EAAA,UAAA6P,IAIf,CAAAtG,IAAApL,GAAA,IAAA2R,KAAAA,EAAAxS,KAAK,gBAAe,MAAAiD,EAAA,UAAAuP,GAG1B3R,GAAA,KAAA4R,EAAA,MAAM,KAAKzS,EAAW,CAAA,EAAA,UAAU,KAAIwE,EAAA,wJAoBnC3D,GAAA,KAAAsK,EAAA,CAAAnL,KAAQ,KAAI,4FAYTA,EAAM,CAAA,EAAC,QAAQ,KAAI,KAAAc,EAAA+R,EAAAC,CAAA,uBAFb9S,EAAM,CAAA,EAAC,QAAQ,oFA5ElB2L,EAAAgH,EAAA,OAAA3S,EAAO,CAAA,EAAA,cAAgBD,GAAa,EAAE,EAoFjDC,EAAQ,CAAA,EAAA,WAAW,OAAS,giBAtCc8K,GAAI,CAAMA,EAAK,2GAhL/C,GAAA,CAAA,MAAA/J,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,EACA,CAAA,KAAA+D,CAAA,EAAA/D,EAEP+R,EAMJpP,GAAA,IAAA,CACIoP,GAAA,MAAAA,EAAU,iBAAiB,0BAAiC,IAAAC,EAAA,SACtDC,EAA2BC,EAAA,aAG7BD,EAAA,KAIF,MAAAC,EAAA,IAAA,CACE,IAAAC,EACAC,EAEE,MAAAC,EAAA,IAAA,CACFD,GAAA,MAAAA,EAAY,QAAQ,IAAI,wCAAyC,IACjEA,GAAA,MAAAA,EAAY,OACZJ,EAAA,GAGEM,EAAqBxP,GAAA,CACnBA,EAAM,SAAW,YACjBuP,EAAA,GAIFE,EAAgBzP,GAAA,CACdA,EAAM,OAAO,IAAmC,6BAAAsD,EAAQ,EAAE,KAC1DgM,GAAA,MAAAA,EAAY,IAAI,QAASC,GACzBD,GAAA,MAAAA,EAAY,IAAI,cAAeE,GAC/BF,EAAatP,EAAM,OACnBA,EAAM,OAAO,GAAG,QAASuP,CAAY,EACrCvP,EAAM,OAAO,GAAG,cAAewP,CAAiB,IAIxD,OAAAxG,GAA6B,oBAAoB,EAAE,KAAY,MAAA0G,GAAA,CAC3DL,EAAA,MAAaK,EAAO,WAAA,EACpBL,EAAK,cAAc,MAAM,QAASM,IAAWF,EAAe,CAAA,OAAAE,EAAA,CAAA,CAAA,EAC5DN,EAAK,cAAc,GAAG,cAAeI,CAAY,SAIjDJ,GAAA,MAAAA,EAAM,cAAc,IAAI,cAAeI,GACvCH,GAAA,MAAAA,EAAY,IAAI,QAASC,GACzBD,GAAA,MAAAA,EAAY,IAAI,cAAeE,KAIjCI,EAAsB9N,GAAA,CACxB3E,EAAA,EAAA0S,EAAW/N,GAAMzE,EAAO,QAAQ,CAAC,EAAE,EAAA,EACnC6R,EAAA,EACAjS,EAAM,aAEKI,EAAO,OACV,SAAUA,EAAO,OAAO,SAAWwS,EAAW,QAElD,KAIFC,EAAA,CAAyB/I,EAA4BiE,IAAA,CACjD,MAAA+E,EAAA,IAAoB,IAAIhF,CAAU,YAC7B/D,KAAQD,EACXiE,EACA+E,EAAc,IAAI/I,EAAK,GAAS,CAAA,GAAAA,EAAM,KAAAgE,EAAM,QAAS,GAAA,EAErD+E,EAAc,OAAO/I,EAAK,EAAE,QAG9BgJ,EAAiB,MAAM,KAAKD,EAAc,OAAA,CAAA,EAChDC,EAAe,MAAMtU,EAAGE,IAAMF,EAAE,UAAU,cAAcE,EAAE,SAAS,CAAA,EACnEuB,EAAA,EAAA4N,EAAA,IAAiB,IAAIiF,EAAe,IAAKC,GAAe,CAAAA,EAAU,GAAIA,CAAS,CAAA,CAAA,CAAA,EAE/Ef,EAAA,GAGEgB,EAAyBlJ,GAAA,CAC3B8I,EAAuB,CAAA9I,CAAI,EAAG,IAAI,GAGhCmJ,EAAA,IAAA,CACFjB,EAAA,EACAjS,EAAM,eAAA,GAGJiS,EAAA,IAAA,WACG,GAAA,CAAAD,SAIC,MAAAmB,EAAA,IAAe,SAASnB,CAAQ,EAEhCoB,EAAA,CACF,SAAAR,EACA,GAAI,MAAM,KAAK9E,EAAW,OAAA,CAAA,EACrB,OAAQ/D,GAASA,EAAK,MAAQ,IAAI,EAClC,IAAKA,GAASA,EAAK,EAAE,EAC1B,GAAI,MAAM,KAAK+D,EAAW,OAAA,CAAA,EACrB,OAAQ/D,GAASA,EAAK,MAAQ,IAAI,EAClC,IAAKA,GAASA,EAAK,EAAE,EAC1B,IAAK,MAAM,KAAK+D,EAAW,OAAA,CAAA,EACtB,OAAQ/D,GAASA,EAAK,MAAQ,KAAK,EACnC,IAAKA,GAASA,EAAK,EAAE,EAC1B,QAAAsJ,EACA,UAASpQ,EAAAkQ,EAAS,IAAI,eAAe,IAA5B,YAAAlQ,EAA+B,aAAc,GACtD,OAAQ,WAASC,EAAAiQ,EAAS,IAAI,iBAAiB,IAA9B,YAAAjQ,EAAiC,aAAc,EAAE,GAAK,EACvE,YAAa,WAASE,EAAA+P,EAAS,IAAI,iBAAiB,IAA9B,YAAA/P,EAAiC,aAAc,EAAE,GAAK,GAGhFpD,EAAM,YAAYoT,EAAM,EAAK,gBA2CbC,EAAO,KAAA,gCACHpB,EAAI,QAIaA,EAAI,4CAxClCD,EAAQhP,uJAzHhB9C,EAAA,EAAA0S,EAAWvM,EAAQ,OAAO,EAAA,gBAC7BnG,EAAA,EAAGmT,EAAUhN,EAAQ,OAAA,gBAClBnG,EAAA,EAAA4N,EAAA,IAAiB,IAAIzH,EAAQ,WAAW,IAAK0D,GAAU,CAAAA,EAAK,GAAIA,CAAI,CAAA,CAAA,CAAA,iNCN1C9K,EAAK,CAAA,EAAA,gFAAtBE,EAA+BC,EAAAqQ,EAAAnQ,CAAA,6BAAdL,EAAK,CAAA,EAAA,KAAAc,EAAA3B,EAAAmB,CAAA,8FARUN,EAAM,CAAA,EAAC,QAAQ,gBAAe,oBAO3DA,EAAM,CAAA,CAAA,uBAAX,OAAIyE,GAAA,8EAP6D,GAAC,oNAIxDzE,EAAQ,CAAA,IAAA,QAAA6Q,GAAA,IAAA7Q,EAAA,CAAA,EAAA,KAAA2Q,CAAA,CAAA,wFANhCzQ,EAcKC,EAAA6C,EAAA3C,CAAA,EAbDO,EAYKoC,EAAAH,CAAA,EAXDjC,EAA+EiC,EAAAyC,CAAA,uBAC/E1E,EASQiC,EAAA8N,CAAA,wDANQ3Q,EAAQ,CAAA,EAAA,EAAA,+EAJgBA,EAAM,CAAA,EAAC,QAAQ,gBAAe,KAAAc,EAAAuD,EAAAC,CAAA,YAO3DtE,EAAM,CAAA,CAAA,oBAAX,OAAIyE,GAAA,EAAA,mHAAJ,kBAHUzE,EAAQ,CAAA,CAAA,4IAjBjB,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAEL,MAAAqT,EAAA,CAAwC,EAAG,GAAI,GAAI,GAAI,GAAG,EAM5D,IAAAtN,EAAmB5F,EAAO,YAAY,qBAStB4F,EAAQ+K,GAAA,IAAA,uBACH,MAAAC,EAAA,IAAAhR,EAAM,gBAAkB,CAAA,QAASgG,EAAQ,oFAdlE9F,EAAA,EAAGqT,EAASD,EAAc,SAASlT,EAAO,YAAY,OAAO,EACvDkT,EACAA,EAAc,OAAA,CAAQlT,EAAO,YAAY,OAAO,GAAG,KAAM,CAAA3B,EAAGE,IAAMF,EAAIE,CAAC,CAAA,4KC8CxCM,EAAM,CAAA,EAAC,QAAQ,OAAM,kCAAvB,GAAC,aAAuB,GAAC,8BAA5CE,EAAkDC,EAAA4C,EAAA1C,CAAA,4CAA7BL,EAAM,CAAA,EAAC,QAAQ,OAAM,KAAAc,EAAA0F,EAAAD,CAAA,mDAF7CA,EAAAvG,KAAU,YAAW,4CACjB,IAAAuE,EAAAvE,KAAU,QAAMyC,GAAAzC,CAAA,8EAdwBQ,EAAAyE,EAAA,KAAAsP,EAAA,2CAAAvU,KAAU,IAAI,6DAGlDiF,EAAA,QAAAuP,EAAAxU,EAAU,CAAA,EAAA,OACbA,EAAU,CAAA,EAAA,QACVA,EAAc,CAAA,EAAA,SAASA,KAAU,IAAI,EACjCiF,EAAA,SAAAwP,EAAAzU,KAAU,OAI0BQ,EAAA8E,EAAA,MAAAoP,EAAA,2CAAA1U,KAAU,IAAI,oGAZpEE,EAoBKC,EAAAC,EAAAC,CAAA,EAnBDO,EASCR,EAAA6E,CAAA,SACDrE,EAQOR,EAAAkF,CAAA,sEAjB0CzE,EAAA,IAAA0T,KAAAA,EAAA,2CAAAvU,KAAU,mBAG9Ca,EAAA,IAAA2T,KAAAA,EAAAxU,EAAU,CAAA,EAAA,OACbA,EAAU,CAAA,EAAA,QACVA,EAAc,CAAA,EAAA,SAASA,KAAU,IAAI,kBACjCa,EAAA,IAAA4T,KAAAA,EAAAzU,KAAU,wBAOnBa,EAAA,IAAA0F,KAAAA,EAAAvG,KAAU,YAAW,KAAAc,EAAA0F,EAAAD,CAAA,EACjBvG,KAAU,iEAJ+Ba,EAAA,IAAA6T,KAAAA,EAAA,2CAAA1U,KAAU,6EAflDA,EAAM,CAAA,EAAC,QAAQ,cAAa,uBAmCrCA,EAAM,CAAA,EAAC,QAAQ,mBAAkB,cAjCnCA,EAAM,CAAA,EAAC,SAAS,iBAAiB,uBAAtC,OAAIyE,GAAA,iRA4BWQ,EAAA,QAAAuP,EAAAxU,EAAc,CAAA,GAAAA,EAAc,CAAA,EAAA,OAAS,eACpCA,EAAa,CAAA,EAAC,QAAU,wJA/B1CE,EAAmDC,EAAAwU,EAAAtU,CAAA,yEAyBnDH,EAYKC,EAAAC,EAAAC,CAAA,EAXDO,EAOCR,EAAA6E,CAAA,SACDrE,EAEOR,EAAAkF,CAAA,2BAJOtF,EAAgB,CAAA,CAAA,gCAhChBA,EAAM,CAAA,EAAC,QAAQ,cAAa,KAAAc,EAAAuD,EAAAC,CAAA,cAEvCtE,EAAM,CAAA,EAAC,SAAS,iBAAiB,oBAAtC,OAAIyE,GAAA,EAAA,2HAAJ,OA4Be5D,EAAA,IAAA2T,KAAAA,EAAAxU,EAAc,CAAA,GAAAA,EAAc,CAAA,EAAA,OAAS,8BACpCA,EAAa,CAAA,EAAC,QAAU,gCAIjCA,EAAM,CAAA,EAAC,QAAQ,mBAAkB,KAAAc,EAAAmM,EAAAC,CAAA,yGAzCnClN,EAAM,CAAA,EAAC,QAAQ,wBACTA,EAAM,CAAA,EAAC,QAAQ,gBAChBA,EAAM,CAAA,EAAC,QAAQ,iBAChBA,EAAa,CAAA,0IAHjBA,EAAM,CAAA,EAAC,QAAQ,kCACTA,EAAM,CAAA,EAAC,QAAQ,0BAChBA,EAAM,CAAA,EAAC,QAAQ,0PA3BhB,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,SAAAuC,CAAA,EAAAvC,EAEP4T,EAAazT,EAAO,YAAY,WAChC0T,EAAgB1T,EAAO,SAAS,kBAC/B,IAAK2T,GAAcA,EAAU,IAAI,EACjC,OAAQlW,GAASuC,EAAO,YAAY,cAAc,SAASvC,CAAI,CAAA,EAE9D,MAAAmW,EAAA,IAAA,CACFxR,EAAA,EACAxC,EAAM,iBAAkB,WAAA6T,EAAY,cAAAC,CAAA,CAAA,GAGlCG,EAAA,IAAA,KACFJ,EAAc,CAAAA,CAAA,GAGZK,EAA0BrW,GAAA,KAC5BiW,EAAgBA,EAAc,SAASjW,CAAI,EACrCiW,EAAc,OAAQK,GAAMA,GAAKtW,CAAI,EACjC,CAAA,GAAAiW,EAAejW,CAAI,CAAA,QAuBLqW,EAAuBH,EAAU,IAAI,kVC9BE9U,EAAM,CAAA,EAAC,QAAQ,IAAI,gKAJxEA,EAAO,CAAA,CAAA,iDAETA,EAAM,CAAA,EAAC,QAAQ,IAAI,UARnCE,EAWQC,EAAAoC,EAAAlC,CAAA,EADJO,EAAyF2B,EAAAkC,CAAA,wBAAtBzE,EAAM,CAAA,EAAC,QAAQ,8CAJpEA,EAAO,CAAA,CAAA,cAETA,EAAM,CAAA,EAAC,QAAQ,gJAZhB,GAAA,CAAA,MAAAe,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAoG,CAAA,EAAApG,4MCoCFhB,EAAM,CAAA,EAAC,QAAQ,WAAU,mBAezBA,EAAM,CAAA,EAAC,QAAQ,SAAQ,mBAcvBA,EAAM,CAAA,EAAC,QAAQ,WAAU,gCA0BrBA,EAAM,CAAA,EAAC,QAAQ,iBAAgB,mBAY/BA,EAAM,CAAA,EAAC,QAAQ,qBAAoB,cASvCA,EAAM,CAAA,EAAC,QAAQ,OAAM,0DA9CQA,EAAM,CAAA,EAAC,QAAQ,kjCAOpCA,EAAK,CAAA,CAAA,UACHA,EAAO,CAAA,gtBAzC9BE,EAkFKC,GAAAgV,EAAA9U,EAAA,EAjFDO,EAcKuU,EAAAnS,CAAA,EAbDpC,EAEOoC,EAAAgC,CAAA,gBACPpE,EASKoC,EAAAH,CAAA,EARDjC,EAOCiC,EAAAuS,CAAA,OAHepV,EAAU,CAAA,CAAA,kBAMlCY,EAaKuU,EAAAxS,CAAA,EAZD/B,EAEO+B,EAAAuC,CAAA,gBACPtE,EAQK+B,EAAAC,CAAA,EAPDhC,EAMCgC,EAAAyS,CAAA,OAFerV,EAAa,CAAA,CAAA,SAKrCY,EAgBKuU,EAAAlS,CAAA,EAfDrC,EAGOqC,EAAAqS,CAAA,mCACP1U,EAUKqC,EAAAP,CAAA,EATD9B,EAQC8B,EAAA6S,CAAA,SAIT3U,EAiCKuU,EAAAK,CAAA,EAhCD5U,EAWK4U,EAAAxJ,EAAA,EAVDpL,EAMCoL,GAAAyJ,EAAA,aAFiBzV,EAAM,CAAA,UAGxBY,EAEOoL,GAAA0J,EAAA,kBAEX9U,EAWK4U,EAAAvG,CAAA,EAVDrO,EAMCqO,EAAA0G,CAAA,YAFiB3V,EAAa,CAAA,SAG/BY,EAEOqO,EAAA2G,CAAA,iBAEXhV,EAOQ4U,EAAAjT,EAAA,yDApEUvC,EAAc,EAAA,CAAA,iCAcdA,EAAc,EAAA,CAAA,cAgBdA,EAAa,EAAA,CAAA,cACbA,EAAc,EAAA,CAAA,oCAYdA,EAAc,EAAA,CAAA,kCAYdA,EAAc,EAAA,CAAA,0BASlBwC,GAAAxC,OAAAA,EAAQ,CAAA,EAAA,MAAA,KAAA,SAAA,iBACRA,EAAc,EAAA,CAAA,iDA1EvBA,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAAuD,EAAAC,CAAA,kBAOVtE,EAAU,CAAA,QAAVA,EAAU,CAAA,CAAA,wBAQzBA,EAAM,CAAA,EAAC,QAAQ,SAAQ,KAAAc,EAAAmH,EAAAC,CAAA,kBAORlI,EAAa,CAAA,QAAbA,EAAa,CAAA,CAAA,wBAO5BA,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAAqE,EAAAC,CAAA,sDACIpF,EAAM,CAAA,EAAC,QAAQ,kDAQlCA,EAAO,CAAA,qBAaAA,EAAM,CAAA,yBAInBA,EAAM,CAAA,EAAC,QAAQ,iBAAgB,KAAAc,EAAA+U,GAAAC,CAAA,mBAQlB9V,EAAa,CAAA,2BAI1BA,EAAM,CAAA,EAAC,QAAQ,qBAAoB,KAAAc,EAAAiV,EAAAC,EAAA,0BASvChW,EAAM,CAAA,EAAC,QAAQ,OAAM,KAAAc,EAAAmV,GAAAC,EAAA,yNA9GnB,GAAA,CAAA,MAAAnV,CAAA,EAAAC,UACA,WAAAmV,EAAa,EAAA,EAAAnV,GACb,cAAAoV,EAAgB,EAAA,EAAApV,GAChB,OAAAqH,EAAS,EAAA,EAAArH,GACT,cAAAqV,EAAgB,EAAA,EAAArV,GAChB,QAAAsV,EAAU,CAAA,EAAAtV,EACV,CAAA,SAAAuE,CAAA,EAAAvE,EACA,CAAA,SAAAuC,CAAA,EAAAvC,EAEK,SAAAuV,GAAA,CACZC,EAAW,MAAA,EAGX,IAAAA,EACAC,EAAQC,GAAkB,KAAK,MAAU,IAAA,OAAO,UAAY,GAAI,CAAA,QAI9DC,EAAiB7S,GAAA,MACnBwS,EAAUM,GAAmB9S,EAAM,OAA4B,KAAK,CAAA,GAGlE+S,EAAkB/S,GAAA,CAChBA,EAAM,KAAO,QACbyB,EAAA,EACOzB,EAAM,KAAO,UACpBP,EAAA,gBAegB4S,EAAU,KAAA,uDACXK,EAAUzS,wBAcTqS,EAAa,KAAA,0BA6BX/N,EAAM,KAAA,4BAYNgO,EAAa,KAAA,sWAjFpCpV,EAAA,EAAA6V,EAAUJ,GAAkBJ,CAAO,CAAA,+WCyF3BtW,EAAQ,CAAA,CAAA,uBAAb,OAAIyE,GAAA,+EAmBDzE,EAAW,CAAA,EAAA,OAAAC,GASL,GAAA,CAAAD,KAAS,OAAM,OAAAqC,gMA7B9BnC,EAkCKC,EAAAC,EAAAC,CAAA,qGAjCML,EAAQ,CAAA,CAAA,oBAAb,OAAIyE,GAAA,EAAA,yGAAJ,OAAIA,EAAAmK,EAAA,OAAAnK,GAAA,+GAAJ,OAAIA,GAAA,uMAEEvE,EAAoCC,EAAAC,EAAAC,CAAA,qDAY3B6H,EAAAlI,MAAQ,UAAS,eAbzBuE,EAAAvE,MAAI,GAACsG,GAAA,2MAYU9F,EAAAqC,EAAA,QAAA8M,EAAA3P,MAAQ,QAAQ,iKAN1BQ,EAAAhB,EAAA,OAAAiB,EAAAqL,GAAQ9L,EAAc,CAAA,EAAAA,MAASA,EAAC,EAAA,CAAA,CAAA,CAAA,EADd2L,EAAAnM,EAAA,mBAAAQ,MAAQ,MAAM,+BAF1CE,EAaGC,EAAAX,EAAAa,CAAA,qBANCO,EAKKpB,EAAAwD,CAAA,qBAHDpC,EAEKoC,EAAAH,CAAA,8CAPC7C,EAAY,CAAA,EAACA,EAAS,EAAA,EAAAA,SAAtBA,EAAY,CAAA,EAACA,EAAO,EAAA,EAAEA,EAAC,EAAA,CAAA,EAAA,MAAA,KAAA,SAAA,yJAMxB,CAAAiM,GAAApL,EAAA,KAAAqH,KAAAA,EAAAlI,MAAQ,UAAS,KAAAc,EAAAmH,EAAAC,CAAA,GADV,CAAA+D,GAAApL,EAAA,IAAA8O,KAAAA,EAAA3P,MAAQ,4BANlB,CAAAiM,GAAApL,EAAA,KAAAJ,KAAAA,EAAAqL,GAAQ9L,EAAc,CAAA,EAAAA,MAASA,EAAC,EAAA,CAAA,CAAA,+BADd2L,EAAAnM,EAAA,mBAAAQ,MAAQ,MAAM,oLAwBrCA,EAAM,CAAA,EAAC,QAAQ,gBAAe,+EADnCE,EAEKC,EAAAC,EAAAC,CAAA,6BADAL,EAAM,CAAA,EAAC,QAAQ,gBAAe,KAAAc,EAAA3B,EAAAmB,CAAA,6CAJ9BN,EAAM,CAAA,EAAC,QAAQ,kBAAiB,8HAH3BQ,EAAAhB,EAAA,OAAAiB,EAAAqL,GAAQ9L,EAAS,CAAA,CAAA,CAAA,UAH3BE,EAAoCC,EAAAC,EAAAC,CAAA,WACpCH,EAMGC,EAAAX,EAAAa,CAAA,gEADEL,EAAM,CAAA,EAAC,QAAQ,kBAAiB,KAAAc,EAAA0F,EAAAD,CAAA,EAH3B1F,EAAA,IAAAJ,KAAAA,EAAAqL,GAAQ9L,EAAS,CAAA,CAAA,gFAzBlCA,EAAO,CAAA,GAAIA,EAAQ,CAAA,GAAI,MAAIyC,GAAAzC,CAAA,yEAA3BA,EAAO,CAAA,GAAIA,EAAQ,CAAA,GAAI,oLAhFlB+W,GAAQ,GACR9F,GAAQ,qGAfH,GAAA,CAAA,MAAAlQ,CAAA,EAAAC,MACA,GAAA,CAAA,QAAAgW,CAAA,EAAAhW,EACA,CAAA,QAAAmN,CAAA,EAAAnN,GACA,QAAAoQ,EAAU,EAAA,EAAApQ,EACV,CAAA,QAAAiW,CAAA,EAAAjW,EAaPqQ,EACAlK,EACA+P,EAAc,SAEZzF,EAAgBtD,MAAAA,GAAAA,KAClBiD,EAAU,EAAA,EACV,OAAO,aAAaC,CAAS,EAE7BpQ,EAAA,GAAAoQ,EAAY,OAAO,qBACT,MAAAvT,EAASqD,EAAO,OAgBhBiP,EAAA,CACF,WAAY,kBACZ,MAjBE,CACF,SAAUtS,EAAO,SACjB,QAASA,EAAO,MAAQ,QAAUA,EAAO,QAAU,OACnD,MAAOA,EAAO,MAAQ,SAAW,GAAOA,EAAO,MAAQ,OAAS,GAAQ,OACxE,MACIA,EAAO,MAAQ,QACT,OAAO,OAAOgC,EAAa,EAC3BhC,EAAO,MAAQ,OACZ,CAAA,MAAM,EACP,OACZ,QAASA,EAAO,MAAQ,UAAY,GAAO,OAC3C,QAASA,EAAO,MAAQ,QACxB,QAASqQ,EAAQ,KAAA,EACjB,OAAQhN,EAAO,yBAKf,MAAO4V,GAAQ,GAEf,IAAAzG,MAEAA,EAAA,MAAkBP,IAAcK,CAAO,CAAA,CAClC,OAAAG,EAAA,CACLxP,EAAM,SAASwP,CAAqB,SAGpCD,GAAa,WAGjBc,EAAU,EAAA,EACVnQ,EAAA,EAAAkG,EAAWmJ,EAAU,CAAC,CAAA,EACtBrP,EAAA,EAAAiW,EAAc/P,EAAS,OAAS4P,IAAS,EAAQ5V,EAAO,uBAAuB,MAC/EgG,EAAWA,EAAS,MAAM,EAAG4P,EAAK,CAAA,IACnC9F,MAGDkG,EAAA,CAAgB/P,EAAyB3C,IACnCX,GAAA,CACCsD,EAAQ,QACTtD,EAAM,eAAA,EACNmT,EAAQxK,EAAcrF,EAAS3C,CAAC,CAAA,IAK5Cb,GAAA,IAAA,CACI,OAAO,aAAayN,CAAS,IA8CU,MAAA1M,EAAA,IAAAsS,EAAQG,CAAS,yNAlHrDJ,EACHvF,EAAOtD,CAAO,OAEdhH,EAAW,MAAA,MACXiK,EAAU,EAAA,EACV,OAAO,aAAaC,CAAS,qBAkEjCpQ,EAAA,EAAGwL,GAAiBrF,EAAyB3C,SAElCtD,EAAO,OACV,UAAWiG,EAAQ,GACnB,OAAQ3C,EACR,OAAA,CAAU,QAAS0J,EAAQ,KAAA,CAAA,sBAIhClN,EAAA,EAAAmW,EAAA,IACIjW,EAAO,OACV,UAAW,OACX,OAAQ,EACR,OAAA,CAAU,QAASgN,EAAQ,KAAA,CAAA,2ZCsEbnO,EAAa,EAAA,EAAGA,EAAM,EAAA,EAAGA,EAAM,EAAA,WAC/BA,EAAM,EAAA,4eADNA,EAAa,EAAA,EAAGA,EAAM,EAAA,EAAGA,EAAM,EAAA,uaAOhC,QAAAA,EAAa,CAAA,GAAA,CAAAA,EAAsB,CAAA,GAAA,CAAA,CAAAA,KAAQ,KAAI,uBAG/CA,EAA4B,EAAA,qLAH5Ba,EAAA,CAAA,EAAA,MAAAwW,EAAA,QAAArX,EAAa,CAAA,GAAA,CAAAA,EAAsB,CAAA,GAAA,CAAA,CAAAA,KAAQ,KAAI,oMAhB3DA,EAAgB,CAAA,GAAAwL,GAAAxL,CAAA,IAahBA,EAAM,CAAA,EAAC,SAAS,mBAAiBsG,GAAAtG,CAAA,2GAbjCA,EAAgB,CAAA,gHAahBA,EAAM,CAAA,EAAC,SAAS,4TAvBFE,EAAwCC,EAAA4C,EAAA1C,CAAA,yCAK9CL,EAAK,EAAA,EAAA,OADDA,EAAK,EAAA,GAAAC,GAAAD,CAAA,iFAALA,EAAK,EAAA,uFACTA,EAAK,EAAA,EAAA,KAAAc,EAAA0F,EAAAD,CAAA,0DAHqBvG,EAAK,EAAA,EAAA,sEAAhCE,EAAuCC,EAAA4C,EAAA1C,CAAA,oCAAZL,EAAK,EAAA,EAAA,KAAAc,EAAA3B,EAAAmB,CAAA,yCAEMN,EAAK,EAAA,EAAA,yCAAC,GAAE,qCAAnCE,EAA0CC,EAAA4C,EAAA1C,CAAA,2CAAfL,EAAK,EAAA,EAAA,KAAAc,EAAAuD,EAAAC,CAAA,yCAJ1C+B,EAAArG,MAAI,GAACqC,GAAA,kBACL,OAAArC,QAAU,GAAIyC,gQAFhBzC,EAAY,EAAA,CAAA,uBAAjB,OAAIyE,GAAA,qHADVvE,EAUMC,EAAA4C,EAAA1C,CAAA,+EATKL,EAAY,EAAA,CAAA,oBAAjB,OAAIyE,GAAA,EAAA,mHAAJ,4FAhBAzE,EAAQ,CAAA,EAAG,QAAU,0BAETA,EAAM,CAAA,EAAC,QAAQ,qBAClBA,EAAO,EAAA,EAAG,sBAAwB,2BACjCA,EAAgB,CAAA,EAAG,cAAgB,4BACnCA,EAAM,CAAA,EAAC,QAAQ,cACd,gBAAAA,OAAiBA,EAAa,EAAA,EAAG,WAAa,uBAC9CA,EAAM,CAAA,EAAC,QAAQ,qDAExBA,EAAY,EAAA,UACXA,EAAa,EAAA,EAAGA,EAAM,EAAA,EAAGA,EAAM,EAAA,mBACtBA,EAAc,EAAA,oBACbA,EAAM,EAAA,gBACVA,EAAa,EAAA,oEAZZA,EAAO,CAAA,IAAA,qBAAPA,EAAO,CAAA,kJADjBA,EAAQ,CAAA,EAAG,QAAU,wCAETA,EAAM,CAAA,EAAC,QAAQ,oCAClBA,EAAO,EAAA,EAAG,sBAAwB,yCACjCA,EAAgB,CAAA,EAAG,cAAgB,0CACnCA,EAAM,CAAA,EAAC,QAAQ,eACda,EAAA,CAAA,EAAA,QAAAmQ,EAAA,gBAAAhR,OAAiBA,EAAa,EAAA,EAAG,WAAa,qCAC9CA,EAAM,CAAA,EAAC,QAAQ,oCAGvBA,EAAa,EAAA,EAAGA,EAAM,EAAA,EAAGA,EAAM,EAAA,kFATxBA,EAAO,CAAA,6NAnIZ,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAEP,IAAAsW,EAAA,CAAYnW,EAAO,OAAO,OAC1BoW,EAAmB,GACnBpG,EACAqG,EACArJ,EAAU,GACVgI,EAAa,GACbC,EAAgB,GAChB/N,EAAS,GACTgO,EAAgB,GAChBC,EAAU,EACVlF,EAAU,SAERqG,EAAgBhG,GAAAA,CAClBxQ,EAAA,EAAAkN,GAAUsD,GAAAA,YAAAA,EAAQ,UAAW,EAAA,EAC7BxQ,EAAA,EAAAkV,GAAa1E,GAAAA,YAAAA,EAAQ,aAAc,EAAA,EACnCxQ,EAAA,EAAAmV,GAAgB3E,GAAAA,YAAAA,EAAQ,gBAAiB,EAAA,EACzCxQ,EAAA,EAAAoH,GAASoJ,GAAAA,YAAAA,EAAQ,SAAU,EAAA,EAC3BxQ,EAAA,EAAAoV,GAAgB5E,GAAAA,YAAAA,EAAQ,gBAAiB,EAAA,EACzCxQ,EAAA,EAAAqV,GAAU7E,GAAAA,YAAAA,EAAQ,UAAW,CAAA,GAsC3BiG,EAAA,SAAA,KACFJ,EAAW,EAAA,EACPK,OACAJ,EAAmB,EAAA,EAEjB,MAAA/Y,GAAA,EACN2S,EAAS,MAAA,GAGPyG,EAAA,SAAA,KACFN,EAAY,CAAAO,CAAA,MACZN,EAAmB,EAAA,EACnBE,EAAahG,CAAM,GAGjBqG,EAAA,SAAA,CACEP,OACAA,EAAmB,EAAA,EACb,MAAA/Y,GAAA,EACN2S,EAAS,MAAA,QAETmG,EAAW,EAAA,MACXC,EAAmB,EAAA,EACb,MAAA/Y,GAAA,EACNgZ,EAAc,MAAA,IAIhBO,EAAA,SAAA,KACFT,EAAW,EAAA,MACXC,EAAmB,EAAA,EACnBE,EAAA,QACM1W,EAAM,SAAA,IACLI,EAAO,OACV,OAAQ,OACR,OAAQ,SAEN,MAAA3C,GAAA,EACN2S,EAAS,MAAA,GAGP1L,EAAA,SAAA,OACI1E,EAAM,SAAA,IACLI,EAAO,OACV,UAAW,OACX,OAAQ,OACR,OAAQoW,GAEE,QAASpJ,EAAQ,KAAA,EACjB,WAAYgI,EAAW,KAAA,EACvB,cAAeC,EAAc,KAAA,EAC7B,OAAA/N,EACA,cAAAgO,EACA,QAAAC,GAGA,CAAA,QAASnI,EAAQ,KAAA,CAAA,QAG/BoJ,EAAmB,EAAA,MACnBD,EAAW,EAAA,GAGTU,GAAsC,MAAAla,GAAA,CAClC,MAAAiD,EAAM,SAASjD,CAAM,MAC3ByZ,EAAmB,EAAA,MACnBD,EAAW,EAAA,8CAmCIE,EAAazT,+MA9BrBoN,EAAQpN,0BAEHoK,EAAOgE,gGA5GpBlR,EAAA,GAAAwQ,EAAStQ,EAAO,OAAO,MAAA,yBAEvBsW,EAAahG,CAAM,yBAEnBxQ,EAAA,GAAA0W,EAAkB,GACjBlG,GAAA,MAAAA,EAAQ,YACJA,GAAA,MAAAA,EAAQ,eACRA,GAAA,MAAAA,EAAQ,QACRA,GAAA,MAAAA,EAAQ,eACRA,GAAA,MAAAA,EAAQ,QAAA,0BAGhBxQ,EAAA,GAAG4W,EAAgB,GAAQpG,GAAA,MAAAA,EAAQ,UAAYkG,CAAA,qBAE5C1W,EAAA,GAAAgX,EAAgB,GACf9J,EAAQ,KAAA,GACJgI,EAAW,KACX,GAAAC,EAAc,KACd,GAAA/N,GACAgO,GACAC,EAAA,qBAGLrV,EAAA,GAAAiX,EAAA,CACG,CAAA,MAAO,GAAI,MAAO/J,CAAA,GAClB,MAAOhN,EAAO,QAAQ,WAAY,MAAOgV,IACzC,MAAOhV,EAAO,QAAQ,SAAU,MAAOiV,IAErC,MAAOjV,EAAO,QAAQ,WACtB,MAAOmV,EAAU,MAAQ,KAAKA,EAAU,GAAI,EAAE,mBAAA,EAAuB,KAEvE,MAAOnV,EAAO,QAAQ,iBAAkB,MAAOkH,IAC/C,MAAOlH,EAAO,QAAQ,qBAAsB,MAAOkV,IACvD,OAAU,CAAA,CAAA,MAAAlE,CAAA,IAAY,EAAQA,CAAK,CAAA,iPChChBnS,EAAM,CAAA,EAAC,QAAQ,KAAI,4LALxBE,EAMQC,EAAAoC,EAAAlC,CAAA,4DADHL,EAAM,CAAA,EAAC,QAAQ,KAAI,KAAAc,EAAA3B,EAAAmB,CAAA,sDAPDgE,EAAAtE,KAAM,KAAI,iCAChCuE,EAAAvE,KAAM,MAAIyC,GAAAzC,CAAA,mRAaJA,EAAM,CAAA,EAAC,QAAQ,KAAK,yOAzBvCE,EA+BKC,EAAAyC,EAAAvC,CAAA,EArBDO,EAoBKgC,EAAAI,CAAA,EAnBDpC,EAA2CoC,EAAAH,CAAA,sCAW3CjC,EAOQoC,EAAAT,CAAA,EADJ3B,EAAwB2B,EAAAkC,CAAA,sDAjBD,CAAAwH,GAAApL,EAAA,IAAAyD,KAAAA,EAAAtE,KAAM,KAAI,KAAAc,EAAAuD,EAAAC,CAAA,EAChCtE,KAAM,6EAaAA,EAAM,CAAA,EAAC,QAAQ,2IAvBbmY,EAAAtM,GAAAjJ,EAAAnB,GAAA,CAAA,EAAG,GAAI,MAAO,IAAG,6CAChB2W,EAAA9L,GAAA1J,EAAAnB,GAAA,CAAA,EAAG,GAAI,SAAU,IAAG,6FAJvCyE,EAAAC,GAAAnG,KAAO,MAAM,aAAWA,EAAK,CAAA,kBAAlC,OAAIyE,GAAA,EAAA,kQALVvE,EAuCKC,EAAAC,EAAAC,CAAA,0EAlCM6F,EAAAC,GAAAnG,KAAO,MAAM,wJAAlB,OAAIyE,GAAA,iNARK,GAAA,CAAA,MAAA1D,CAAA,EAAAC,iBAyByBD,EAAM,KAAKsX,CAAK,OAUpBtX,EAAM,UAAUsX,CAAK,0VChC9CrY,EAAM,CAAA,EAAC,QAAQ,WAAW,UAHrCE,EAOQC,EAAAoC,EAAAlC,CAAA,EADJO,EAAsC2B,EAAAkC,CAAA,sDAH/BzE,EAAM,CAAA,EAAC,QAAQ,2JANX,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAOK,MAAA2D,EAAA,IAAA5D,EAAM,eAAc,gKCgCvBf,EAAM,CAAA,EAAC,QAAQ,IAAG,WAGlBA,EAAM,CAAA,EAAC,QAAQ,KAAI,WAGnBA,EAAM,CAAA,EAAC,QAAQ,KAAI,WAGnBA,EAAM,CAAA,EAAC,QAAQ,OAAM,WAGrBA,EAAM,CAAA,EAAC,QAAQ,QAAO,WAGtBA,EAAM,CAAA,EAAC,QAAQ,UAAS,ihBAjBjCE,EAmBKC,EAAAC,EAAAC,CAAA,EAlBDO,EAEQR,EAAA2H,CAAA,gBACRnH,EAEQR,EAAA4H,CAAA,gBACRpH,EAEQR,EAAA2M,CAAA,gBACRnM,EAEQR,EAAAkY,CAAA,gBACR1X,EAEQR,EAAAmY,CAAA,gBACR3X,EAEQR,EAAAoY,CAAA,0JAhBHxY,EAAM,CAAA,EAAC,QAAQ,IAAG,KAAAc,EAAAuD,EAAAC,CAAA,cAGlBtE,EAAM,CAAA,EAAC,QAAQ,KAAI,KAAAc,EAAAgN,EAAAN,CAAA,cAGnBxN,EAAM,CAAA,EAAC,QAAQ,KAAI,KAAAc,EAAAmM,EAAAC,CAAA,cAGnBlN,EAAM,CAAA,EAAC,QAAQ,OAAM,KAAAc,EAAAqE,EAAAC,CAAA,cAGrBpF,EAAM,CAAA,EAAC,QAAQ,QAAO,KAAAc,EAAA2X,EAAAC,CAAA,cAGtB1Y,EAAM,CAAA,EAAC,QAAQ,UAAS,KAAAc,EAAA6X,EAAAC,CAAA,kEAlBhC5Y,EAAQ,CAAA,GAAAyC,GAAAzC,CAAA,wFAFWA,EAAS,CAAA,CAAA,uEAJdA,EAAQ,CAAA,CAAA,gBAChBA,EAAM,CAAA,EAAC,QAAQ,MAAM,uDAJpCE,EA+BKC,EAAAC,EAAAC,CAAA,EA9BDO,EAOQR,EAAAmC,CAAA,EADJ3B,EAAiC2B,EAAAkC,CAAA,2CAFvBzE,EAAU,CAAA,CAAA,oBALkBA,EAAS,CAAA,CAAA,CAAA,2CAO3BA,EAAS,CAAA,4CAJdA,EAAQ,CAAA,CAAA,cAChBA,EAAM,CAAA,EAAC,QAAQ,wBAKrBA,EAAQ,CAAA,uMAlCF,GAAA,CAAA,MAAAe,CAAA,EAAAC,UAEPyF,EAAW,GAET,MAAAE,EAAA,IAAA,KACFF,EAAW,EAAA,GAGTG,EAAA,IAAA,KACFH,EAAY,CAAAA,CAAA,GAGVoS,EAAa/J,GAAA,CACfnI,EAAA,EACA5F,EAAM,UAAU+N,CAAI,GAsB4CnK,EAAA,IAAAkU,EAAU,KAAK,EAGf/P,EAAA,IAAA+P,EAAU,MAAM,EAGhB9P,EAAA,IAAA8P,EAAU,MAAM,EAGhB7P,EAAA,IAAA6P,EAAU,QAAQ,EAGlBvL,EAAA,IAAAuL,EAAU,SAAS,EAGnBtL,EAAA,IAAAsL,EAAU,WAAW,oFAlCtF5X,EAAA,EAAA6X,EACC3X,EAAO,iBAAiB,MAAQ,EAC1B,cACAA,EAAO,iBAAiB,KAAOA,EAAO,aAAa,OACjD,oBACA,mBAAA,ioBCAC,OAAAnB,EAAO,CAAA,EAAA,OAAO,MAAQ,QAAO,kKADtCE,EASKC,EAAAC,EAAAC,CAAA,8pCAQa,SAAAL,KAAO,SACR,QAAAA,KAAO,QACP,QAAAA,KAAO,cACTA,EAAM,CAAA,EAAC,QAAQ,oBACZA,EAAM,CAAA,EAAC,OAAO,SACd,SAAAA,EAAO,CAAA,EAAA,OAAO,MAAQ,2CAEjB,cAAAA,EAAO,CAAA,EAAA,aAAeD,GAAa,GAAK,QAAU,mLAZzEG,EAeKC,EAAAC,EAAAC,CAAA,sCAVaQ,EAAA,IAAA+R,EAAA,SAAA5S,KAAO,UACRa,EAAA,IAAA+R,EAAA,QAAA5S,KAAO,SACPa,EAAA,IAAA+R,EAAA,QAAA5S,KAAO,uBACTA,EAAM,CAAA,EAAC,QAAQ,6BACZA,EAAM,CAAA,EAAC,OAAO,UACda,EAAA,IAAA+R,EAAA,SAAA5S,EAAO,CAAA,EAAA,OAAO,MAAQ,UAEjBa,EAAA,IAAA+R,EAAA,cAAA5S,EAAO,CAAA,EAAA,aAAeD,GAAa,GAAK,QAAU,2nBAbvEiE,EAAAhE,EAAM,CAAA,EAAC,UAAP,MAAAgE,EAAgB,SAAU,YAAa,UAAU,EAAE,SAAShE,EAAO,CAAA,EAAA,SAAS,cAAc,GAAKA,KAAO,aAAeD,GAAa,gDAlBnI,OAAAC,KAAO,QAAO,0BAMd,IAAAsC,EAAAtC,EAAO,CAAA,EAAA,cAAgBD,GAAa,IAAEuG,GAAAtG,CAAA,wDA+BtC,OAAAA,EAAO,CAAA,EAAA,cAAgBD,GAAa,GAAE,GAEjCiE,EAAAhE,EAAM,CAAA,EAAC,UAAP,MAAAgE,EAAgB,MAAK,qMAxCnC9D,EA2CKC,EAAAC,EAAAC,CAAA,8OApCIL,EAAO,CAAA,EAAA,cAAgBD,GAAa,4GAYnCiE,EAAAhE,EAAM,CAAA,EAAC,UAAP,MAAAgE,EAAgB,SAAU,YAAa,UAAU,EAAE,SAAShE,EAAO,CAAA,EAAA,SAAS,cAAc,GAAKA,KAAO,aAAeD,GAAa,sdAtB7H,GAAA,CAAA,MAAAgB,CAAA,EAAAC,MAoCY,MAAAwD,EAAAoB,GAAO7E,EAAM,aAAa6E,CAAE,4ZCqFtC5F,EAAM,CAAA,EAAC,QAAQ,WAAU,OACrBuE,EAAAvE,MAAWA,EAAM,CAAA,EAAC,aAAeD,GAAa,IAAEgZ,GAAA/Y,CAAA,4IAFzDE,EAMIC,EAAA6Y,EAAA3Y,CAAA,mDALCL,EAAM,CAAA,EAAC,QAAQ,WAAU,KAAAc,EAAAuD,EAAAC,CAAA,EACrBtE,MAAWA,EAAM,CAAA,EAAC,aAAeD,GAAa,kMAJvDG,EAA0CC,EAAAC,EAAAC,CAAA,6EAMjCL,EAAO,CAAA,CAAA,0EADRE,EAAsDC,EAAAsE,EAAApE,CAAA,qCACrDL,EAAO,CAAA,CAAA,0LAUZE,EAEKC,EAAAC,EAAAC,CAAA,sMAIQ,QAAAL,KAAO,QACN,SAAAA,MAAQA,EAAM,CAAA,EAAC,aAAeD,GAAa,2BAGnDC,EAAI,CAAA,GAAA2H,GAAA3H,CAAA,2HAJGa,EAAA,IAAAoY,EAAA,QAAAjZ,KAAO,SACNa,EAAA,KAAAoY,EAAA,SAAAjZ,MAAQA,EAAM,CAAA,EAAC,aAAeD,GAAa,qCAGnDC,EAAI,CAAA,+QAGW,QAAAA,KAAO,yFAFxBE,EAKKC,EAAAC,EAAAC,CAAA,sCAHYQ,EAAA,IAAAqY,EAAA,QAAAlZ,KAAO,yJAY3BqG,EAAArG,EAAO,CAAA,EAAA,cAAgBD,GAAa,IAAE+H,GAAA9H,CAAA,IAQtCA,EAAI,CAAA,GAAA6H,GAAA7H,CAAA,gFATbE,EAcKC,EAAAC,EAAAC,CAAA,oDAbIL,EAAO,CAAA,EAAA,cAAgBD,GAAa,iGAQpCC,EAAI,CAAA,qOALY,QAAAA,KAAO,2HAFxBE,EAKKC,EAAAC,EAAAC,CAAA,sCAHYQ,EAAA,IAAAoY,EAAA,QAAAjZ,KAAO,wSAMxBE,EAEKC,EAAAC,EAAAC,CAAA,2MAUS,SAAAL,KAAO,SACR,QAAAA,KAAO,QACP,QAAAA,KAAO,QACR,OAAAA,KAAO,OACP,OAAAA,KAAO,OACN,QAAAA,KAAM,SACC,eAAAA,KAAM,kHAR9BE,EAUKC,EAAAC,EAAAC,CAAA,sCARaQ,EAAA,IAAAsY,EAAA,SAAAnZ,KAAO,UACRa,EAAA,IAAAsY,EAAA,QAAAnZ,KAAO,SACPa,EAAA,IAAAsY,EAAA,QAAAnZ,KAAO,SACRa,EAAA,IAAAsY,EAAA,OAAAnZ,KAAO,QACPa,EAAA,IAAAsY,EAAA,OAAAnZ,KAAO,QACNa,EAAA,IAAAsY,EAAA,QAAAnZ,KAAM,UACCa,EAAA,IAAAsY,EAAA,eAAAnZ,KAAM,uLAMrB,OAAAgE,EAAAhE,KAAO,UAAP,MAAAgE,EAAgB,OAAShE,KAAO,UAAS,EAEpCA,KAAO,QAAO,wHAH5BE,EAUKC,EAAAC,EAAAC,CAAA,+qBAN6B,QAAAL,KAAO,8FAAPa,EAAA,IAAAuY,EAAA,QAAApZ,KAAO,6JAFL,QAAAA,KAAO,QAAe,KAAAA,KAAO,gGAA7Ba,EAAA,IAAAwY,EAAA,QAAArZ,KAAO,SAAea,EAAA,IAAAwY,EAAA,KAAArZ,KAAO,mqBA7FjE,SAAA,MAAAsZ,EAAAtZ,EAAU,CAAA,EAAA,MAAAA,EAAO,CAAA,EAAA,QAAQ,WAW3B,IAAAqG,EAAA,CAAArG,KAAO,QAAMuZ,GAAAvZ,CAAA,yBAMVA,EAAM,CAAA,EAAC,QAAUA,KAAO,aAAeD,GAAa,GAAE0H,2BAgBlDzH,EAAI,CAAA,GAAA0H,GAAA1H,CAAA,EAKJ0S,GAAA1S,EAAO,CAAA,EAAA,aAAeD,GAAa,IAAE6H,GAAA5H,CAAA,EAmB7CwZ,GAAAxZ,MAAQA,EAAM,CAAA,EAAC,cAAgBD,GAAa,KAAEyH,GAAAxH,CAAA,EAoBzCyZ,IAAA,CAAAzZ,MAAQA,EAAM,CAAA,EAAC,cAAgBD,GAAa,KAAEoI,GAAAnI,CAAA,IAa/CA,EAAI,CAAA,GAAAqC,GAAArC,CAAA,EAiBR0Z,GAAA1Z,MAAQA,EAAM,CAAA,EAAC,aAAeD,GAAa,IAAEE,GAAAD,CAAA,EAI7C2Z,EAAA3Z,EAAO,CAAA,EAAA,OAAO,QAAU,eAAayC,GAAAzC,CAAA,wYAhFtB2L,EAAA9I,EAAA,OAAA7C,EAAO,CAAA,EAAA,cAAgBD,GAAa,EAAE,gKAzB7C4L,EAAAhJ,EAAA,OAAA,CAAA3C,KAAO,MAAM,gBACXA,EAAM,CAAA,EAAC,QAAUA,KAAO,cAAgBD,GAAa,EAAE,EACpD4L,EAAAhJ,EAAA,aAAA3C,EAAO,CAAA,EAAA,aAAeD,GAAa,EAAE,iFAL3DG,EAqGKC,EAAAwC,EAAAtC,CAAA,wBAxFDO,EAsCK+B,EAAAK,CAAA,qBAzBDpC,EAwBKoC,EAAAH,CAAA,wEAuBTjC,EA2BK+B,EAAAC,CAAA,2DAGT1C,EAWKC,EAAAuC,EAAArC,CAAA,2JA5HgBL,EAAkB,CAAA,CAAA,iBACvBA,EAAa,CAAA,CAAA,gCAGFwC,GAAAxC,KAAO,OAASA,EAAW,CAAA,EAAG,MAAS,IAAvCA,EAAM,CAAA,EAAC,OAASA,EAAW,CAAA,EAAG,QAAS,MAAA,KAAA,SAAA,IAOpDgL,GAAA4O,EAAAC,GAAA,KAAA,KAAAlX,EAAA3C,KAAO,OAAO,CAAA,wBAJhB,CAAAiM,GAAApL,EAAA,KAAAyY,KAAAA,EAAAtZ,EAAU,CAAA,EAAA,MAAAA,EAAO,CAAA,EAAA,QAAQ,gCAW3BA,KAAO,kKAsBAA,EAAI,CAAA,0GAKJA,EAAO,CAAA,EAAA,aAAeD,GAAa,yHAP5B4L,EAAA9I,EAAA,OAAA7C,EAAO,CAAA,EAAA,cAAgBD,GAAa,EAAE,EA0BrDC,MAAQA,EAAM,CAAA,EAAC,cAAgBD,GAAa,kGAoBvC,CAAAC,MAAQA,EAAM,CAAA,EAAC,cAAgBD,GAAa,4GAa7CC,EAAI,CAAA,mGAtFH4Z,GAAApX,GAAAoX,EAAA,MAAA,GAAA/Y,EAAA,GAAA+Y,EAAA,OAAA,KAAA,KAAA5Z,KAAO,OAAO,aAEX2L,EAAAhJ,EAAA,OAAA,CAAA3C,KAAO,MAAM,2BACXA,EAAM,CAAA,EAAC,QAAUA,KAAO,cAAgBD,GAAa,EAAE,aACpD4L,EAAAhJ,EAAA,aAAA3C,EAAO,CAAA,EAAA,aAAeD,GAAa,EAAE,EAmGlDC,MAAQA,EAAM,CAAA,EAAC,aAAeD,GAAa,4GAI3CC,EAAO,CAAA,EAAA,OAAO,QAAU,uoBA3MlB,GAAA,CAAA,MAAAe,CAAA,EAAAC,MAEP,IAAA8Y,EACAC,EAAmB,EAmCvBpW,GAAA,IAAA,CACI5C,EAAM,gBAAgB,OAAO,UAAU,IAG3CqN,GAAA,IAAA,CACQ,GAAA2L,GAAoB5Y,EAAO,aAAA,CAC3B4Y,EAAmB5Y,EAAO,aACtB,IAAA6Y,EAASF,EAAS,cACf,KAAAE,GACCA,EAAO,UAAY,GACnBA,EAAO,UAAW,IAAK,CAAA,CAAA,EAE3BA,EAASA,EAAO,uBAKtBC,EAAsBnW,GAAA,IACpB3C,EAAO,UACP,OAAA2C,EAAM,eAAA,EACN/C,EAAM,YAAYI,EAAO,UAAW,EAAI,EACjC,IAIT+Y,EAAiBpW,GAAA,CACf3C,EAAO,QAAU2C,EAAM,KAAK,OAAS,cAAgBA,EAAM,KAAK,aAChE/C,EAAM,eAAA,GAIRoZ,EAAerW,GAAA,OACb,GAAA3C,EAAO,QAAW,CAAA2C,EAAM,kBAAoBA,EAAM,kBAAkB,YAAA,OAC9DsW,GAAOtW,EAAM,OAAO,QAAQ,GAAG,EACjCsW,MACApW,EAAA,OAAO,SAAP,MAAAA,EAAe,YAAc,CAAA,MAAO,aAAc,QAASoW,GAAK,MAAQ,MAEvEtW,EAAM,kBACPA,EAAM,eAAA,IAODuW,EAAA,IAAAtZ,EAAM,gBAAgB,OAAO,UAAU,QACrCA,EAAM,SAASuZ,GAAoB,CAAA,EAkDvB9V,EAAA,IAAAzD,EAAM,cAAcI,EAAO,OAAO,QAAQ,QAMlCJ,EAAM,WAAW,aAAa,EAelCmI,EAAA,IAAAnI,EAAM,cAAcI,EAAO,OAAO,QAAQ,4CAtDlE2Y,EAAQ/V,WAuG4B,MAAAwW,EAAA,IAAAxZ,EAAM,WAAU,+FAvM/DE,EAAA,GAAGmQ,EAAUjQ,EAAO,OAAA,gBACjBF,EAAA,EAAAuZ,EAAOrZ,EAAO,OAAO,IAAA,gBACrBF,EAAA,GAAAC,EAASC,EAAO,QAAQ,KAAMC,IAAMA,GAAE,IAAMD,EAAO,OAAO,QAAQ,CAAA,gBAClEF,EAAA,GAAAqE,EAAQnE,EAAO,OAAO,KAAM6E,IAAMA,GAAE,IAAM7E,EAAO,OAAO,OAAO,CAAA,oBAElEF,EAAA,EAAGwZ,EACCD,GAAQ,QACFrZ,EAAO,QAAQ,MACfqZ,GAAQ,UACNrZ,EAAO,QAAQ,cACfqZ,GAAQ,OACNrZ,EAAO,QAAQ,WACfqZ,GAAQ,SACNrZ,EAAO,QAAQ,OACfqZ,GAAQ,QACNrZ,EAAO,QAAQ,MACfqZ,GAAQ,SACNlV,GAAA,YAAAA,EAAO,OAAQ,GACfkV,GAAQ,SACNja,GAAiBW,EAAQ,UAAU,EACnC,EAAA,iBAEtBD,EAAA,EAAGmC,EAAQjC,EAAO,QAAUA,EAAO,QAAQ,QAAQ,KAAU,GAAAA,EAAO,QAAQ,UAAYsZ,CAAA,iBAErFxZ,EAAA,GAAAyZ,EACCvZ,EAAO,aAAepB,GAAa,GAAK0a,GAAWtZ,EAAO,QAAQ,WAAa,EAAA,gBAEnFF,EAAA,EAAG0Z,EAAoBH,GAAQ,IAAA,qBAE5BxW,EAAA,OAAO,SAAP,MAAAA,EAAe,YAAA,CAAc,MAAO,aAAc,WAAYoN,GAAW,yBACzEnN,EAAA,OAAO,SAAP,MAAAA,EAAe,aAAc,MAAO,aAAc,SAAUyW,GAAe,wBAC3EvW,GAAA,OAAO,SAAP,MAAAA,GAAe,aAAc,MAAO,aAAc,YAAawW,GAAqB,6HCzD3F,MAAMC,GAAmB,CAAE,EA0BpB,SAASC,GAAS1I,EAAOtT,EAAQd,EAAM,CAE7C,IAAIgB,EAEJ,MAAM+b,EAAc,IAAI,IAIxB,SAASC,EAAIC,EAAW,CACvB,GAAIC,GAAe9I,EAAO6I,CAAS,IAClC7I,EAAQ6I,EACJjc,GAAM,CAET,MAAMmc,EAAY,CAACN,GAAiB,OACpC,UAAWO,KAAcL,EACxBK,EAAW,CAAC,EAAG,EACfP,GAAiB,KAAKO,EAAYhJ,CAAK,EAExC,GAAI+I,EAAW,CACd,QAASzW,EAAI,EAAGA,EAAImW,GAAiB,OAAQnW,GAAK,EACjDmW,GAAiBnW,CAAC,EAAE,CAAC,EAAEmW,GAAiBnW,EAAI,CAAC,CAAC,EAE/CmW,GAAiB,OAAS,CAC/B,CACA,CAEA,CAMC,SAASQ,EAAOvd,EAAI,CACnBkd,EAAIld,EAAGsU,CAAK,CAAC,CACf,CAOC,SAASkJ,EAAUC,EAAKC,EAAaxd,EAAM,CAE1C,MAAMod,EAAa,CAACG,EAAKC,CAAU,EACnC,OAAAT,EAAY,IAAIK,CAAU,EACtBL,EAAY,OAAS,IACxB/b,EAAOF,EAAMkc,EAAKK,CAAM,GAAKrd,GAE9Bud,EAAInJ,CAAK,EACF,IAAM,CACZ2I,EAAY,OAAOK,CAAU,EACzBL,EAAY,OAAS,GAAK/b,IAC7BA,EAAM,EACNA,EAAO,KAER,CACH,CACC,MAAO,CAAE,IAAAgc,EAAK,OAAAK,EAAQ,UAAAC,CAAW,CAClC,CCvCA,eAAsBG,GAAYrH,EAAmB,CACjD,IAAIsH,EAAiB,EAEjBC,EAAe,CAEf,OAAQvH,EAAK,OACb,SAAUA,EAAK,SACf,YAAaA,EAAK,YAClB,QAASA,EAAK,QACd,OAAQA,EAAK,OAGb,OAAQ,CAAC,EAGT,OAAQ,EACR,OAAQ,EACR,QAAS,CAAC,EACV,OAAQ,CAAC,EACT,WAAY,EACZ,aAAc,CAAC,EAGf,QAAS,GACT,qBAAsB,IACtB,OAAQ,CAAC,EACT,aAAc,EACd,aAAc,CAClB,EAEA,KAAM,CAAE,UAAAkH,EAAW,IAAAN,GAAQF,GAAgBa,CAAK,EAE1CC,EAASP,GAA2BL,EAAI,CAAE,GAAGW,EAAO,GAAGN,EAAQ,EAErEC,EAAWO,GAAa,CACZF,EAAAE,CAAA,CACX,EAED,MAAMC,EAAyB,MAC3B7L,EACA8L,EACAC,EAAW,KACiB,oBACtB,MAAAC,GAAYhY,GAAA0X,EAAM,UAAN,YAAA1X,GAAe,GAC3BiY,GAAYP,EAAM,UAClB5d,EAASge,GAAaJ,EAAM,OAC5B/R,GACF,CAACoS,IACAje,EAAO,MAAQ4d,EAAM,OAAO,MACzB5d,EAAO,WAAa4d,EAAM,OAAO,WACjC5d,EAAO,UAAY4d,EAAM,OAAO,UAChC5d,EAAO,SAAW4d,EAAM,OAAO,SAC/B5d,EAAO,QAAU4d,EAAM,OAAO,QAC5B,CAAE,GAAGA,EAAM,OAAQ,OAAQ,MAAA,EAC3BA,EAAM,WACVQ,GAAUR,EAAM,YAAY,QA2BlC,GAzBAC,EAAM,CAAE,QAAS,GAAM,MAAO,OAAW,EAEzCQ,GAAqBre,EAAQie,CAAQ,EAGjCC,GAAaC,KACb,OAAO,aAAaR,CAAc,EACjBA,EAAA,EACjBzL,EAAS,QAAQ,CACb,WAAY,iBACZ,UAAAgM,EACA,KAAMC,EAAA,CACT,GAILjM,EAAS,KAAK,CACV,WAAY,aAAA,CACf,EAGDA,EAAS,KAAK,CACV,WAAY,YAAA,CACf,EAEGlS,EAAO,KAAM,CACb,MAAMse,GAAsB,CACxB,SAAUte,EAAO,SACjB,QAASA,EAAO,MAAQ,QAAUA,EAAO,QAAU,OACnD,MAAOA,EAAO,MAAQ,SAAW,GAAOA,EAAO,MAAQ,OAAS,GAAQ,OACxE,MACIA,EAAO,MAAQ,QACT,CAAC,KAAM,KAAM,KAAK,EAClBA,EAAO,MAAQ,OACb,CAAC,MAAM,EACP,OACZ,QAASA,EAAO,MAAQ,UAAY,GAAO,OAC3C,QAASA,EAAO,MAAQ,OAC5B,EAGAkS,EAAS,KAAK,CACV,WAAY,iBACZ,MAAAoM,EAAA,CACH,EAEGte,EAAO,WAEPkS,EAAS,KAAK,CACV,WAAY,cACZ,UAAWlS,EAAO,SAAA,CACrB,EAGDkS,EAAS,KAAK,CACV,WAAY,kBACZ,MAAO,CACH,GAAGoM,GACH,GAAGte,EAAO,OACV,QAASA,EAAO,UAChB,QAAS,EACb,EACA,MAAO,CAAA,CACV,EAGDkS,EAAS,KAAK,CACV,WAAY,kBACZ,MAAO,CACH,GAAGoM,GACH,GAAGte,EAAO,OACV,QAASA,EAAO,UAChB,QAAS,EACb,EACA,MAAO,CAAA,CACV,EAEIA,EAAO,QAERkS,EAAS,KAAK,CACV,WAAY,iBACZ,MAAO,CACH,GAAGoM,GACH,QAASte,EAAO,UAChB,QAAS,EAAA,CACb,CACH,GAILkS,EAAS,KAAK,CACV,WAAY,kBACZ,MAAO,CAAE,GAAGoM,GAAO,GAAGte,EAAO,MAAO,EACpC,OAAQA,EAAO,OAAS,OAAYA,EAAO,OAC3C,MAAOA,EAAO,OAASoe,GAAU,EAAIA,EAAA,CACxC,CACL,CAGE,MAAA5L,GAAY,MAAM+L,EAAwBrM,CAAQ,EACxD,GAAIM,IAAa,KACN,OAAA,KAGP,IAAAlJ,GACAkV,GACAC,GACAC,GACAC,GAA8C,CAAC,EAC/CC,GAAoC,EAEpC5e,EAAO,OACHA,EAAO,WACFA,EAAO,SACRwe,GAAgBhM,GAAU,IAAI,GAElCkM,IAAiBvY,GAAAqM,GAAU,MAAiC,CAAC,IAA5C,YAAArM,GAA+C,GAChEsY,IAAiBpY,GAAAmM,GAAU,MAAiC,CAAC,IAA5C,YAAAnM,GAA+C,GAChEiD,GAAUkJ,GAAU,IAAI,IAExBmM,GAAenM,GAAU,IAAI,EACzBxS,EAAO,SACHA,EAAO,OAAO,SACE0e,IAAApY,GAAAqY,GAAaP,EAAO,IAApB,YAAA9X,GAAuB,GACvCmY,GAAgBze,EAAO,OAAO,QAC9B2e,GAAeA,GAAa,MAAM,EAAGP,EAAO,EAAE,QAAQ,IAEtDM,GAAgB1e,EAAO,OAAO,QACdye,IAAAjK,GAAAmK,GAAaP,EAAO,IAApB,YAAA5J,GAAuB,GACxBmK,GAAAA,GAAa,MAAM,EAAGP,EAAO,KAIxDQ,GAAapM,GAAU,IAAI,GAGzB,MAAAqM,EAASrM,GAAU,IAAI,EACvBsM,GAAUtM,GAAU,IAAI,EAOzB,GAND0L,GAAaC,IACb3L,GAAU,MAAM,EAKfxS,EAAO,MAAQ,UAAY,CAAC8e,GAAQ,KAAMxb,IAAMA,GAAE,IAAMtD,EAAO,QAAQ,GACvEA,EAAO,MAAQ,SAAW,CAAC6e,EAAO,KAAM3W,IAAMA,GAAE,IAAMlI,EAAO,OAAO,EAErE,aAAM+e,EAAS,CAAE,KAAM,OAAA,EAAW,EAAI,EAC/BvM,GAIP,IAAAwM,GACAC,GACAC,GACJ,GAAI5V,IAAA,MAAAA,GAAS,MAAO,CAChB,MAAM4I,GAA6B,CAC/B,CACI,WAAY,YACZ,SAAU5I,GAAQ,OAAO,EAC7B,EACA,CACI,WAAY,aACZ,SAAUA,GAAQ,OAAO,EAAA,CAEjC,GACIA,IAAA,YAAAA,GAAS,KAAM4U,GACfhM,GAAS,KAAK,CACV,WAAY,mBACZ,UAAW5I,GAAQ,EAAA,CACtB,EAECkJ,MAAAA,GAAY,MAAM+L,EAAwBrM,EAAQ,EACxD,GAAIM,IAAa,KACN,OAAA,MAEPlJ,IAAA,YAAAA,GAAS,KAAM4U,IACfc,GAAYxM,GAAU,IAAI,GAE9B0M,GAAc1M,GAAU,IAAI,EAC5ByM,GAAazM,GAAU,IAAI,CAAA,CAIzB,OAAAqL,EAAA,CACF,OAAA7d,EACA,WAAA6L,GACA,OAAQiT,GAAQ,OAAO,CAACK,GAAO/b,KAAW+b,GAAQ/b,GAAO,OAAQ,CAAC,EAClE,OAAQ0b,GAAQ,OAAO,CAACK,GAAO/b,KAAW+b,GAAQ/b,GAAO,OAAQ,CAAC,EAClE,QAAA0b,GACA,OAAAD,EACA,cAAAL,GACA,WAAAI,GACA,aAAAD,GACA,QAAArV,GACA,cAAAmV,GACA,cAAAC,GACA,WAAWpV,IAAA,YAAAA,GAAS,KAAM4U,EAAYc,GAAYpB,EAAM,UACxD,WAAAqB,GACA,YAAAC,GACA,UAAW,OACX,YAAY5V,IAAA,YAAAA,GAAS,KAAM4U,EAC3B,iBAAkB,IAAI,IAClB5U,GACM,CAAC,CAACA,GAAQ,GAAIA,EAAO,CAAC,EACtBsU,EAAM,QACJ,CAAA,EACAe,GACK,OAAQrV,IAAYsU,EAAM,iBAAiB,IAAItU,GAAQ,EAAE,CAAC,EAC1D,IAAKA,IAAY,CAACA,GAAQ,GAAIA,EAAO,CAAC,CACvD,EACA,QAAS,GAET,aACI2U,GACAje,EAAO,MAAQ4d,EAAM,OAAO,MAC5B5d,EAAO,UAAY4d,EAAM,OAAO,UAChC5d,EAAO,SAAW4d,EAAM,OAAO,SAC/B5d,EAAO,WAAa4d,EAAM,OAAO,WACjC5d,EAAO,QAAU4d,EAAM,OAAO,OACxBA,EAAM,aAAe,EACrBA,EAAM,YAAA,CACnB,EAGGM,GAAaC,IAAaD,IAAa5U,IAAA,YAAAA,GAAS,KAChD8V,GAAU,CAAE,KAAMxB,EAAM,QAAQ,WAAY,EAGzCpL,EACX,EAEM+L,EAA0B,MAC5BrM,GAC4B,CACxB,GAAA,CACO,OAAA,MAAMD,GAAaC,CAAQ,QAC7BO,EAAO,CACZ,OAAA4M,EAAS5M,CAAqB,EACvB,IAAA,CAEf,EAEMrJ,EAAc,MAAOtI,EAAc+G,IAAkB,CACvD,MAAMyK,EAA8B,CAChC,WAAY,eACZ,KAAAxR,EACA,MAAA+G,EACA,WAAY,MAAM,KAAK+V,EAAM,iBAAiB,KAAM,CAAA,CACxD,EAEM,MAAAG,EAAuB,CAACzL,CAAO,CAAC,CAC1C,EAEMgN,EAAgB,MAAOzJ,GAAiC,CAC1D,MAAM0J,EAAY3B,EAAM,OAElBtL,EAAgC,CAClC,WAAY,iBACZ,SAAUuD,GAAY+H,EAAM,QAAQ,CAAC,EAAE,EAC3C,EAEMpL,EAAY,MAAM+L,EAAwB,CAACjM,CAAO,CAAC,EAErDE,GAAa,MACb,MAAMuM,EAAS,CACX,KAAM,SACN,UAAWvM,EAAU,IAAI,EACzB,SACI,CAAC,YAAa,UAAU,EAAE,SAASoL,EAAM,SAAS,cAAc,GAChE2B,EAAU,SACJ1J,EACA,MAAA,CACb,CAET,EAEM2J,EAAc,MAAOxW,GAAoB,CAK3C,MAAM+U,EAAuB,CAJO,CAChC,WAAY,eACZ,QAAA/U,CACJ,CACqC,EAAG,CAAE,KAAM,QAAS,CAC7D,EAEMyW,EAAa,MAAO5J,GAAsB,CAKtC,MAAAkI,EAAuB,CAJM,CAC/B,WAAY,cACZ,SAAAlI,CACJ,CACqC,CAAC,CAC1C,EAEM6J,EAAU,MAAOpW,GAAqB,CACxC,MAAMiW,EAAY3B,EAAM,OAElBtL,EAAiC,CACnC,WAAY,kBACZ,UAAWhJ,EAAQ,EACvB,EAEMkJ,EAAY,MAAMuL,EAAuB,CAACzL,CAAO,CAAC,EAEpDE,GAAa,MACb,MAAMuM,EAAS,CACX,KAAM,SACN,UAAWvM,EAAU,IAAI,EACzB,SACI,CAAC,YAAa,UAAU,EAAE,SAASoL,EAAM,SAAS,cAAc,GAChE2B,EAAU,UAAY,KAChBjW,EAAQ,OAAO,GACf,MAAA,CACb,CAET,EAEMqW,EAAa,IAAM,CACrB,MAAM3B,EAAwB,CAAE,GAAGJ,EAAM,OAAQ,OAAQ,MAAU,EAC7DC,EAAA,CAAE,OAAQG,EAAW,EAC3BK,GAAqBL,EAAW,EAAI,CACxC,EAEM4B,EAAarF,GAAiB,CAC1BsD,EAAA,CAAE,OAAQD,EAAM,OAAO,OAAQvc,GAAMA,GAAKkZ,CAAK,EAAG,CAC5D,EAEMwE,EAAW,MAAO/e,EAAqBie,EAAW,GAAO4B,EAAO,KAAS,OAC3E,MAAM3N,EAA6B,CAAC,EAEhC2N,GAAQjC,EAAM,SAAS,mBACvB1L,EAAS,KAAK,CACV,WAAY,kBACZ,MAAO,CAAE,QAAS,EAAM,EACxB,OAAQ0L,EAAM,SAAS,uBACvB,MAAO,CAAA,CACV,EAGD5d,GAAA,MAAAA,EAAQ,WACRkS,EAAS,KAAK,CACV,WAAY,eACZ,UAAWlS,EAAO,SAAA,CACrB,EAGL,MAAMwS,GAAY,MAAMuL,EAAuB7L,EAAUlS,EAAQie,CAAQ,EAEzE,GAAIzL,IAAa,MAAQqN,GAAQjC,EAAM,SAAS,kBAAmB,CACzD,MAAAvU,GAAWmJ,GAAU,CAAC,EAC5BqL,EAAM,CAAE,yBAAyB3X,EAAAmD,GAAS,CAAC,IAAV,YAAAnD,EAAa,GAAI,CAAA,CAE1D,EAEM4Z,EAAiB,MAAO7B,EAAW,KAAU,CAC/C,MAAMje,EAAqB,CACvB,GAAG4d,EAAM,OACT,UAAW,OACX,OACI,KAAK,OAAOA,EAAM,OAAO,QAAU,GAAKA,EAAM,YAAY,OAAO,EAC7DA,EAAM,YAAY,SAAW,MACzC,EAEA,MAAMG,EAAuB,CAAA,EAAI/d,EAAQie,CAAQ,CACrD,EAEM8B,EAAiB,SAAY,CAC/B,MAAMhC,EAAuB,CAAI,EAAA,EAAE,CACvC,EAEMiC,EAAQ,MAAO1W,EAAkB6K,IAAiB,CACpD,MAAMoL,EAAY3B,EAAM,OAElBtL,EAA+B,CACjC,WAAY,gBACZ,UAAWhJ,EAAQ,GACnB,IAAA6K,CACJ,EAEM3B,GAAY,MAAMuL,EAAuB,CAACzL,CAAO,CAAC,EAEpDE,IAAa,MACb,MAAMuM,EAAS,CACX,KAAM,SACN,UAAWvM,GAAU,IAAI,EACzB,SACI,CAAC,YAAa,UAAU,EAAE,SAASoL,EAAM,SAAS,cAAc,GAChE2B,EAAU,UAAY,KAChBjW,EAAQ,OAAO,GACf,MAAA,CACb,CAET,EAEM2W,EAAkB,MAAOC,GAAsC,CAC3DrC,EAAA,CAAE,YAAa,CAAE,GAAGD,EAAM,YAAa,GAAGsC,CAAY,EAAG,EAC/D,IAAIlC,EAAYJ,EAAM,OAClBsC,EAAY,UACAlC,EAAA,CACR,GAAGA,EACH,OAAQJ,EAAM,OAAO,OACf,KAAK,MAAMA,EAAM,OAAO,OAASsC,EAAY,OAAO,EAAIA,EAAY,QACpE,MACV,GAMJ,MAAMnC,EAAuB,CAJU,CACnC,WAAY,kBACZ,YAAAmC,CACJ,CACqC,EAAGlC,EAAW,EAAI,CAC3D,EAEMjD,EAAa/J,GAAwB,CACjC6M,EAAA,CACF,iBAAkB,IAAI,IAClBD,EAAM,aACD,OACItU,GACG0H,GAAQ,OACPA,GAAQ,QAAU,CAAC1H,EAAQ,QAC3B0H,GAAQ,UAAY1H,EAAQ,QAC5B0H,GAAQ,WAAa1H,EAAQ,SAC7B0H,GAAQ,aAAe,CAAC1H,EAAQ,OAAA,EAExC,IAAKA,GAAY,CAACA,EAAQ,GAAIA,CAAO,CAAC,CAAA,CAC/C,CACH,CACL,EAEM6W,EAAe,MAAOrY,GAAgB,CACxC,MAAMiX,EAAS,CACX,GAAGnB,EAAM,OACT,SAAU9V,EACV,OAAQ,EACR,UAAW,OACX,OAAQ8V,EAAM,OAAO,OACf,CAAE,GAAGA,EAAM,OAAO,OAAQ,QAAS,OAAW,QAAS,QACvD,MAAA,CACT,CACL,EAEMwC,EAAc,SAAY,OACxB,GAAA,GAACla,EAAA0X,EAAM,UAAN,MAAA1X,EAAe,OAChB,OAGJ,MAAMoM,EAA0B,CAC5B,WAAY,eACZ,UAAWsL,EAAM,QAAQ,EAC7B,EAEMI,EAAwBJ,EAAM,WAC9B,CACI,GAAGA,EAAM,WACT,UAAW,OACX,OACI,KAAK,OAAOA,EAAM,WAAW,QAAU,GAAKA,EAAM,YAAY,OAAO,EACjEA,EAAM,YAAY,SAAW,MACzC,EACA,CAAC,YAAa,UAAU,EAAE,SAASA,EAAM,SAAS,cAAc,EAC9D,CAAE,KAAM,QAAS,SAAUA,EAAM,QAAQ,OAAO,EAChD,EAAA,CAAE,KAAM,SAAU,SAAUA,EAAM,QAAQ,OAAO,EAAG,EAE1C,MAAMG,EAAuB,CAACzL,CAAO,EAAG0L,CAAS,GAElD,MACboB,GAAU,CAAE,KAAMxB,EAAM,QAAQ,YAAa,CAErD,EAEMyC,EAAa,MACfC,EACAC,EACAC,IACC,CACD,MAAMtO,EAAWoO,EAAI,IAChBxY,KAA2B,CACxB,WAAY,cACZ,UAAWA,GACX,QAAAyY,CACJ,EACJ,EAGMvgB,GAAqB,CAAE,GAAG4d,EAAM,OAAQ,UAAW,MAAU,EAGnE,GAFkB,MAAMG,EAAuB7L,EAAUlS,GAAQ,EAAI,GAEpD,MAAQugB,GAAWze,GAAc,eAAgB,CACxD,MAAA2e,GAASF,EACTD,EAAI,OAAS,EACT,uBACA,sBACJA,EAAI,OAAS,EACX,mBACA,kBACF/S,GAAO3K,GAAoBgb,EAAM,QAAQ6C,EAAM,EAAGH,EAAI,MAAM,EAIlElB,GAAU,CAAE,KAAA7R,GAAM,KAAMiT,EAHX,IAAM,CACfH,EAAWC,EAAKC,EAAUze,GAAc,WAAaA,GAAc,QAAS,EAAK,CACrF,EAC2C,OAAW,CAAA,CAE9D,EAEMud,EAAW,MAAO5M,GAAyB,CAC7CoL,EAAM,CAAE,QAASD,EAAM,SAAW,CAACnL,EAAO,MAAAA,EAAO,CACrD,EAEMiO,EAAY,MAAOC,EAAiBC,IAAsB,CAC5DC,EAAgBvX,GACPsU,EAAM,iBAAiB,IAAItU,EAAQ,EAAE,EAGnC,CACH,GAAGA,EACH,OAAQsU,EAAM,OAAO,OAAQpW,IACrBmZ,EAAM,SAASnZ,GAAM,EAAE,EAChB,GACAoZ,EAAQ,SAASpZ,GAAM,EAAE,EACzB,GAEA8B,EAAQ,OAAO,UAAWpB,GAAMA,EAAE,IAAMV,GAAM,EAAE,GAAK,CAEnE,CACL,EAbW8B,CAcd,EAED,MAAM4I,EAA+B,CAAC,EAChC0L,EAAA,iBAAiB,QAAStU,GAAY,CACxC4I,EAAS,KAAK,CACV,WAAY,aACZ,UAAW5I,EAAQ,GACnB,SAAUA,EAAQ,OAAO,IAAK9B,IAAUA,GAAM,EAAE,CAAA,CACnD,CAAA,CACJ,EAED,MAAMuW,EAAuB7L,CAAQ,CACzC,EAEM1H,EAAa,MAAOsW,EAAmCrW,IAAqB,CAC9EoW,EAAgBvX,GACZwX,EAAW,SAASxX,EAAQ,EAAE,EAAI,CAAE,GAAGA,EAAS,QAAAmB,GAAYnB,CAChE,EAEA,MAAM4I,EAAW4O,EAAW,IACvB5C,IAAkC,CAC/B,WAAY,cACZ,UAAAA,EACA,QAAAzT,CACJ,EACJ,EAEA,MAAMsT,EAAuB7L,CAAQ,CACzC,EAEM5H,EAAY,MAAOwW,EAAmCvW,IAAoB,CAC5EsW,EAAgBvX,IACZwX,EAAW,SAASxX,GAAQ,EAAE,EAAI,CAAE,GAAGA,GAAS,OAAAiB,GAAWjB,EAC/D,EAEA,MAAM4I,EAAW4O,EAAW,IACvB5C,KAAiC,CAC9B,WAAY,aACZ,UAAAA,GACA,OAAA3T,CACJ,EACJ,EAEMvK,EAAqB,CAAE,GAAG4d,EAAM,OAAQ,UAAW,MAAU,EAE7D,MAAAG,EAAuB7L,EAAUlS,CAAM,CACjD,EAEM+gB,EAAmBvf,GAAkB,CACjCqc,EAAA,CACF,aAAcrc,EACd,aAAcoc,EAAM,aAAe,CAAA,CACtC,EAGG,CAACA,EAAM,OAAO,MAAQpc,GAASS,GAAa,IAAM,CAAC2b,EAAM,OAChDmB,EAAA,CAAE,KAAM,QAAS,OAAQnB,EAAM,OAAO,QAAU,EAAI,CAErE,EAEMoD,GAAa,MAAOC,GAAmB,CACzC,MAAMjhB,EAAqB,CAAE,GAAG4d,EAAM,OAAQ,OAAAqD,CAAO,EACrD5C,GAAqBre,EAAQ4d,EAAM,OAAO,QAAU,IAAI,EAClDC,EAAA,CAAE,OAAA7d,EAAQ,CACpB,EAEMof,GAAY,MAAO7E,GAAiB,CACtCsD,EAAM,CAAE,OAAQ,CAACtD,CAAK,EAAG,EACrBA,GACA,OAAO,WAAW,IAAMqF,EAAUrF,CAAK,EAAG,GAAK,CAEvD,EAEM2G,EAAkBpZ,GAAe,CAC7B+V,EAAA,CACF,iBAAkB,IAAI,IAClBD,EAAM,aACD,OAAQtU,GACLA,EAAQ,IAAMxB,EACR,CAAC8V,EAAM,iBAAiB,IAAItU,EAAQ,EAAE,EACtCsU,EAAM,iBAAiB,IAAItU,EAAQ,EAAE,CAAA,EAE9C,IAAKA,GAAY,CAACA,EAAQ,GAAIA,CAAO,CAAC,CAAA,CAC/C,CACH,CACL,EAEM6X,GAAO,MAAO5G,GAAiB,CAC7BA,EAAM,OACNqF,EAAUrF,CAAK,EACfA,EAAM,KAAK,EAEnB,EAEM6G,EAAc,CAAC/K,EAAmBgL,IAAqB,CACrD,GAAA,CAACzD,EAAM,QACP,OAGJ,MAAMtU,EAAUsU,EAAM,QAChB0D,EAAU,SAAY,CACxB,OAAO,aAAa3D,CAAc,EACjBA,EAAA,EAEjB,MAAMtH,GAAOuH,EAAM,UACnB,GAAI,CAACvH,GACD,OAGJ,MAAMnE,EAA6B,CAC/B,CACI,WAAY,iBACZ,UAAW5I,EAAQ,GACnB,KAAA+M,EACJ,EACA,CACI,WAAY,cACZ,UAAW/M,EAAQ,EAAA,CAE3B,EAEMkJ,GAAY,MAAM+L,EAAwBrM,CAAQ,EAExD,GAAIM,IAAa,MAAQ6D,KAASuH,EAAM,UAAW,CACzC,MAAA2D,GAAiB/O,GAAU,IAAI,EAC/BqL,EAAA,CACF,QAAS0D,GACT,UAAW,OACX,WAAY,EAAA,CACf,CAAA,CAET,EAEA1D,EAAM,CAAE,UAAWxH,EAAM,WAAY,GAAO,EACxCgL,EACQC,EAAA,EACD,CAAC3D,GAAkBC,EAAM,SAAS,iBAAmB,IAC5DD,EAAiB,OAAO,WAAW2D,EAAS1D,EAAM,SAAS,iBAAmB,GAAI,EAE1F,EAEM4D,GAAc,MAAOxY,EAAiBlI,EAAc+G,IAAkB,CAQlE,MAAAkW,EAAuB,CAPO,CAChC,WAAY,eACZ,QAAA/U,EACA,KAAAlI,EACA,MAAA+G,CACJ,CAEqC,CAAC,CAC1C,EAEMgZ,EAAkBY,GAA0D,CACxE5D,EAAA,CACF,aAAcD,EAAM,aAAa,IAAKtU,GAAYmY,EAASnY,CAAO,CAAC,EACnE,QAASsU,EAAM,QAAU6D,EAAS7D,EAAM,OAAO,EAAI,OACnD,iBAAkB,IAAI,IAClB,MAAM,KAAKA,EAAM,iBAAiB,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC9V,EAAIwB,CAAO,IAAM,CAChExB,EACA2Z,EAASnY,CAAO,CACnB,CAAA,CAAA,CACL,CACH,CACL,EAEA,aAAMyV,EAASvC,KAAwB,GAAM,EAAI,EAE1C,CACH,YAAApT,EACA,cAAAkW,EACA,YAAAE,EACA,WAAAC,EACA,QAAAC,EACA,IAAK,IAAa9B,EAClB,WAAA+B,EACA,UAAAC,EACA,SAAAb,EACA,eAAAe,EACA,eAAAC,EACA,MAAAC,EACA,gBAAAC,EACA,UAAAlF,EACA,aAAAoF,EACA,YAAAC,EACA,WAAAC,EACA,SAAAhB,EACA,UAAAqB,EACA,WAAAlW,EACA,UAAAF,EACA,gBAAAyW,EACA,WAAAC,GACA,UAAAzD,EACA,eAAA2D,EACA,KAAAC,GACA,YAAAC,EACA,YAAAI,EACJ,CACJ,CCjzBA,eAAe3B,IAAO,CACZ,MAAA6B,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAe,SAAS,eAAe,mBAAmB,EAG1DtL,EAAO,OAAO,qBACpB,GAAI,CAACA,EACD,OAGE,MAAApT,EAAQ,MAAMya,GAAY,CAC5B,OAAQrH,EAAK,OACb,SAAUA,EAAK,SACf,YAAaA,EAAK,YAClB,QAASA,EAAK,QACd,OAAQ,EAAQA,EAAK,MAAM,CAC9B,EAMD,GAJIqL,GACI,IAAAE,GAAK,CAAE,OAAQF,EAAY,MAAO,CAAE,MAAAze,CAAA,EAAS,EAGjD0e,EAAc,CAEdA,EAAa,UAAY,GAGnB,MAAA/D,EAAQ3a,EAAM,IAAI,EAClB4e,EAAS,IAAIC,GAAO,CACtB,OAAQH,EACR,MAAO,CACH,SAAU/D,EAAM,SAChB,QAASA,EAAM,QACf,QAASA,EAAM,QACf,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,QAASA,EAAM,QACf,QAAS3a,EAAM,SACf,eAAgBA,EAAM,cACtB,eAAgBA,EAAM,YAAA,CAC1B,CACH,EAGKA,EAAA,UAAW2a,GAAU,CACvBiE,EAAO,KAAK,CACR,SAAUjE,EAAM,SAChB,QAASA,EAAM,QACf,QAASA,EAAM,QACf,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,QAASA,EAAM,OAAA,CAClB,CAAA,CACJ,CAAA,CAET,CAEAiC,GAAK","x_google_ignoreList":[0,1,4,5,16,56]}

